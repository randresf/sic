{"version":3,"sources":["generated/graphql.tsx","components/formElements/IconButton.tsx","ui/formIds.ts","constants/index.ts","utils/formatDate.ts","components/formElements/DisplayMessage.tsx","components/ShouldRender.tsx","components/formElements/Heading.tsx","components/Card.tsx","components/formElements/BoldText.tsx","components/formElements/Text.tsx","components/DisplayPairText.tsx","container/MeetingCard.tsx","components/formElements/PrimaryButton.tsx","container/Meetings.tsx","components/Title.tsx","components/formElements/NeutralButton.tsx","components/formElements/NormalInput.tsx","components/formElements/CancelButton.tsx","components/CancelReservation.tsx","container/ReservationsList.tsx","container/SearchReservation.tsx","pages/Landing.tsx","components/Wrapper.tsx","components/YesNoRadioGroup.tsx","components/formElements/FormikInput.tsx","components/ModalActions.tsx","components/ModalWrapper.tsx","utils/isQuestionDataValid.ts","container/Questions.tsx","utils/isPersonalDataValid.ts","components/formElements/Loading.tsx","utils/truncate.ts","container/PersonalDataForm.tsx","utils/getAgeFromDate.ts","pages/UserData.tsx","components/DownloadPdf.tsx","container/ExternalReservationView.tsx","container/UserReservationView.tsx","container/ReservationView.tsx","pages/Reservation.tsx","components/YesNoButtonGroup.tsx","utils/validUserInfo.ts","pages/Confirm.tsx","pages/Login.tsx","utils/createBetterQuery.ts","utils/notify.ts","urqlClient.tsx","context/LangWrapper.tsx","components/LangDropDown.tsx","theme/components/general.ts","components/ToggleDarkMode.tsx","components/formElements/Divider.tsx","components/Account.tsx","components/formElements/Subtitle.tsx","components/OrganizationTitle.tsx","components/Logo.tsx","components/NavBar.tsx","pages/Dashboard/Title.tsx","components/formElements/Tabs.tsx","components/formElements/Select.tsx","utils/isEmpty.ts","utils/isMeetingDataValid.ts","container/MeetingData.tsx","components/AddCard.tsx","pages/Dashboard/tabs/Meetings.tsx","utils/isPlaceDataValid.ts","container/PlaceData.tsx","container/PlaceCard.tsx","components/DefaultContainer.tsx","pages/Dashboard/tabs/Locations.tsx","utils/isAdminDataValid.ts","container/AdminData.tsx","container/AdminCard.tsx","pages/Dashboard/tabs/Admins.tsx","pages/Dashboard/index.tsx","hooks/useIsAuth.ts","components/Footer.tsx","components/ChangesPwd.tsx","utils/isSettingsAdminDataValid.ts","container/SettingsData.tsx","pages/Settings.tsx","App.tsx","reportWebVitals.ts","theme/index.ts","theme/styles.ts","theme/components/Buttons.ts","theme/components/Icons.ts","theme/components/Tabs.ts","theme/components/Card.ts","theme/components/Links.ts","index.tsx"],"names":["MeetingDataFragmentDoc","gql","MeetingQueryFragmentDoc","UserDataFragmentDoc","AddAdminDocument","AddPlaceDocument","CancelReservationDocument","useCancelReservationMutation","Urql","ConfirmReservationDocument","DeleteMeetDocument","DeletePlaceDocument","GetUserDocument","useGetUserMutation","LoginDocument","LogoutDocument","SaveMeetingDocument","SaveQuestionDocument","SaveUserDocument","UpdateContactUserDocument","UpdateUserDocument","GetAdminDataDocument","GetPlacesDocument","useGetPlacesQuery","options","query","GetUserByIdDocument","UserDocument","HeartbeatDocument","useHeartbeatQuery","GetMeetingDocument","MeetingsDocument","useMeetingsQuery","SearchReservationDocument","MeetingDeleteDocument","useMeetingDeleteSubscription","handler","MeetingUpdatedDocument","NewMeetingDocument","IconButtonWrapper","iconType","props","style","useStyleConfig","sx","CITIZEN_FORM","RESERVATIONS_LIST","MEETINGS_LIST","NAVABAR_LIST","RESERVATION_VIEW","CONFIRM_RESERVATION","QUESTION_VIEW","QUESTIONS_FORM","QUESTIONS","id","question","INACTIVE_CARD_COLOR","BTN_PROPS","moment","locale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","formatDate","strDate","format","formatAgeDate","DisplayText","defaultMessage","ShouldRender","if","children","Heading","as","Card","styles","flexWrap","flexDir","textAlign","actions","BoldText","fontWeight","Text","size","title","DisplayPair","bold","text","justifyContent","maxWidth","className","isTruncated","MeetingCard","spots","meetingDate","bg","String","alignSelf","mb","PrimaryButton","Meetings","useState","limit","cursor","variables","setVariables","data","fetching","error","useMeetingUpdatedSubscription","useNewMeetingSubscription","meetings","length","nextPage","createdAt","flex","alignItems","map","__typename","reu","mt","to","mr","aria-label","icon","ArrowRight","hasMore","isLoading","onClick","Title","justifyItems","NeutralButton","NormalInput","name","label","htmlFor","placeholder","toLowerCase","CancelButton","rest","w","h","p","whiteSpace","wordWrap","colorScheme","variant","CancelReservation","reservationId","labeled","userId","onChange","cancelReserve","formatMessage","useIntl","toast","useToast","isClosable","duration","onCancel","a","res","description","message","status","canDelete","Delete","ReservationsList","reservations","history","useHistory","r","meeting","push","Search","initialState","citizenId","emptyValue","loading","SearchReservation","showIcon","searchUser","state","setState","updateSate","newValue","searchReservation","ev","trim","user","prevRes","localStorage","setItem","errors","showInput","setInput","btnsProps","ml","align","onBlur","undefined","required","disabled","target","value","Landing","heartBeat","replace","Wrapper","width","YesNoRadioGroup","questions","role","aria-labelledby","marginRight","type","v4","WrapperInput","field","form","isInvalid","touched","data-qa","ModalActions","spacing","ModalWrapper","titulo","contenido","isOpen","onClose","isCentered","isQuestionDataValid","contactNumber","emergenceContact","IS_REQUIRED","IS_INCORRECT","test","Question","React","setError","errorInco","setErrorInco","saveQuestion","updateContactUser","useParams","validateQuestions","values","emergencyPhone","emergencyContact","arrValue","Object","q","find","initialValues","validate","validateInputs","onSubmit","contactData","resEmergencyContact","params","keys","key","questionId","answer","isSubmitting","FormikInput","goBack","color","isPersonalDataValid","document","firstName","lastName","phone","email","birthDate","Number","substr","Loading","isLoaded","blurText","str","total","slice","repeat","PersonalDataForm","age","setAge","setUserId","userExists","setExist","setReservations","setLoading","saveUser","meetingId","booked","onBlurCitizenField","cb","formatedDate","usrReservations","minW","enableReinitialize","stringDate","date","Date","diff_ms","now","getTime","age_dt","Math","abs","getUTCFullYear","getAgeFromDate","input","response","setValues","max","min","pattern","UserData","StyleSheet","create","page","flexDirection","marginTop","fontSize","section","margin","padding","flexGrow","image","marginVertical","marginHorizontal","height","imageLogo","paragraph","PDF","qrText","confirmationMessage","src","ExternalReservationView","reservation","citizen","UserReservationView","m","alt","objectFit","ReservationView","external","saving","setOpen","useSearchReservationQuery","getItem","cancelReservation","direction","fileName","ReservationData","location","useLocation","queryString","parse","search","YesNoButtonGroup","onYes","onNo","yesProps","noProps","useValidUser","onCloseComplete","Confirm","confirm","confirming","setConfirming","useGetUserByIdQuery","userData","userFetching","userError","useGetMeetingQuery","meetingData","meetingFetching","meetingError","objUser","userById","meet","onConfirm","addReservation","Login","login","next","pwd","usr","admin","betterUpdateQuery","cache","qi","result","fn","updateQuery","Notify","createStandaloneToast","app_uri","process","API_URL","subscriptionClient","SubscriptionClient","reconnect","errorExchange","forward","ops$","pipe","tap","includes","window","invalidateQuerys","fName","inspectFields","filter","info","fieldName","forEach","arguments","invalidate","createUrqlClient","createClient","url","REACT_APP_API","requestPolicy","fetchOptions","credentials","exchanges","dedupExchange","cacheExchange","Admin","PlaceResponse","PaginatedMeetings","resolvers","Query","_parent","fieldArgs","entityKey","parentKey","fieldInfos","fieldKey","stringifyVariables","isItInCache","resolve","partial","results","fi","_hasMore","posts","updates","Mutation","logout","_args","_info","que","saveMeeting","_results","deleteMeeting","updateUser","Subscription","newMeeting","isActive","unshift","met","meetingDelete","subscriptionExchange","forwardSubscription","operation","request","fetchExchange","Context","createContext","selectLanguage","e","languages","es","Spanish","en","English","local","navigator","language","lang","LangWrapper","messages","Provider","newLocale","LangDropDown","context","useContext","app_brand","btnProps","borderRadius","_hover","opacity","iconBtnProps","TabSectionStyles","TabStyles","_focus","minHeight","shadow","Toggle","useColorMode","colorMode","toggleColorMode","Sun","Moon","borderColor","borderWidth","DividerWrapper","Account","background","Subtitle","OrganizationTitle","Logo","viewBox","fill","data-name","d","NavBar","position","pl","pr","pt","ToggleDarkMode","Divider","orientation","DashboardTitle","TabsSection","tabs","defaultIndex","tab","index","content","Select","selectProps","isEmpty","element","Boolean","isMeetingDataValid","place","MeetingDataForm","placeData","placeLoading","getUserPlaces","i","noOfLines","paddingTop","paddingBottom","AddCard","border","PlusSquare","setNewMeeting","setDeleteMeeting","setMeeting","getIdMeetMutation","onCloseFormMeeting","onCloseDeleteMeeting","deleteThisMeeting","Edit","MeetingData","isPlaceDataValid","address","PlaceData","addPlaceMutation","placeId","reload","PlaceCard","DefaultContainer","Locations","newPlace","setnewPlace","deletePlaceModal","setdeletePlaceModal","setPlace","idPlaceDelete","onCloseFormPlace","onCloseDeletePlace","deletePlace","isAdminDataValid","username","password","repeatPassword","IS_PWD","IS_PWDNOREPEAT","onlyLetters","AdminData","saveAdmin","register","Admins","adminId","newAdmin","setnewAdmin","useGetAdminDataQuery","onCloseFormAdmin","getAdminsData","AdminCard","Dashboard","useEffect","pathname","useIsAuth","tabData","isLazy","tabIndex","Footer","bottom","borderTop","borderTopColor","alignContent","ChangePwd","onChangenewPwd","newPwd","href","isSettingsAdminDataValid","newPassword","lastname","console","log","SettingsData","useUserQuery","getUserData","Settings","App","urqlClient","exact","path","Reservation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","overrides","global","body","mode","h1","h2","fonts","heading","mono","fontWeights","normal","medium","fontSizes","xs","sm","md","lg","xl","colors","brand","100","200","300","400","500","600","700","800","components","baseStyle","DefaultButton","IconReservation","IconEdit","IconDelete","IconPlus","Tabs","TabSection","Link","extendTheme","ReactDOM","render","StrictMode","theme","getElementById"],"mappings":"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","file":"static/js/main.2d849f94.chunk.js","sourcesContent":["import gql from \"graphql-tag\"\nimport * as Urql from \"urql\"\nexport type Maybe<T> = T | null\nexport type Exact<T extends { [key: string]: unknown }> = {\n  [K in keyof T]: T[K]\n}\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string\n  String: string\n  Boolean: boolean\n  Int: number\n  Float: number\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\n  DateTime: any\n}\n\nexport type Query = {\n  __typename?: \"Query\"\n  meetings: PaginatedMeetings\n  meeting: MeetingRes\n  meetingsById: Array<Meeting>\n  questions: Array<Question>\n  searchReservation: ReservationResponse\n  userById: UserResponse\n  heartBeat?: Maybe<Admin>\n  getAdminsData: Array<Admin>\n  getUserData: Admin\n  getUserPlaces: PlaceResponse\n}\n\nexport type QueryMeetingsArgs = {\n  cursor?: Maybe<Scalars[\"String\"]>\n  limit: Scalars[\"Int\"]\n}\n\nexport type QueryMeetingArgs = {\n  id: Scalars[\"String\"]\n}\n\nexport type QueryMeetingsByIdArgs = {\n  ids: Array<Scalars[\"String\"]>\n}\n\nexport type QuerySearchReservationArgs = {\n  reservationId: Scalars[\"String\"]\n}\n\nexport type QueryUserByIdArgs = {\n  userId: Scalars[\"String\"]\n}\n\nexport type PaginatedMeetings = {\n  __typename?: \"PaginatedMeetings\"\n  meetings: Array<Meeting>\n  hasMore: Scalars[\"Boolean\"]\n}\n\nexport type Meeting = {\n  __typename?: \"Meeting\"\n  id: Scalars[\"String\"]\n  title: Scalars[\"String\"]\n  spots: Scalars[\"Float\"]\n  meetingDate: Scalars[\"DateTime\"]\n  createdAt: Scalars[\"String\"]\n  updatedAt: Scalars[\"String\"]\n  isActive: Scalars[\"String\"]\n  hasReservation: Scalars[\"Boolean\"]\n  place: Place\n}\n\nexport type Place = {\n  __typename?: \"Place\"\n  id: Scalars[\"String\"]\n  name: Scalars[\"String\"]\n  address: Scalars[\"String\"]\n  createdAt: Scalars[\"String\"]\n  updatedAt: Scalars[\"String\"]\n  isActive: Scalars[\"String\"]\n}\n\nexport type MeetingRes = {\n  __typename?: \"MeetingRes\"\n  meeting?: Maybe<Meeting>\n  errors?: Maybe<Array<ErrorField>>\n}\n\nexport type ErrorField = {\n  __typename?: \"ErrorField\"\n  field: Scalars[\"String\"]\n  message: Scalars[\"String\"]\n}\n\nexport type Question = {\n  __typename?: \"Question\"\n  id: Scalars[\"String\"]\n  questionId: Scalars[\"String\"]\n  answer: Scalars[\"String\"]\n}\n\nexport type ReservationResponse = {\n  __typename?: \"ReservationResponse\"\n  errors?: Maybe<Array<ErrorField>>\n  reservation?: Maybe<Reservation>\n}\n\nexport type Reservation = {\n  __typename?: \"Reservation\"\n  id: Scalars[\"String\"]\n  meetingId: Scalars[\"String\"]\n  createdAt: Scalars[\"String\"]\n  updatedAt: Scalars[\"String\"]\n  qrText: Scalars[\"String\"]\n  citizen: User\n  meeting: Meeting\n}\n\nexport type User = {\n  __typename?: \"User\"\n  id: Scalars[\"String\"]\n  document: Scalars[\"String\"]\n  firstName: Scalars[\"String\"]\n  lastName: Scalars[\"String\"]\n  phone: Scalars[\"Float\"]\n  contactNumber: Scalars[\"Float\"]\n  emergenceContact: Scalars[\"String\"]\n  createdAt: Scalars[\"String\"]\n  updatedAt: Scalars[\"String\"]\n  email: Scalars[\"String\"]\n  birthDate: Scalars[\"String\"]\n  reservations: Array<Reservation>\n}\n\nexport type UserResponse = {\n  __typename?: \"UserResponse\"\n  user?: Maybe<User>\n  errors?: Maybe<Array<ErrorField>>\n  userId: Scalars[\"String\"]\n}\n\nexport type Admin = {\n  __typename?: \"Admin\"\n  id: Scalars[\"String\"]\n  firstName: Scalars[\"String\"]\n  lastName: Scalars[\"String\"]\n  phone: Scalars[\"Float\"]\n  email: Scalars[\"String\"]\n  username: Scalars[\"String\"]\n  password: Scalars[\"String\"]\n  createdAt: Scalars[\"String\"]\n  updatedAt: Scalars[\"String\"]\n  isActive: Scalars[\"Boolean\"]\n}\n\nexport type PlaceResponse = {\n  __typename?: \"PlaceResponse\"\n  errors?: Maybe<Array<ErrorField>>\n  place?: Maybe<Array<Place>>\n}\n\nexport type Mutation = {\n  __typename?: \"Mutation\"\n  saveMeeting: MeetingRes\n  deleteMeeting: MeetingRes\n  registrerQuestion: QuestionResponse\n  addReservation: ReservationResponse\n  cancelReservation: Scalars[\"Boolean\"]\n  user: UserResponse\n  createUser: UserResponse\n  saveUser: UserResponse\n  updateContactUser: UserResponse\n  login: LoginResponse\n  logout: Scalars[\"Boolean\"]\n  register: LoginResponse\n  updateUser: LoginResponse\n  addPlace: PlaceResponse\n  deletePlace: PlaceResponse\n}\n\nexport type MutationSaveMeetingArgs = {\n  meetingId?: Maybe<Scalars[\"String\"]>\n  data: MeetingInput\n}\n\nexport type MutationDeleteMeetingArgs = {\n  meetingId?: Maybe<Scalars[\"String\"]>\n}\n\nexport type MutationRegistrerQuestionArgs = {\n  userId: Scalars[\"String\"]\n  questions: Array<QuestionType>\n}\n\nexport type MutationAddReservationArgs = {\n  data: ReservationType\n}\n\nexport type MutationCancelReservationArgs = {\n  userId: Scalars[\"String\"]\n  reservationId: Scalars[\"String\"]\n}\n\nexport type MutationUserArgs = {\n  document: Scalars[\"String\"]\n}\n\nexport type MutationCreateUserArgs = {\n  data: UserInput\n}\n\nexport type MutationSaveUserArgs = {\n  userId?: Maybe<Scalars[\"String\"]>\n  data: UserInput\n}\n\nexport type MutationUpdateContactUserArgs = {\n  contactData: UserContactType\n  userId: Scalars[\"String\"]\n}\n\nexport type MutationLoginArgs = {\n  password: Scalars[\"String\"]\n  username: Scalars[\"String\"]\n}\n\nexport type MutationRegisterArgs = {\n  options: AdminInput\n}\n\nexport type MutationUpdateUserArgs = {\n  userData: UserUpdateInput\n}\n\nexport type MutationAddPlaceArgs = {\n  placeId?: Maybe<Scalars[\"String\"]>\n  data: PlaceInput\n}\n\nexport type MutationDeletePlaceArgs = {\n  placeId: Scalars[\"String\"]\n}\n\nexport type MeetingInput = {\n  id?: Maybe<Scalars[\"String\"]>\n  title: Scalars[\"String\"]\n  spots: Scalars[\"Float\"]\n  meetingDate: Scalars[\"String\"]\n  hasReservation?: Maybe<Scalars[\"Boolean\"]>\n  place: Scalars[\"String\"]\n  isActive: Scalars[\"String\"]\n}\n\nexport type QuestionResponse = {\n  __typename?: \"QuestionResponse\"\n  error?: Maybe<Scalars[\"String\"]>\n  saved?: Maybe<Scalars[\"Boolean\"]>\n}\n\nexport type QuestionType = {\n  questionId: Scalars[\"String\"]\n  answer: Scalars[\"String\"]\n}\n\nexport type ReservationType = {\n  userId: Scalars[\"String\"]\n  meetingId: Scalars[\"String\"]\n}\n\nexport type UserInput = {\n  document: Scalars[\"String\"]\n  firstName: Scalars[\"String\"]\n  lastName: Scalars[\"String\"]\n  phone: Scalars[\"Float\"]\n  email: Scalars[\"String\"]\n  birthDate: Scalars[\"String\"]\n  emergenceContac?: Maybe<Scalars[\"String\"]>\n  contactNumer?: Maybe<Scalars[\"Float\"]>\n}\n\nexport type UserContactType = {\n  contactNumber: Scalars[\"Float\"]\n  emergenceContact: Scalars[\"String\"]\n}\n\nexport type LoginResponse = {\n  __typename?: \"LoginResponse\"\n  errors?: Maybe<Array<ErrorField>>\n  admin?: Maybe<Admin>\n}\n\nexport type AdminInput = {\n  firstName: Scalars[\"String\"]\n  lastName: Scalars[\"String\"]\n  phone: Scalars[\"Float\"]\n  email: Scalars[\"String\"]\n  username: Scalars[\"String\"]\n  password: Scalars[\"String\"]\n}\n\nexport type UserUpdateInput = {\n  firstName: Scalars[\"String\"]\n  lastName: Scalars[\"String\"]\n  phone: Scalars[\"Float\"]\n  email: Scalars[\"String\"]\n  password: Scalars[\"String\"]\n  newPassword: Scalars[\"String\"]\n}\n\nexport type PlaceInput = {\n  id?: Maybe<Scalars[\"String\"]>\n  name: Scalars[\"String\"]\n  address: Scalars[\"String\"]\n  isActive?: Maybe<Scalars[\"String\"]>\n}\n\nexport type Subscription = {\n  __typename?: \"Subscription\"\n  meetingUpdated: MeetingUpdated\n  newMeeting: MeetingUpdated\n  meetingDelete: MeetingDeleted\n  newReservation: SubsNewReservation\n}\n\nexport type MeetingUpdated = {\n  __typename?: \"MeetingUpdated\"\n  data: Meeting\n}\n\nexport type MeetingDeleted = {\n  __typename?: \"MeetingDeleted\"\n  data: Scalars[\"String\"]\n}\n\nexport type SubsNewReservation = {\n  __typename?: \"SubsNewReservation\"\n  meetingId: Scalars[\"String\"]\n}\n\nexport type MeetingDataFragment = { __typename?: \"Meeting\" } & Pick<\n  Meeting,\n  \"id\" | \"title\" | \"meetingDate\" | \"spots\" | \"isActive\" | \"createdAt\"\n>\n\nexport type MeetingQueryFragment = { __typename?: \"Meeting\" } & Pick<\n  Meeting,\n  \"hasReservation\"\n> & {\n    place: { __typename?: \"Place\" } & Pick<Place, \"id\" | \"name\" | \"address\">\n  } & MeetingDataFragment\n\nexport type UserDataFragment = { __typename?: \"User\" } & Pick<\n  User,\n  \"id\" | \"document\" | \"lastName\" | \"firstName\" | \"phone\" | \"email\" | \"birthDate\"\n> & {\n    reservations: Array<\n      { __typename?: \"Reservation\" } & Pick<\n        Reservation,\n        \"id\" | \"qrText\" | \"meetingId\"\n      > & {\n          meeting: { __typename?: \"Meeting\" } & Pick<\n            Meeting,\n            \"title\" | \"meetingDate\"\n          >\n        }\n    >\n  }\n\nexport type AddAdminMutationVariables = Exact<{\n  data: AdminInput\n}>\n\nexport type AddAdminMutation = { __typename?: \"Mutation\" } & {\n  register: { __typename?: \"LoginResponse\" } & {\n    admin?: Maybe<{ __typename?: \"Admin\" } & Pick<Admin, \"id\">>\n    errors?: Maybe<\n      Array<{ __typename?: \"ErrorField\" } & Pick<ErrorField, \"message\">>\n    >\n  }\n}\n\nexport type AddPlaceMutationVariables = Exact<{\n  placeId: Scalars[\"String\"]\n  data: PlaceInput\n}>\n\nexport type AddPlaceMutation = { __typename?: \"Mutation\" } & {\n  addPlace: { __typename?: \"PlaceResponse\" } & {\n    place?: Maybe<\n      Array<\n        { __typename?: \"Place\" } & Pick<Place, \"name\" | \"address\" | \"isActive\">\n      >\n    >\n    errors?: Maybe<\n      Array<\n        { __typename?: \"ErrorField\" } & Pick<ErrorField, \"field\" | \"message\">\n      >\n    >\n  }\n}\n\nexport type CancelReservationMutationVariables = Exact<{\n  reservationId: Scalars[\"String\"]\n  userId: Scalars[\"String\"]\n}>\n\nexport type CancelReservationMutation = { __typename?: \"Mutation\" } & Pick<\n  Mutation,\n  \"cancelReservation\"\n>\n\nexport type ConfirmReservationMutationVariables = Exact<{\n  meetingId: Scalars[\"String\"]\n  userId: Scalars[\"String\"]\n}>\n\nexport type ConfirmReservationMutation = { __typename?: \"Mutation\" } & {\n  addReservation: { __typename?: \"ReservationResponse\" } & {\n    errors?: Maybe<\n      Array<{ __typename?: \"ErrorField\" } & Pick<ErrorField, \"message\">>\n    >\n    reservation?: Maybe<\n      { __typename?: \"Reservation\" } & Pick<Reservation, \"id\">\n    >\n  }\n}\n\nexport type DeleteMeetMutationVariables = Exact<{\n  meetingId: Scalars[\"String\"]\n}>\n\nexport type DeleteMeetMutation = { __typename?: \"Mutation\" } & {\n  deleteMeeting: { __typename?: \"MeetingRes\" } & {\n    meeting?: Maybe<\n      { __typename?: \"Meeting\" } & Pick<\n        Meeting,\n        | \"id\"\n        | \"title\"\n        | \"spots\"\n        | \"meetingDate\"\n        | \"createdAt\"\n        | \"updatedAt\"\n        | \"isActive\"\n      >\n    >\n    errors?: Maybe<\n      Array<\n        { __typename?: \"ErrorField\" } & Pick<ErrorField, \"field\" | \"message\">\n      >\n    >\n  }\n}\n\nexport type DeletePlaceMutationVariables = Exact<{\n  placeId: Scalars[\"String\"]\n}>\n\nexport type DeletePlaceMutation = { __typename?: \"Mutation\" } & {\n  deletePlace: { __typename?: \"PlaceResponse\" } & {\n    place?: Maybe<Array<{ __typename?: \"Place\" } & Pick<Place, \"id\">>>\n    errors?: Maybe<\n      Array<\n        { __typename?: \"ErrorField\" } & Pick<ErrorField, \"field\" | \"message\">\n      >\n    >\n  }\n}\n\nexport type GetUserMutationVariables = Exact<{\n  citizenId: Scalars[\"String\"]\n}>\n\nexport type GetUserMutation = { __typename?: \"Mutation\" } & {\n  user: { __typename?: \"UserResponse\" } & {\n    user?: Maybe<{ __typename?: \"User\" } & UserDataFragment>\n    errors?: Maybe<\n      Array<{ __typename?: \"ErrorField\" } & Pick<ErrorField, \"message\">>\n    >\n  }\n}\n\nexport type LoginMutationVariables = Exact<{\n  usr: Scalars[\"String\"]\n  pwd: Scalars[\"String\"]\n}>\n\nexport type LoginMutation = { __typename?: \"Mutation\" } & {\n  login: { __typename?: \"LoginResponse\" } & {\n    admin?: Maybe<\n      { __typename?: \"Admin\" } & Pick<Admin, \"firstName\" | \"lastName\" | \"email\">\n    >\n    errors?: Maybe<\n      Array<{ __typename?: \"ErrorField\" } & Pick<ErrorField, \"message\">>\n    >\n  }\n}\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never }>\n\nexport type LogoutMutation = { __typename?: \"Mutation\" } & Pick<\n  Mutation,\n  \"logout\"\n>\n\nexport type SaveMeetingMutationVariables = Exact<{\n  meetingId: Scalars[\"String\"]\n  data: MeetingInput\n}>\n\nexport type SaveMeetingMutation = { __typename?: \"Mutation\" } & {\n  saveMeeting: { __typename?: \"MeetingRes\" } & {\n    meeting?: Maybe<\n      { __typename?: \"Meeting\" } & Pick<\n        Meeting,\n        | \"id\"\n        | \"title\"\n        | \"spots\"\n        | \"meetingDate\"\n        | \"createdAt\"\n        | \"updatedAt\"\n        | \"isActive\"\n      >\n    >\n    errors?: Maybe<\n      Array<\n        { __typename?: \"ErrorField\" } & Pick<ErrorField, \"field\" | \"message\">\n      >\n    >\n  }\n}\n\nexport type SaveQuestionMutationVariables = Exact<{\n  questions: Array<QuestionType>\n  userId: Scalars[\"String\"]\n}>\n\nexport type SaveQuestionMutation = { __typename?: \"Mutation\" } & {\n  registrerQuestion: { __typename?: \"QuestionResponse\" } & Pick<\n    QuestionResponse,\n    \"error\" | \"saved\"\n  >\n}\n\nexport type SaveUserMutationVariables = Exact<{\n  input: UserInput\n  userId?: Maybe<Scalars[\"String\"]>\n}>\n\nexport type SaveUserMutation = { __typename?: \"Mutation\" } & {\n  saveUser: { __typename?: \"UserResponse\" } & {\n    user?: Maybe<{ __typename?: \"User\" } & Pick<User, \"id\">>\n    errors?: Maybe<\n      Array<{ __typename?: \"ErrorField\" } & Pick<ErrorField, \"message\">>\n    >\n  }\n}\n\nexport type UpdateContactUserMutationVariables = Exact<{\n  userId: Scalars[\"String\"]\n  contactData: UserContactType\n}>\n\nexport type UpdateContactUserMutation = { __typename?: \"Mutation\" } & {\n  updateContactUser: { __typename?: \"UserResponse\" } & Pick<\n    UserResponse,\n    \"userId\"\n  >\n}\n\nexport type UpdateUserMutationVariables = Exact<{\n  userData: UserUpdateInput\n}>\n\nexport type UpdateUserMutation = { __typename?: \"Mutation\" } & {\n  updateUser: { __typename?: \"LoginResponse\" } & {\n    errors?: Maybe<\n      Array<\n        { __typename?: \"ErrorField\" } & Pick<ErrorField, \"field\" | \"message\">\n      >\n    >\n    admin?: Maybe<\n      { __typename?: \"Admin\" } & Pick<\n        Admin,\n        \"firstName\" | \"lastName\" | \"email\" | \"phone\"\n      >\n    >\n  }\n}\n\nexport type GetAdminDataQueryVariables = Exact<{ [key: string]: never }>\n\nexport type GetAdminDataQuery = { __typename?: \"Query\" } & {\n  getAdminsData: Array<\n    { __typename?: \"Admin\" } & Pick<\n      Admin,\n      \"id\" | \"firstName\" | \"lastName\" | \"email\" | \"phone\" | \"username\"\n    >\n  >\n}\n\nexport type GetPlacesQueryVariables = Exact<{ [key: string]: never }>\n\nexport type GetPlacesQuery = { __typename?: \"Query\" } & {\n  getUserPlaces: { __typename?: \"PlaceResponse\" } & {\n    place?: Maybe<\n      Array<\n        { __typename?: \"Place\" } & Pick<\n          Place,\n          \"id\" | \"name\" | \"address\" | \"isActive\"\n        >\n      >\n    >\n    errors?: Maybe<\n      Array<\n        { __typename?: \"ErrorField\" } & Pick<ErrorField, \"field\" | \"message\">\n      >\n    >\n  }\n}\n\nexport type GetUserByIdQueryVariables = Exact<{\n  userId: Scalars[\"String\"]\n}>\n\nexport type GetUserByIdQuery = { __typename?: \"Query\" } & {\n  userById: { __typename?: \"UserResponse\" } & {\n    user?: Maybe<{ __typename?: \"User\" } & UserDataFragment>\n    errors?: Maybe<\n      Array<{ __typename?: \"ErrorField\" } & Pick<ErrorField, \"message\">>\n    >\n  }\n}\n\nexport type UserQueryVariables = Exact<{ [key: string]: never }>\n\nexport type UserQuery = { __typename?: \"Query\" } & {\n  getUserData: { __typename?: \"Admin\" } & Pick<\n    Admin,\n    \"firstName\" | \"lastName\" | \"email\" | \"phone\"\n  >\n}\n\nexport type HeartbeatQueryVariables = Exact<{ [key: string]: never }>\n\nexport type HeartbeatQuery = { __typename?: \"Query\" } & {\n  heartBeat?: Maybe<\n    { __typename?: \"Admin\" } & Pick<Admin, \"firstName\" | \"lastName\" | \"email\">\n  >\n}\n\nexport type GetMeetingQueryVariables = Exact<{\n  id: Scalars[\"String\"]\n}>\n\nexport type GetMeetingQuery = { __typename?: \"Query\" } & {\n  meeting: { __typename?: \"MeetingRes\" } & {\n    meeting?: Maybe<{ __typename?: \"Meeting\" } & MeetingDataFragment>\n    errors?: Maybe<\n      Array<{ __typename?: \"ErrorField\" } & Pick<ErrorField, \"message\">>\n    >\n  }\n}\n\nexport type MeetingsQueryVariables = Exact<{\n  limit: Scalars[\"Int\"]\n  cursor?: Maybe<Scalars[\"String\"]>\n}>\n\nexport type MeetingsQuery = { __typename?: \"Query\" } & {\n  meetings: { __typename?: \"PaginatedMeetings\" } & Pick<\n    PaginatedMeetings,\n    \"hasMore\"\n  > & { meetings: Array<{ __typename?: \"Meeting\" } & MeetingQueryFragment> }\n}\n\nexport type GetMeetingsByIdQueryVariables = Exact<{\n  ids: Array<Scalars[\"String\"]>\n}>\n\nexport type GetMeetingsByIdQuery = { __typename?: \"Query\" } & {\n  meetingsById: Array<\n    { __typename?: \"Meeting\" } & Pick<Meeting, \"id\" | \"meetingDate\" | \"title\">\n  >\n}\n\nexport type SearchReservationQueryVariables = Exact<{\n  reservationId: Scalars[\"String\"]\n}>\n\nexport type SearchReservationQuery = { __typename?: \"Query\" } & {\n  searchReservation: { __typename?: \"ReservationResponse\" } & {\n    errors?: Maybe<\n      Array<{ __typename?: \"ErrorField\" } & Pick<ErrorField, \"message\">>\n    >\n    reservation?: Maybe<\n      { __typename?: \"Reservation\" } & Pick<Reservation, \"id\" | \"qrText\"> & {\n          citizen: { __typename?: \"User\" } & Pick<\n            User,\n            \"document\" | \"firstName\" | \"lastName\"\n          >\n          meeting: { __typename?: \"Meeting\" } & Pick<\n            Meeting,\n            \"id\" | \"title\" | \"meetingDate\"\n          >\n        }\n    >\n  }\n}\n\nexport type MeetingDeleteSubscriptionVariables = Exact<{ [key: string]: never }>\n\nexport type MeetingDeleteSubscription = { __typename?: \"Subscription\" } & {\n  meetingDelete: { __typename?: \"MeetingDeleted\" } & Pick<\n    MeetingDeleted,\n    \"data\"\n  >\n}\n\nexport type MeetingUpdatedSubscriptionVariables = Exact<{\n  [key: string]: never\n}>\n\nexport type MeetingUpdatedSubscription = { __typename?: \"Subscription\" } & {\n  meetingUpdated: { __typename?: \"MeetingUpdated\" } & {\n    data: { __typename?: \"Meeting\" } & MeetingQueryFragment\n  }\n}\n\nexport type NewMeetingSubscriptionVariables = Exact<{ [key: string]: never }>\n\nexport type NewMeetingSubscription = { __typename?: \"Subscription\" } & {\n  newMeeting: { __typename?: \"MeetingUpdated\" } & {\n    data: { __typename?: \"Meeting\" } & MeetingQueryFragment\n  }\n}\n\nexport type NewReservationSubscriptionVariables = Exact<{\n  [key: string]: never\n}>\n\nexport type NewReservationSubscription = { __typename?: \"Subscription\" } & {\n  newReservation: { __typename?: \"SubsNewReservation\" } & Pick<\n    SubsNewReservation,\n    \"meetingId\"\n  >\n}\n\nexport const MeetingDataFragmentDoc = gql`\n  fragment MeetingData on Meeting {\n    id\n    title\n    meetingDate\n    spots\n    isActive\n    createdAt\n  }\n`\nexport const MeetingQueryFragmentDoc = gql`\n  fragment MeetingQuery on Meeting {\n    ...MeetingData\n    hasReservation\n    place {\n      id\n      name\n      address\n    }\n  }\n  ${MeetingDataFragmentDoc}\n`\nexport const UserDataFragmentDoc = gql`\n  fragment UserData on User {\n    id\n    document\n    lastName\n    firstName\n    phone\n    email\n    birthDate\n    reservations {\n      id\n      qrText\n      meetingId\n      meeting {\n        title\n        meetingDate\n      }\n    }\n  }\n`\nexport const AddAdminDocument = gql`\n  mutation addAdmin($data: AdminInput!) {\n    register(options: $data) {\n      admin {\n        id\n      }\n      errors {\n        message\n      }\n    }\n  }\n`\n\nexport function useAddAdminMutation() {\n  return Urql.useMutation<AddAdminMutation, AddAdminMutationVariables>(\n    AddAdminDocument\n  )\n}\nexport const AddPlaceDocument = gql`\n  mutation addPlace($placeId: String!, $data: PlaceInput!) {\n    addPlace(placeId: $placeId, data: $data) {\n      place {\n        name\n        address\n        isActive\n      }\n      errors {\n        field\n        message\n      }\n    }\n  }\n`\n\nexport function useAddPlaceMutation() {\n  return Urql.useMutation<AddPlaceMutation, AddPlaceMutationVariables>(\n    AddPlaceDocument\n  )\n}\nexport const CancelReservationDocument = gql`\n  mutation cancelReservation($reservationId: String!, $userId: String!) {\n    cancelReservation(reservationId: $reservationId, userId: $userId)\n  }\n`\n\nexport function useCancelReservationMutation() {\n  return Urql.useMutation<\n    CancelReservationMutation,\n    CancelReservationMutationVariables\n  >(CancelReservationDocument)\n}\nexport const ConfirmReservationDocument = gql`\n  mutation confirmReservation($meetingId: String!, $userId: String!) {\n    addReservation(data: { userId: $userId, meetingId: $meetingId }) {\n      errors {\n        message\n      }\n      reservation {\n        id\n      }\n    }\n  }\n`\n\nexport function useConfirmReservationMutation() {\n  return Urql.useMutation<\n    ConfirmReservationMutation,\n    ConfirmReservationMutationVariables\n  >(ConfirmReservationDocument)\n}\nexport const DeleteMeetDocument = gql`\n  mutation deleteMeet($meetingId: String!) {\n    deleteMeeting(meetingId: $meetingId) {\n      meeting {\n        id\n        title\n        spots\n        meetingDate\n        createdAt\n        updatedAt\n        isActive\n      }\n      errors {\n        field\n        message\n      }\n    }\n  }\n`\n\nexport function useDeleteMeetMutation() {\n  return Urql.useMutation<DeleteMeetMutation, DeleteMeetMutationVariables>(\n    DeleteMeetDocument\n  )\n}\nexport const DeletePlaceDocument = gql`\n  mutation deletePlace($placeId: String!) {\n    deletePlace(placeId: $placeId) {\n      place {\n        id\n      }\n      errors {\n        field\n        message\n      }\n    }\n  }\n`\n\nexport function useDeletePlaceMutation() {\n  return Urql.useMutation<DeletePlaceMutation, DeletePlaceMutationVariables>(\n    DeletePlaceDocument\n  )\n}\nexport const GetUserDocument = gql`\n  mutation getUser($citizenId: String!) {\n    user(document: $citizenId) {\n      user {\n        ...UserData\n      }\n      errors {\n        message\n      }\n    }\n  }\n  ${UserDataFragmentDoc}\n`\n\nexport function useGetUserMutation() {\n  return Urql.useMutation<GetUserMutation, GetUserMutationVariables>(\n    GetUserDocument\n  )\n}\nexport const LoginDocument = gql`\n  mutation login($usr: String!, $pwd: String!) {\n    login(password: $pwd, username: $usr) {\n      admin {\n        firstName\n        lastName\n        email\n      }\n      errors {\n        message\n      }\n    }\n  }\n`\n\nexport function useLoginMutation() {\n  return Urql.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument)\n}\nexport const LogoutDocument = gql`\n  mutation logout {\n    logout\n  }\n`\n\nexport function useLogoutMutation() {\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(\n    LogoutDocument\n  )\n}\nexport const SaveMeetingDocument = gql`\n  mutation saveMeeting($meetingId: String!, $data: MeetingInput!) {\n    saveMeeting(meetingId: $meetingId, data: $data) {\n      meeting {\n        id\n        title\n        spots\n        meetingDate\n        createdAt\n        updatedAt\n        isActive\n      }\n      errors {\n        field\n        message\n      }\n    }\n  }\n`\n\nexport function useSaveMeetingMutation() {\n  return Urql.useMutation<SaveMeetingMutation, SaveMeetingMutationVariables>(\n    SaveMeetingDocument\n  )\n}\nexport const SaveQuestionDocument = gql`\n  mutation saveQuestion($questions: [QuestionType!]!, $userId: String!) {\n    registrerQuestion(questions: $questions, userId: $userId) {\n      error\n      saved\n    }\n  }\n`\n\nexport function useSaveQuestionMutation() {\n  return Urql.useMutation<SaveQuestionMutation, SaveQuestionMutationVariables>(\n    SaveQuestionDocument\n  )\n}\nexport const SaveUserDocument = gql`\n  mutation saveUser($input: UserInput!, $userId: String) {\n    saveUser(data: $input, userId: $userId) {\n      user {\n        id\n      }\n      errors {\n        message\n      }\n    }\n  }\n`\n\nexport function useSaveUserMutation() {\n  return Urql.useMutation<SaveUserMutation, SaveUserMutationVariables>(\n    SaveUserDocument\n  )\n}\nexport const UpdateContactUserDocument = gql`\n  mutation updateContactUser($userId: String!, $contactData: userContactType!) {\n    updateContactUser(userId: $userId, contactData: $contactData) {\n      userId\n    }\n  }\n`\n\nexport function useUpdateContactUserMutation() {\n  return Urql.useMutation<\n    UpdateContactUserMutation,\n    UpdateContactUserMutationVariables\n  >(UpdateContactUserDocument)\n}\nexport const UpdateUserDocument = gql`\n  mutation updateUser($userData: userUpdateInput!) {\n    updateUser(userData: $userData) {\n      errors {\n        field\n        message\n      }\n      admin {\n        firstName\n        lastName\n        email\n        phone\n      }\n    }\n  }\n`\n\nexport function useUpdateUserMutation() {\n  return Urql.useMutation<UpdateUserMutation, UpdateUserMutationVariables>(\n    UpdateUserDocument\n  )\n}\nexport const GetAdminDataDocument = gql`\n  query getAdminData {\n    getAdminsData {\n      id\n      firstName\n      lastName\n      email\n      phone\n      username\n    }\n  }\n`\n\nexport function useGetAdminDataQuery(\n  options: Omit<Urql.UseQueryArgs<GetAdminDataQueryVariables>, \"query\"> = {}\n) {\n  return Urql.useQuery<GetAdminDataQuery>({\n    query: GetAdminDataDocument,\n    ...options,\n  })\n}\nexport const GetPlacesDocument = gql`\n  query getPlaces {\n    getUserPlaces {\n      place {\n        id\n        name\n        address\n        isActive\n      }\n      errors {\n        field\n        message\n      }\n    }\n  }\n`\n\nexport function useGetPlacesQuery(\n  options: Omit<Urql.UseQueryArgs<GetPlacesQueryVariables>, \"query\"> = {}\n) {\n  return Urql.useQuery<GetPlacesQuery>({ query: GetPlacesDocument, ...options })\n}\nexport const GetUserByIdDocument = gql`\n  query getUserById($userId: String!) {\n    userById(userId: $userId) {\n      user {\n        ...UserData\n      }\n      errors {\n        message\n      }\n    }\n  }\n  ${UserDataFragmentDoc}\n`\n\nexport function useGetUserByIdQuery(\n  options: Omit<Urql.UseQueryArgs<GetUserByIdQueryVariables>, \"query\"> = {}\n) {\n  return Urql.useQuery<GetUserByIdQuery>({\n    query: GetUserByIdDocument,\n    ...options,\n  })\n}\nexport const UserDocument = gql`\n  query User {\n    getUserData {\n      firstName\n      lastName\n      email\n      phone\n    }\n  }\n`\n\nexport function useUserQuery(\n  options: Omit<Urql.UseQueryArgs<UserQueryVariables>, \"query\"> = {}\n) {\n  return Urql.useQuery<UserQuery>({ query: UserDocument, ...options })\n}\nexport const HeartbeatDocument = gql`\n  query heartbeat {\n    heartBeat {\n      firstName\n      lastName\n      email\n    }\n  }\n`\n\nexport function useHeartbeatQuery(\n  options: Omit<Urql.UseQueryArgs<HeartbeatQueryVariables>, \"query\"> = {}\n) {\n  return Urql.useQuery<HeartbeatQuery>({ query: HeartbeatDocument, ...options })\n}\nexport const GetMeetingDocument = gql`\n  query getMeeting($id: String!) {\n    meeting(id: $id) {\n      meeting {\n        ...MeetingData\n      }\n      errors {\n        message\n      }\n    }\n  }\n  ${MeetingDataFragmentDoc}\n`\n\nexport function useGetMeetingQuery(\n  options: Omit<Urql.UseQueryArgs<GetMeetingQueryVariables>, \"query\"> = {}\n) {\n  return Urql.useQuery<GetMeetingQuery>({\n    query: GetMeetingDocument,\n    ...options,\n  })\n}\nexport const MeetingsDocument = gql`\n  query Meetings($limit: Int!, $cursor: String) {\n    meetings(limit: $limit, cursor: $cursor) {\n      meetings {\n        ...MeetingQuery\n      }\n      hasMore\n    }\n  }\n  ${MeetingQueryFragmentDoc}\n`\n\nexport function useMeetingsQuery(\n  options: Omit<Urql.UseQueryArgs<MeetingsQueryVariables>, \"query\"> = {}\n) {\n  return Urql.useQuery<MeetingsQuery>({ query: MeetingsDocument, ...options })\n}\nexport const GetMeetingsByIdDocument = gql`\n  query getMeetingsById($ids: [String!]!) {\n    meetingsById(ids: $ids) {\n      id\n      meetingDate\n      title\n    }\n  }\n`\n\nexport function useGetMeetingsByIdQuery(\n  options: Omit<Urql.UseQueryArgs<GetMeetingsByIdQueryVariables>, \"query\"> = {}\n) {\n  return Urql.useQuery<GetMeetingsByIdQuery>({\n    query: GetMeetingsByIdDocument,\n    ...options,\n  })\n}\nexport const SearchReservationDocument = gql`\n  query searchReservation($reservationId: String!) {\n    searchReservation(reservationId: $reservationId) {\n      errors {\n        message\n      }\n      reservation {\n        id\n        qrText\n        citizen {\n          document\n          firstName\n          lastName\n        }\n        meeting {\n          id\n          title\n          meetingDate\n        }\n      }\n    }\n  }\n`\n\nexport function useSearchReservationQuery(\n  options: Omit<\n    Urql.UseQueryArgs<SearchReservationQueryVariables>,\n    \"query\"\n  > = {}\n) {\n  return Urql.useQuery<SearchReservationQuery>({\n    query: SearchReservationDocument,\n    ...options,\n  })\n}\nexport const MeetingDeleteDocument = gql`\n  subscription MeetingDelete {\n    meetingDelete {\n      data\n    }\n  }\n`\n\nexport function useMeetingDeleteSubscription<TData = MeetingDeleteSubscription>(\n  options: Omit<\n    Urql.UseSubscriptionArgs<MeetingDeleteSubscriptionVariables>,\n    \"query\"\n  > = {},\n  handler?: Urql.SubscriptionHandler<MeetingDeleteSubscription, TData>\n) {\n  return Urql.useSubscription<\n    MeetingDeleteSubscription,\n    TData,\n    MeetingDeleteSubscriptionVariables\n  >({ query: MeetingDeleteDocument, ...options }, handler)\n}\nexport const MeetingUpdatedDocument = gql`\n  subscription MeetingUpdated {\n    meetingUpdated {\n      data {\n        ...MeetingQuery\n      }\n    }\n  }\n  ${MeetingQueryFragmentDoc}\n`\n\nexport function useMeetingUpdatedSubscription<\n  TData = MeetingUpdatedSubscription\n>(\n  options: Omit<\n    Urql.UseSubscriptionArgs<MeetingUpdatedSubscriptionVariables>,\n    \"query\"\n  > = {},\n  handler?: Urql.SubscriptionHandler<MeetingUpdatedSubscription, TData>\n) {\n  return Urql.useSubscription<\n    MeetingUpdatedSubscription,\n    TData,\n    MeetingUpdatedSubscriptionVariables\n  >({ query: MeetingUpdatedDocument, ...options }, handler)\n}\nexport const NewMeetingDocument = gql`\n  subscription NewMeeting {\n    newMeeting {\n      data {\n        ...MeetingQuery\n      }\n    }\n  }\n  ${MeetingQueryFragmentDoc}\n`\n\nexport function useNewMeetingSubscription<TData = NewMeetingSubscription>(\n  options: Omit<\n    Urql.UseSubscriptionArgs<NewMeetingSubscriptionVariables>,\n    \"query\"\n  > = {},\n  handler?: Urql.SubscriptionHandler<NewMeetingSubscription, TData>\n) {\n  return Urql.useSubscription<\n    NewMeetingSubscription,\n    TData,\n    NewMeetingSubscriptionVariables\n  >({ query: NewMeetingDocument, ...options }, handler)\n}\nexport const NewReservationDocument = gql`\n  subscription NewReservation {\n    newReservation {\n      meetingId\n    }\n  }\n`\n\nexport function useNewReservationSubscription<\n  TData = NewReservationSubscription\n>(\n  options: Omit<\n    Urql.UseSubscriptionArgs<NewReservationSubscriptionVariables>,\n    \"query\"\n  > = {},\n  handler?: Urql.SubscriptionHandler<NewReservationSubscription, TData>\n) {\n  return Urql.useSubscription<\n    NewReservationSubscription,\n    TData,\n    NewReservationSubscriptionVariables\n  >({ query: NewReservationDocument, ...options }, handler)\n}\n","import React from \"react\"\nimport { IconButton, useStyleConfig } from \"@chakra-ui/react\"\n\nexport default function IconButtonWrapper({ iconType, ...props }: any) {\n  const style = useStyleConfig(iconType, props)\n  return <IconButton sx={style} {...props} />\n}\n","// NOTE: for labels add 'lbl-' to the input id\nexport const CITIZEN_FORM = {\n  headingTitle: \"data-form-title\",\n  document: \"input-document\",\n  firstName: \"input-firstName\",\n  lastName: \"input-lastName\",\n  phone: \"input-phone\",\n  email: \"input-email\",\n  birthDate: \"input-birthDate\",\n  age: \"input-age\",\n  submit: \"btn-submit\",\n}\n\nexport const RESERVATIONS_LIST = {\n  note: \"lbl-note\",\n  title: \"lbl-title\",\n  reservationItem: \"reservation-item\",\n  reservationSection: \"reservation-section\",\n  link: \"link-meeting\",\n  btnLink: \"btn-meeting\",\n  meetingTitle: \"lbl-meeting-title\",\n  meetingDate: \"lbl-meeting-date\",\n  btnOpenReservation: \"btn-open-reservation\",\n  btnCancelReservation: \"btn-cancel-reservation\",\n}\n\nexport const MEETINGS_LIST = {\n  title: \"lbl-meetings-title\",\n  topTitle: \"lbl-top-title\",\n  noMeetings: \"lbl-no-meetings\",\n  searchOrClean: \"btn-search-clean\",\n  searchSection: \"search-section\",\n  document: \"input-document\",\n  btnSearch: \"btn-search\",\n  noResults: \"lbl-no-results\",\n  meetingCard: \"meeting-card\",\n  meetingTitle: \"lbl-meeting-title\",\n  meetingDate: \"lbl-meeting-date\",\n  spots: \"lbl-meeting-spots\",\n  linkCitizenForm: \"link-citizen-form\",\n  btnReserve: \"btn-reserve\",\n  btnNewMeeting: \"btn-new-meeting\",\n}\n\nexport const NAVABAR_LIST = {\n  darkMode: \"btn-dark-mode\",\n  logo: \"link-home\",\n  headerTitle: \"lbl-header-title\",\n  subTitle: \"lbl-sub-title\",\n}\n\nexport const RESERVATION_VIEW = {\n  title: \"lbl-title\",\n  document: \"lbl-document\",\n  meetigTitle: \"lbl-meetig-title\",\n  meetingDate: \"lbl-meeting-date\",\n  confirmBtn: \"btn-confirm\",\n  welcome: \"lbl-welcome\",\n  qrCode: \"img-qrCode\",\n  reservationTitleDocument: \"lbl-title-reservation-document\",\n  userDocument: \"lbl-user-document\",\n  reservationTitlemeeting: \"lbl-title-reservation-meeting\",\n  userMeeting: \"lbl-user-meeting\",\n  reservationTitleDate: \"lbl-title-reservation--date\",\n  reservationUserDate: \"lbl-user-date\",\n  msgConfirm: \"lbl-confirm-message\",\n  btnOpenModalCancelReserve: \"btn-open-cancel-reserve\",\n  btnDownLoadPdf: \"btn-download-pdf\",\n  btnCancelReserve: \"btn-cancel-reserve\",\n}\n\nexport const CONFIRM_RESERVATION = {\n  meetTitle: \"lbl-meeting-title\",\n  userTitle: \"lbl-user-title\",\n  fullnameUser: \"lbl-fullname-user\",\n  documentTitle: \"lbl-document-title\",\n  documentUser: \"lbl-document-user\",\n  contactTitle: \"lbl-contact-title\",\n  contactUser: \"lbl-contact-user\",\n  emailTitle: \"lbl-email-title\",\n  emailUser: \"lbl-email-user\",\n  dateTitle: \"lbl-date-title\",\n  dateUser: \"lbl-date-user\",\n  spotsTitle: \"lbl-spots-title\",\n  spotsUser: \"lbl-spotsUser-user\",\n  confirmDates: \"lbl-confirm-dates\",\n}\n\nexport const QUESTION_VIEW = {\n  formTitle: \"lbl-form-title\",\n  formparagraph: \"lbl-form-formparagraph\",\n  emergenceContact: \"lbl-emergence-contact\",\n  contactNumber: \"lbl-contact-number\",\n  notice: \"lbl-notice\",\n  btnGoBack: \"btn-go-back\",\n  btnSubmit: \"btn-submit\",\n  linkNoEntry: \"link-no-entry\",\n}\n\nexport const QUESTIONS_FORM = {\n  questionText: \"my-radio-group\",\n  responseYes: \"rbtn-response-yes\",\n  responseNo: \"rbtn-response-no\",\n}\n\nexport const DASHBOARD_MEETINGS = {\n  searchMeeting: \"input-search-meeting\",\n}\n","export const LIMITE_RESERVA_POR_MES = 2\n\nexport const QUESTIONS = [\n  {\n    id: 1,\n    question:\n      \"¿Ha presentado alguno de los siguientes síntomas relacionados con el COVID-19 durante los últimos 15 días: Dolor de cabeza, garganta, dolor muscular, dificultad respiratoria, tos seca?\",\n  },\n  {\n    id: 2,\n    question:\n      \"¿Ha tenido contacto con personas que hayan regresado del exterior en los últimos 20 dias y/o familiares o amigos que hayan sido diagnosticados con COVID-19?\",\n  },\n  {\n    id: 3,\n    question: \"¿Presenta fiebre o una temperatura superior a 37,5°c?\",\n  },\n]\n\nexport const DATE_FORMAT = `dddd Do MMMM, h:mm a`\n\nexport const ACTIVE_CARD_COLOR = \"\"\n\nexport const INACTIVE_CARD_COLOR = \"#dbe4f3\"\n\nexport const BTN_PROPS = {\n  size: \"md\",\n  height: \"48px\",\n  width: \"120px\",\n}\n","import moment from \"moment\"\nimport { DATE_FORMAT } from \"../constants\"\n\nmoment.locale(\"es\", {\n  months: \"Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_de Diciembre\".split(\n    \"_\"\n  ),\n  monthsShort: \"Enero._Feb._Mar_Abr._May_Jun_Jul._Ago_Sept._Oct._Nov._Dec.\".split(\n    \"_\"\n  ),\n  weekdays: \"Domingo_Lunes_Martes_Miércoles_Jueves_Viernes_Sábado\".split(\"_\"),\n  weekdaysShort: \"Dom._Lun._Mar._Mier._Jue._Vier._Sab.\".split(\"_\"),\n  weekdaysMin: \"Do_Lu_Ma_Mi_Ju_Vi_Sa\".split(\"_\"),\n})\n\nexport const formatDate = (strDate: string) =>\n  moment(strDate).format(DATE_FORMAT)\n\nexport const formatAgeDate = (strDate: string) =>\n  moment(strDate).format(\"YYYY-MM-DDTHH:MM\")\n","import React from \"react\"\nimport { FormattedMessage } from \"react-intl\"\n\nexport default function DisplayText(props: any) {\n  return (\n    <FormattedMessage id={props.id} defaultMessage={props.defaultMessage}/>\n  )\n}\n","export default function ShouldRender(props: { if: any; children: any }) {\n  return props.if ? props.children : null\n}\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\nconst Heading = (props: any) => <Box as=\"h1\" {...props} />\n\nexport default Heading\n","import React from \"react\"\nimport { Flex, useStyleConfig } from \"@chakra-ui/react\"\nconst Card = (props: any) => {\n  const styles = useStyleConfig(\"Card\", props)\n  return (\n    <Flex sx={styles} {...props}>\n      <Flex flexWrap=\"wrap\" flexDir=\"column\" textAlign=\"left\">\n        {props.children}\n      </Flex>\n      {props.actions}\n    </Flex>\n  )\n}\nexport default Card\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\nconst BoldText = (props: any) => (\n  <Box as=\"h3\" fontWeight=\"bold\">\n    {props.children}\n  </Box>\n)\nexport default BoldText\n","import React from \"react\"\nimport { Text as ChText } from \"@chakra-ui/react\"\nconst Text = (props: any) => (\n  <ChText size=\"md\" {...props} title={props.children}>\n    {props.children}\n  </ChText>\n)\nexport default Text\n","import React, { ReactNode } from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport BoldText from \"./formElements/BoldText\"\nimport Text from \"./formElements/Text\"\n\nconst DisplayPair = ({\n  bold,\n  text,\n}: {\n  bold: ReactNode | string\n  text: string\n}) => {\n  return (\n    <Flex flexDir=\"column\" justifyContent=\"space-between\" maxWidth=\"90%\">\n      <BoldText className={MEETINGS_LIST.spots}>{bold}</BoldText>\n      <Text isTruncated>{text}</Text>\n    </Flex>\n  )\n}\n\nexport default DisplayPair\n","import { Box, Flex, useStyleConfig } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport { formatDate } from \"../utils/formatDate\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport Heading from \"../components/formElements/Heading\"\nimport Card from \"../components/Card\"\nimport { ACTIVE_CARD_COLOR } from \"../constants\"\nimport DisplayPair from \"../components/DisplayPairText\"\n\ntype MeetingProps = {\n  spots: number\n  id: string | number | undefined\n  title: string\n  meetingDate: string\n  children: any\n  bg?: string\n}\n\nconst MeetingCard = ({\n  spots,\n  id,\n  title,\n  meetingDate,\n  children,\n  bg,\n}: MeetingProps) => {\n  return (\n    <Card\n      id={id}\n      className={MEETINGS_LIST.meetingCard}\n      actions={\n        <ShouldRender if={String(spots) !== \"0\"}>\n          <Box alignSelf=\"flex-end\">{children}</Box>\n        </ShouldRender>\n      }\n    >\n      <Flex justifyContent=\"left\" flexWrap=\"wrap\" flexDir=\"column\">\n        <Heading mb={3} className={MEETINGS_LIST.meetingTitle}>\n          {title}\n        </Heading>\n        <DisplayPair\n          bold={<DisplayText id=\"app.label.date\" defaultMessage=\"date\" />}\n          text={formatDate(meetingDate)}\n        />\n        <DisplayPair\n          bold={<DisplayText id=\"app.label.spots\" defaultMessage=\"spots\" />}\n          text={String(spots)}\n        />\n      </Flex>\n    </Card>\n  )\n}\n\nexport default MeetingCard\n","import React from \"react\"\nimport { Button, useStyleConfig } from \"@chakra-ui/react\"\n\nconst PrimaryButton = (props: any) => {\n  const style = useStyleConfig(\"PrimaryButton\", props)\n  return <Button as=\"button\" sx={style} {...props} />\n}\n\nexport default PrimaryButton\n","import React, { useState } from \"react\"\nimport { Box, Flex, Spinner, Text } from \"@chakra-ui/react\"\nimport {\n  useMeetingsQuery,\n  useMeetingUpdatedSubscription,\n  useNewMeetingSubscription,\n  useMeetingDeleteSubscription,\n} from \"../generated/graphql\"\nimport IconButton from \"../components/formElements/IconButton\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport MeetingCard from \"./MeetingCard\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { ArrowRightIcon } from \"@chakra-ui/icons\"\nimport { Link } from \"react-router-dom\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\n\nconst Meetings = () => {\n  const [variables, setVariables] = useState({\n    limit: 15,\n    cursor: null as null | string,\n  })\n  const [{ data, fetching, error }] = useMeetingsQuery({ variables })\n  useMeetingUpdatedSubscription()\n  useNewMeetingSubscription()\n  useMeetingDeleteSubscription()\n\n  if (fetching) return <Spinner />\n\n  if (error || !data || data.meetings.meetings.length === 0)\n    return (\n      <Box id={MEETINGS_LIST.noMeetings}>\n        <DisplayText\n          id=\"app.meetings.empty\"\n          defaultMessage=\"no hay reuniones\"\n        />\n      </Box>\n    )\n  const nextPage = {\n    limit: variables.limit,\n    cursor:\n      data?.meetings.meetings[data.meetings.meetings.length - 1].createdAt,\n  }\n\n  return (\n    <Flex flex={1} alignItems=\"center\" flexWrap=\"wrap\">\n      <ShouldRender if={data && data.meetings}>\n        {data?.meetings.meetings.map(({ __typename, ...reu }) => (\n          <MeetingCard {...reu}>\n            <Flex mt={\"-15px\"}>\n              <Link\n                to={`/datos/${reu.id}`}\n                className={MEETINGS_LIST.linkCitizenForm}\n              >\n                <Text mr={3}>\n                  <DisplayText\n                    id=\"app.buttons.reserve\"\n                    defaultMessage=\"Reserve\"\n                  />\n                </Text>\n                <IconButton\n                  className={MEETINGS_LIST.btnReserve}\n                  aria-label=\"reservar\"\n                  iconType=\"IconReservation\"\n                  icon={<ArrowRightIcon />}\n                />\n              </Link>\n            </Flex>\n          </MeetingCard>\n        ))}\n        <ShouldRender if={data && data.meetings.hasMore}>\n          <Flex>\n            <PrimaryButton\n              isLoading={fetching}\n              mt={8}\n              onClick={() => {\n                setVariables(nextPage)\n              }}\n            >\n              load more\n            </PrimaryButton>\n          </Flex>\n        </ShouldRender>\n      </ShouldRender>\n    </Flex>\n  )\n}\n\nexport default Meetings\n","import React from \"react\"\nimport { Flex, Heading } from \"@chakra-ui/react\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport DisplayText from \"./formElements/DisplayMessage\"\n\nexport const Title = () => (\n  <Flex\n    justifyItems=\"flex-start\"\n    justifyContent=\"center\"\n    flexDir=\"column\"\n    mt={2}\n    mb={2}\n  >\n    <Heading as=\"h3\" size=\"md\" id={MEETINGS_LIST.topTitle}>\n      <DisplayText id=\"app.title\" defaultMessage=\"app title\" />\n    </Heading>\n  </Flex>\n)\n","import React from \"react\"\nimport { Box, useStyleConfig } from \"@chakra-ui/react\"\n\nconst NeutralButton = (props: any) => {\n  const style = useStyleConfig(\"DefaultButton\", props)\n  return <Box as=\"button\" sx={style} {...props} />\n}\n\nexport default NeutralButton\n","import React from \"react\"\nimport { FormControl, FormLabel, Input } from \"@chakra-ui/react\"\n\ntype NormalInputProps = {\n  name: string\n  label: string\n  id: string\n  required: true | false\n  onBlur?: any\n  onChange?: any\n  disabled: true | false\n}\n\nconst NormalInput = ({ name, label, id, ...props }: NormalInputProps) => (\n  <FormControl mt={2}>\n    <FormLabel htmlFor={id}>{label}</FormLabel>\n    <Input id={id} placeholder={label.toLowerCase()} {...props} />\n  </FormControl>\n)\n\nexport default NormalInput\n","import React from \"react\"\nimport { Button } from \"@chakra-ui/react\"\nimport { BTN_PROPS } from \"../../constants\"\n\nconst CancelButton = ({ children, ...rest }: any) => (\n  <Button\n    size={BTN_PROPS.size}\n    w={BTN_PROPS.width}\n    h={BTN_PROPS.height}\n    p={1}\n    style={{\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    }}\n    colorScheme=\"red\"\n    variant=\"outline\"\n    {...rest}\n  >\n    {children}\n  </Button>\n)\n\nexport default CancelButton\n","import { DeleteIcon } from \"@chakra-ui/icons\"\nimport { Spinner, useToast } from \"@chakra-ui/react\"\nimport moment from \"moment\"\nimport React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { useCancelReservationMutation } from \"../generated/graphql\"\nimport { RESERVATIONS_LIST } from \"../ui/formIds\"\nimport CancelButton from \"./formElements/CancelButton\"\nimport ShouldRender from \"./ShouldRender\"\nimport IconButton from \"../components/formElements/IconButton\"\n\ntype CancelProps = {\n  reservationId: string\n  meetingDate: string\n  userId: string\n  labeled?: boolean\n  onChange?: () => void\n}\n\nconst CancelReservation = ({\n  reservationId,\n  meetingDate,\n  labeled = false,\n  userId,\n  onChange,\n}: CancelProps) => {\n  const [{ fetching }, cancelReserve] = useCancelReservationMutation()\n  const { formatMessage } = useIntl()\n  const toast = useToast({ isClosable: true, duration: 3000 })\n\n  const onCancel = async () => {\n    const res = await cancelReserve({ reservationId, userId })\n    if (res.error)\n      return toast({\n        title: formatMessage({ id: \"app.notification.cancelReservationError\" }),\n        description: res.error.message,\n        status: \"error\",\n      })\n    toast({\n      title: formatMessage({ id: \"app.notification.success\" }),\n      description: \"\",\n      status: \"success\",\n    })\n    if (typeof onChange === \"function\") onChange()\n  }\n  if (fetching) return <Spinner />\n\n  const canDelete = moment(meetingDate) > moment()\n  const props = {\n    onClick: onCancel,\n    id: RESERVATIONS_LIST.btnCancelReservation,\n  }\n\n  return (\n    <ShouldRender if={canDelete}>\n      {labeled ? (\n        <CancelButton {...props}>cancelar</CancelButton>\n      ) : (\n        <IconButton\n          {...props}\n          iconType=\"IconDelete\"\n          aria-label=\"cancelar\"\n          icon={<DeleteIcon />}\n        />\n      )}\n    </ShouldRender>\n  )\n}\n\nexport default CancelReservation\n","import { SearchIcon } from \"@chakra-ui/icons\"\nimport { Center, Flex, Heading, Text, Wrap, WrapItem } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport IconButton from \"../components/formElements/IconButton\"\nimport { formatDate } from \"../utils/formatDate\"\nimport { MEETINGS_LIST, RESERVATIONS_LIST } from \"../ui/formIds\"\nimport CancelReservation from \"../components/CancelReservation\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport ShouldRender from \"../components/ShouldRender\"\n\ntype ReservationListProps = {\n  reservations: any\n  userId: string\n  onChange?: any\n}\n\nconst ReservationsList = ({\n  reservations = [],\n  userId,\n  onChange,\n}: ReservationListProps) => {\n  const history = useHistory()\n  if (reservations?.length === 0) return null\n  return (\n    <Flex\n      flexDir=\"column\"\n      flexWrap=\"wrap\"\n      id={RESERVATIONS_LIST.reservationSection}\n    >\n      <Heading as=\"h3\" size=\"md\" mt={3} id={RESERVATIONS_LIST.title}>\n        <DisplayText id=\"app.reservations.title\" defaultMessage=\"reservas\" />\n      </Heading>\n      <Wrap className={RESERVATIONS_LIST.reservationItem}>\n        <ShouldRender if={!reservations || reservations.length === 0}>\n          <Text id={MEETINGS_LIST.noResults}>\n            <DisplayText\n              id=\"app.reservations.noResults\"\n              defaultMessage=\"no reservations\"\n            />\n          </Text>\n        </ShouldRender>\n        {reservations?.map((r: any) => (\n          <WrapItem\n            key={r.id}\n            id={r.id}\n            className={RESERVATIONS_LIST.reservationItem}\n          >\n            <Center w=\"80%\" mr={4}>\n              <Link to={`/reservation/${r.id}`} id={RESERVATIONS_LIST.link}>\n                <Text id={RESERVATIONS_LIST.meetingTitle}>\n                  {r.meeting.title}\n                </Text>\n                <Text size=\"sm\" id={RESERVATIONS_LIST.meetingDate}>\n                  {formatDate(r.meeting.meetingDate)}\n                </Text>\n              </Link>\n            </Center>\n            <Center>\n              <IconButton\n                aria-label=\"Open reservation\"\n                onClick={() => {\n                  history.push(`/reservation/${r.id}`)\n                }}\n                iconType=\"IconEdit\"\n                icon={<SearchIcon />}\n                id={RESERVATIONS_LIST.btnOpenReservation}\n                mr={3}\n              />\n              <CancelReservation\n                reservationId={r.id}\n                userId={userId}\n                meetingDate={r.meeting.meetingDate}\n                onChange={onChange}\n              />\n            </Center>\n          </WrapItem>\n        ))}\n      </Wrap>\n    </Flex>\n  )\n}\n\nexport default ReservationsList\n","import { SearchIcon } from \"@chakra-ui/icons\"\nimport { Box, InputGroup, Flex, IconButton } from \"@chakra-ui/react\"\nimport React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport NeutralButton from \"../components/formElements/NeutralButton\"\nimport NormalInput from \"../components/formElements/NormalInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport { useGetUserMutation } from \"../generated/graphql\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport ReservationsList from \"./ReservationsList\"\n\ntype SearchReservationState = {\n  userId: string\n  reservations: any\n  citizenId: string\n  emptyValue: boolean\n  error: boolean\n  loading: boolean\n}\n\nconst initialState = {\n  userId: \"\",\n  reservations: null,\n  citizenId: \"\",\n  emptyValue: false,\n  error: false,\n  loading: false,\n}\nexport default function SearchReservation({ showIcon = false }) {\n  const { formatMessage } = useIntl()\n  const [, searchUser] = useGetUserMutation()\n  const [state, setState] = useState<SearchReservationState>(initialState)\n\n  const { userId, reservations, citizenId, emptyValue, error, loading } = state\n\n  const updateSate = (newValue: any) => {\n    setState({ ...initialState, ...newValue })\n  }\n\n  const onInputChange = (ev: any) => {\n    updateSate({ citizenId: String(ev.target.value) })\n  }\n\n  const searchReservation = async (ev: any) => {\n    if (!citizenId.trim()) return updateSate({ emptyValue: true })\n\n    updateSate({ loading: true })\n    const { data } = await searchUser({ citizenId })\n    if (data?.user?.user) {\n      const { id, reservations: prevRes = [] } = data.user.user\n      localStorage.setItem(\"userId\", id)\n      updateSate({\n        userId: id,\n        reservations: prevRes,\n      })\n    }\n    const errors = data?.user?.errors || []\n    if (errors.length > 0) {\n      updateSate({ error: true })\n    }\n  }\n  const [showInput, setInput] = useState(false)\n\n  const btnsProps = {\n    onClick: () => {\n      setInput(!showInput)\n    },\n    mt: 5,\n    id: MEETINGS_LIST.searchOrClean,\n  }\n\n  return (\n    <Box ml={3} mt={3} id={MEETINGS_LIST.searchSection}>\n      {showInput ? (\n        <NeutralButton {...btnsProps}>\n          <DisplayText id=\"app.buttons.back\" defaultMessage=\"volver\" />\n        </NeutralButton>\n      ) : (\n        <PrimaryButton {...btnsProps}>\n          <DisplayText\n            id=\"app.buttons.searchReservation\"\n            defaultMessage=\"search reservation\"\n          />\n        </PrimaryButton>\n      )}\n      <ShouldRender if={showInput}>\n        <InputGroup>\n          <Flex flexDir=\"row\" align=\"flex-end\" w=\"50%\">\n            <NormalInput\n              onBlur={!showIcon ? searchReservation : undefined}\n              label={formatMessage({ id: \"form.document\" })}\n              name=\"document\"\n              required\n              id={MEETINGS_LIST.document}\n              disabled={loading}\n              onChange={onInputChange}\n            />\n            <ShouldRender if={showIcon}>\n              <IconButton\n                aria-label={formatMessage({ id: \"form.searchReservation\" })}\n                icon={<SearchIcon />}\n                onClick={searchReservation}\n                isLoading={loading}\n                id={MEETINGS_LIST.btnSearch}\n                ml={5}\n              />\n            </ShouldRender>\n          </Flex>\n        </InputGroup>\n        <Box>\n          <ShouldRender if={error}>\n            <DisplayText\n              id=\"app.errors.noUser\"\n              defaultMessage=\"usuario no existe\"\n            />\n          </ShouldRender>\n          <ShouldRender if={emptyValue}>\n            <DisplayText id=\"form.required\" defaultMessage=\"campo requerido\" />\n          </ShouldRender>\n        </Box>\n        <Box mt={3}>\n          <ShouldRender if={reservations && !error && !emptyValue}>\n            <ReservationsList reservations={reservations} userId={userId} />\n          </ShouldRender>\n        </Box>\n      </ShouldRender>\n    </Box>\n  )\n}\n","import React from \"react\"\nimport { Flex, Heading } from \"@chakra-ui/react\"\nimport Meetings from \"../container/Meetings\"\nimport { Title } from \"../components/Title\"\nimport { useHeartbeatQuery } from \"../generated/graphql\"\nimport { useHistory } from \"react-router-dom\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport SearchReservation from \"../container/SearchReservation\"\n\nconst Landing = () => {\n  const [{ data }] = useHeartbeatQuery()\n  const history = useHistory()\n  if (data && data.heartBeat) {\n    history.replace(\"/dashboard\")\n  }\n  return (\n    <Flex flexDir=\"column\">\n      <Title />\n      <Heading as=\"h2\" size=\"md\" id={MEETINGS_LIST.title}>\n        <DisplayText\n          id=\"app.meetings.title\"\n          defaultMessage=\"Próximos eventos:\"\n        />\n      </Heading>\n      <Meetings />\n      <SearchReservation />\n    </Flex>\n  )\n}\n\nexport default Landing\n","import { Flex } from \"@chakra-ui/react\"\nimport React from \"react\"\n\ntype wrapper = {\n  children: \"\" | React.ReactNode\n}\n\nconst Wrapper = ({ children }: wrapper) => {\n  return (\n    <Flex\n      alignItems=\"flex-start\"\n      width={[\"90%\", \"90%\", \"100%\"]}\n      ml={[\"75px\", \"75px\", \"0px\"]}\n      p={4}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport default Wrapper\n","import React from \"react\"\nimport { Box, Center, Flex } from \"@chakra-ui/react\"\nimport { Field } from \"formik\"\nimport { v4 } from \"uuid\"\nimport { QUESTIONS_FORM } from \"../ui/formIds\"\nimport DisplayText from \"./formElements/DisplayMessage\"\n\ntype RadioProps = {\n  questions: { id: number; question: string }[]\n}\n\nconst YesNoRadioGroup = ({ questions }: RadioProps) => {\n  return (\n    <Box>\n      {questions.map(({ question, id }) => (\n        <Flex justifyItems=\"center\" key={v4()}>\n          <Box w=\"100%\" mb={3} className={QUESTIONS_FORM.questionText}>\n            {question}\n          </Box>\n          <Flex role=\"group\" aria-labelledby=\"my-radio-group\" ml={5}>\n            <Center>\n              <Box>\n                <label style={{ marginRight: \"10px\" }}>\n                  <Field\n                    className={QUESTIONS_FORM.responseYes}\n                    type=\"radio\"\n                    name={id}\n                    value=\"1\"\n                  />\n                  <DisplayText id=\"radio.question.yes\" defaultMessage=\"Yes\" />\n                </label>\n              </Box>\n              <Box>\n                <label>\n                  <Field\n                    className={QUESTIONS_FORM.responseNo}\n                    type=\"radio\"\n                    name={id}\n                    value=\"0\"\n                  />\n                  <DisplayText id=\"radio.question.no\" defaultMessage=\"No\" />\n                </label>\n              </Box>\n            </Center>\n          </Flex>\n        </Flex>\n      ))}\n    </Box>\n  )\n}\n\nexport default YesNoRadioGroup\n","import React from \"react\"\nimport { Field } from \"formik\"\nimport {\n  Input,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n} from \"@chakra-ui/react\"\nimport { FormikType } from \"../types\"\n\nconst WrapperInput = ({\n  type = \"text\",\n  name = \"\",\n  label = \"\",\n  placeholder = \"\",\n  id = \"\",\n  ...props\n}) => {\n  return !name ? null : (\n    <Field name={name}>\n      {({ field, form }: FormikType) => (\n        <FormControl isInvalid={form.errors[name] && form.touched[name]} mt={2}>\n          <FormLabel id={`lbl-${id}`} htmlFor={id} {...props}>\n            {label}\n          </FormLabel>\n          <Input\n            {...field}\n            type={type}\n            placeholder={placeholder || label.toLowerCase()}\n            {...props}\n            id={id}\n            data-qa={`${name}-field`}\n          />\n          <FormErrorMessage>{form.errors[name]}</FormErrorMessage>\n        </FormControl>\n      )}\n    </Field>\n  )\n}\n\nexport default WrapperInput\n","import React, { ReactNode } from \"react\"\nimport { Flex, HStack } from \"@chakra-ui/react\"\n\nconst ModalActions = ({ children }: { children: ReactNode }) => {\n  return (\n    <Flex alignSelf=\"flex-end\" p=\"2\" justifyContent=\"space-between\">\n      <HStack spacing=\"0.75rem\">{children}</HStack>\n    </Flex>\n  )\n}\nexport default ModalActions\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\"\nimport React from \"react\"\nimport ModalActions from \"./ModalActions\"\n\ntype ModalProps = {\n  titulo: string\n  contenido: any\n  isOpen: boolean\n  onClose: any\n  actions?: React.ReactNode\n}\n\nconst ModalWrapper = ({\n  titulo,\n  contenido,\n  isOpen,\n  onClose,\n  actions,\n}: ModalProps) => {\n  return (\n    <Modal onClose={onClose} isOpen={isOpen} isCentered>\n      <ModalOverlay />\n      <ModalContent justifyContent=\"start\">\n        <ModalHeader>{titulo}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>{contenido}</ModalBody>\n        <ModalActions>{actions}</ModalActions>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ModalWrapper\n","import { QuestionDataType } from \"../components/types\"\n\nconst isQuestionDataValid = ({\n  contactNumber,\n  emergenceContact,\n  formatMessage,\n}: QuestionDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n\n  const onlyLetters = /^[a-zA-Z\\s]*$/\n\n  if (!contactNumber) {\n    errors.contactNumber = IS_REQUIRED\n  } else if (\n    String(contactNumber).length !== 7 &&\n    String(contactNumber).length !== 10\n  ) {\n    errors.contactNumber = IS_INCORRECT\n  }\n\n  if (!emergenceContact) {\n    errors.emergenceContact = IS_REQUIRED\n  } else if (!onlyLetters.test(emergenceContact)) {\n    errors.emergenceContact = IS_INCORRECT\n  }\n\n  return errors\n}\n\nexport default isQuestionDataValid\n","import React from \"react\"\nimport Wrapper from \"../components/Wrapper\"\nimport { Box, Flex, Heading, useToast, Text } from \"@chakra-ui/react\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport YesNoRadioGroup from \"../components/YesNoRadioGroup\"\nimport { Formik, Form } from \"formik\"\nimport { QUESTIONS } from \"../constants/index\"\nimport { useParams, useHistory, Link } from \"react-router-dom\"\nimport { useSaveQuestionMutation } from \"../generated/graphql\"\nimport { useUpdateContactUserMutation } from \"../generated/graphql\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport ModalWrapper from \"../components/ModalWrapper\"\nimport { QUESTION_VIEW } from \"../ui/formIds\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport NeutralButton from \"../components/formElements/NeutralButton\"\nimport isQuestionDataValid from \"../utils/isQuestionDataValid\"\n\nconst Question = () => {\n  const { formatMessage } = useIntl()\n  const [error, setError] = React.useState(false)\n  const [errorInco, setErrorInco] = React.useState(true)\n  const history = useHistory()\n  const toast = useToast()\n  const [, saveQuestion] = useSaveQuestionMutation()\n  const [, updateContactUser] = useUpdateContactUserMutation()\n  let { userId }: any = useParams()\n  if (!userId) history.push(\"/\")\n\n  const onClose = () => {\n    setError(false)\n    history.push(\"/\")\n  }\n\n  const validateQuestions = async (values: any) => {\n    const { emergencyPhone, emergencyContact, ...questions } = values\n\n    const arrValue = Object.values(questions)\n    const q = arrValue.find((value) => value === \"1\")\n    if (QUESTIONS.length !== arrValue.length - 2) {\n      return setErrorInco(true)\n    } else {\n      setErrorInco(false)\n    }\n    if (q) {\n      setError(true)\n    }\n    return setErrorInco(false)\n  }\n\n  const validateInputs = (values: any) => {\n    const errors = isQuestionDataValid({ ...values, formatMessage })\n\n    return errors\n  }\n\n  return (\n    <Wrapper>\n      <Flex w=\"100%\" alignItems=\"center\" flex={1} p={5} flexDir=\"column\">\n        <Heading id={QUESTION_VIEW.formTitle}>\n          <DisplayText id=\"app.question.title\" defaultMessage=\"Health form\" />\n        </Heading>\n\n        <Heading\n          id={QUESTION_VIEW.formparagraph}\n          as=\"h5\"\n          size=\"sm\"\n          mb={6}\n          mt={6}\n        >\n          <DisplayText id=\"app.question.intro\" />\n        </Heading>\n        <Formik\n          initialValues={{\n            emergenceContact: \"\",\n            contactNumber: \"\",\n          }}\n          validate={(values) => {\n            const errors = validateInputs(values)\n            validateQuestions(values)\n            return errors\n          }}\n          onSubmit={async (values: any) => {\n            const { emergenceContact, contactNumber, ...questions } = values\n            const contactData = { emergenceContact, contactNumber }\n            const resEmergencyContact = await updateContactUser({\n              userId,\n              contactData,\n            })\n\n            if (resEmergencyContact.error) {\n              return toast({\n                description: resEmergencyContact.error.message,\n                title: formatMessage({ id: \"app.question.contactNameError\" }),\n                status: \"error\",\n                duration: 3000,\n                isClosable: true,\n              })\n            }\n\n            if (errorInco) {\n              return toast({\n                description: \"\",\n                title: formatMessage({ id: \"app.question.uncompleteQuestion\" }),\n                status: \"error\",\n                duration: 3000,\n                isClosable: true,\n              })\n            }\n\n            const params = Object.keys(questions).map((key) => ({\n              questionId: key,\n              answer: values[key],\n            }))\n            const res = await saveQuestion({\n              questions: params,\n              userId: userId,\n            })\n            if (res.error) {\n              return toast({\n                description: res.error.message,\n                title: \"\",\n                status: \"error\",\n                duration: 3000,\n                isClosable: true,\n              })\n            }\n            history.push(`/confirm/${userId}`)\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form style={{ width: \"100%\" }}>\n              <Flex mb={5} justifyContent=\"space-around\" align=\"flex-end\">\n                <FormikInput\n                  id={QUESTION_VIEW.emergenceContact}\n                  label={formatMessage({ id: \"app.question.contactName\" })}\n                  name=\"emergenceContact\"\n                  w=\"90%\"\n                  required\n                />\n                <FormikInput\n                  id={QUESTION_VIEW.contactNumber}\n                  label={formatMessage({ id: \"app.question.contactPhone\" })}\n                  name=\"contactNumber\"\n                  type=\"number\"\n                  required\n                />\n              </Flex>\n              <Box>\n                <Text id={QUESTION_VIEW.notice} mt={5} mb={3}>\n                  <DisplayText\n                    id=\"app.question.notice\"\n                    defaultMessage=\"Please carefully answer the following questions:\"\n                  />\n                </Text>\n                <Flex flexDir=\"column\" w=\"100%\" align=\"center\">\n                  {QUESTIONS && <YesNoRadioGroup questions={QUESTIONS} />}\n                  <Box alignSelf=\"flex-end\" mt={5}>\n                    <NeutralButton\n                      id={QUESTION_VIEW.btnGoBack}\n                      mr={3}\n                      onClick={() => {\n                        history.goBack()\n                      }}\n                    >\n                      <DisplayText\n                        id=\"app.buttons.back\"\n                        defaultMessage=\"back\"\n                      />\n                    </NeutralButton>\n                    <PrimaryButton\n                      id={QUESTION_VIEW.btnSubmit}\n                      type=\"submit\"\n                      disabled={error}\n                      isLoading={isSubmitting}\n                    >\n                      <DisplayText\n                        id=\"app.buttons.continue\"\n                        defaultMessage=\"continue\"\n                      />\n                    </PrimaryButton>\n                  </Box>\n                </Flex>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n        <ModalWrapper\n          titulo={formatMessage({ id: \"app.modalQuestion.title\" })}\n          contenido={\n            <>\n              <DisplayText id=\"app.modalQuestion.message\" />\n              <Link\n                id={QUESTION_VIEW.linkNoEntry}\n                to=\"https://www.youtube.com/c/cfebello\"\n                target=\"_blank\"\n                style={{ color: \"#62ade2\" }}\n              >\n                cfebello\n              </Link>\n            </>\n          }\n          isOpen={error}\n          onClose={onClose}\n        />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Question\n","import { PersonalDataType } from \"../components/types\"\n\nconst isPersonalDataValid = ({\n  document,\n  firstName,\n  lastName,\n  phone,\n  email,\n  birthDate,\n  formatMessage,\n}: PersonalDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n  //required field\n  if (!document) {\n    errors.document = IS_REQUIRED\n  }\n  if (String(document).length < 7) {\n    errors.document = IS_INCORRECT\n  }\n  if (!firstName) {\n    errors.firstName = IS_REQUIRED\n  }\n  if (!lastName) {\n    errors.lastName = IS_REQUIRED\n  }\n  if (!phone) {\n    errors.phone = IS_REQUIRED\n  }\n  // if (!email) {\n  //   errors.email = GetDisplayText('form.required', 'requerido')\n  // }\n  if (!birthDate) {\n    errors.birthDate = IS_REQUIRED\n  } else if (Number(birthDate.substr(0, 4)) >= 2017) {\n    errors.birthDate = IS_INCORRECT\n  }\n\n  //exceptions\n  if (String(phone).length !== 7 && String(phone).length !== 10) {\n    errors.phone = IS_INCORRECT\n  }\n\n  const regex = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i\n  if (!regex.test(email)) {\n    errors.email = IS_INCORRECT\n  }\n\n  const docRegex = /^[0-9*]+$/g\n  if (document && !docRegex.test(document)) {\n    errors.document = IS_INCORRECT\n  }\n\n  const textRegex = /^[a-zA-Z*]+(([',. -*][a-zA-Z ])?[a-zA-Z]*)*$/g\n  if (firstName && !textRegex.test(firstName)) {\n    errors.firstName = IS_INCORRECT\n  }\n  // if (lastName && !textRegex.test(lastName)) {\n  //   errors.lastName = GetDisplayText(\"field.incorrect_value\", \"formato incorrecto\")\n  // }\n\n  return errors\n}\n\nexport default isPersonalDataValid\n","import React from \"react\"\nimport { Skeleton } from \"@chakra-ui/react\"\n\nconst Loading = ({\n  children,\n  loading,\n}: {\n  children?: string | React.ReactNode\n  loading: boolean\n}) => {\n  return <Skeleton isLoaded={!loading}>{children}</Skeleton>\n}\n\nexport default Loading\n","export const blurText = (str: string) => {\n  const limit = 3\n  const total = str.length\n  return `${str.slice(0, limit)}${\"*\".repeat(total - limit)}`\n}\n","import React, { useState } from \"react\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport { Box, Flex, useToast } from \"@chakra-ui/react\"\nimport { Formik, Form } from \"formik\"\nimport isPersonalDataValid from \"../utils/isPersonalDataValid\"\nimport { getAgeFromDate } from \"../utils/getAgeFromDate\"\nimport { formatAgeDate } from \"../utils/formatDate\"\nimport { useSaveUserMutation, useGetUserMutation } from \"../generated/graphql\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport ReservationsList from \"./ReservationsList\"\nimport Loading from \"../components/formElements/Loading\"\nimport { blurText } from \"../utils/truncate\"\nimport { CITIZEN_FORM } from \"../ui/formIds\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\n\nconst PersonalDataForm = () => {\n  const { formatMessage } = useIntl()\n  const [age, setAge] = useState(\"\")\n  const [userId, setUserId] = useState(\"\")\n  const [userExists, setExist] = useState(false)\n  const [reservations, setReservations] = useState([])\n  const [, searchUser] = useGetUserMutation()\n  const [loading, setLoading] = useState(false)\n  const [, saveUser] = useSaveUserMutation()\n  const history = useHistory()\n  let { meetingId }: any = useParams()\n  if (!meetingId) history.push(\"/\")\n  const toast = useToast()\n  localStorage.setItem(\"meetingId\", meetingId)\n\n  const booked = reservations.find(\n    ({ meetingId: id }: any): any => id === meetingId\n  )\n\n  const onBlurCitizenField = (cb: any) => async (ev: any) => {\n    setLoading(true)\n    const citizenId = String(ev.target.value)\n    const { data } = await searchUser({ citizenId })\n    if (data?.user?.user) {\n      setExist(true)\n      const {\n        document,\n        firstName,\n        lastName,\n        __typename,\n        birthDate,\n        id,\n        reservations: prevRes,\n        ...rest\n      } = data.user.user\n      localStorage.setItem(\"userId\", id)\n      const formatedDate = formatAgeDate(birthDate)\n      cb({\n        document: blurText(document),\n        firstName: blurText(firstName),\n        lastName: blurText(lastName),\n        ...rest,\n        birthDate: formatedDate,\n      })\n      const usrReservations: any = prevRes\n      if (usrReservations) setReservations(usrReservations)\n      setUserId(id)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Box minW=\"300px\">\n      <Loading loading={loading}>\n        <Formik\n          enableReinitialize\n          initialValues={{\n            document: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            phone: 0,\n            email: \"\",\n            birthDate: \"\",\n          }}\n          validate={(values) => {\n            const errors = isPersonalDataValid({ ...values, formatMessage })\n            if (values.birthDate) {\n              const age = getAgeFromDate(values.birthDate)\n              setAge(String(age))\n            }\n            return errors\n          }}\n          onSubmit={async ({ ...values }) => {\n            let response = await saveUser({ input: { ...values }, userId })\n            if (response.error)\n              return toast({\n                description: response.error.message,\n                title: \"ocurrio un error\",\n                status: \"error\",\n                duration: 3000,\n                isClosable: true,\n              })\n            return history.push(\n              `/questions/${userId || response.data?.saveUser.user?.id}`\n            )\n          }}\n        >\n          {({ isSubmitting, setValues }) => (\n            <Form style={{ width: \"100%\" }}>\n              <Box>\n                <Flex flexDir=\"column\" w=\"100%\">\n                  <FormikInput\n                    onBlur={onBlurCitizenField(setValues)}\n                    label={formatMessage({ id: \"form.document\" })}\n                    name=\"document\"\n                    disabled={userExists}\n                    id={CITIZEN_FORM.document}\n                    required\n                  />\n                  <FormikInput\n                    label={formatMessage({ id: \"form.names\" })}\n                    name=\"firstName\"\n                    required\n                    id={CITIZEN_FORM.firstName}\n                    disabled={userExists}\n                  />\n                  <FormikInput\n                    label={formatMessage({ id: \"form.lastNames\" })}\n                    name=\"lastName\"\n                    required\n                    id={CITIZEN_FORM.lastName}\n                    disabled={userExists}\n                  />\n                  <FormikInput\n                    label={formatMessage({ id: \"form.phone\" })}\n                    name=\"phone\"\n                    type=\"number\"\n                    required\n                    id={CITIZEN_FORM.phone}\n                  />\n                  <FormikInput\n                    label={formatMessage({ id: \"form.email\" })}\n                    name=\"email\"\n                    required\n                    id={CITIZEN_FORM.email}\n                  />\n                  <Flex justifyContent=\"space-around\">\n                    {!userExists && (\n                      <FormikInput\n                        label={formatMessage({ id: \"form.birthDate\" })}\n                        name=\"birthDate\"\n                        type=\"date\"\n                        max=\"2010-12-31\"\n                        min=\"1910-01-01\"\n                        placeholder=\"yyyy-mm-dd\"\n                        required\n                        id={CITIZEN_FORM.birthDate}\n                        pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                      />\n                    )}\n                    <FormikInput\n                      label={formatMessage({ id: \"form.age\" })}\n                      name=\"age\"\n                      type=\"number\"\n                      disabled\n                      w=\"80%\"\n                      ml={3}\n                      value={age}\n                      id={CITIZEN_FORM.age}\n                    />\n                  </Flex>\n                  <Box alignSelf=\"flex-end\" mt={\"1.75rem\"}>\n                    <ShouldRender if={reservations && !booked}>\n                      <PrimaryButton\n                        type=\"submit\"\n                        //disabled={error}\n                        isLoading={isSubmitting}\n                        id={CITIZEN_FORM.submit}\n                      >\n                        <DisplayText\n                          id=\"app.buttons.continue\"\n                          defaultMessage=\"continue\"\n                        />\n                      </PrimaryButton>\n                    </ShouldRender>\n                    <ReservationsList\n                      reservations={reservations}\n                      userId={userId}\n                      onChange={onBlurCitizenField(setValues)}\n                    />\n                  </Box>\n                </Flex>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Loading>\n    </Box>\n  )\n}\n\nexport default PersonalDataForm\n","export const getAgeFromDate = (stringDate: string) => {\n  const date = new Date(stringDate)\n  const diff_ms = Date.now() - date.getTime()\n  const age_dt = new Date(diff_ms)\n  return Math.abs(age_dt.getUTCFullYear() - 1970)\n}\n","import { Flex, Heading } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport Wrapper from \"../components/Wrapper\"\nimport PersonalDataForm from \"../container/PersonalDataForm\"\nimport { CITIZEN_FORM } from \"../ui/formIds\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\n\nconst UserData = () => {\n  return (\n    <Wrapper>\n      <Flex alignItems=\"center\" flex={1} p={5} flexDir=\"column\">\n        <Heading id={CITIZEN_FORM.headingTitle}>\n          <DisplayText\n            id=\"app.personalInformation.title\"\n            defaultMessage=\"Personal information\"\n          />\n        </Heading>\n        <PersonalDataForm />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default UserData\n","import React from \"react\"\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n} from \"@react-pdf/renderer\"\nimport { formatDate } from \"../utils/formatDate\"\n\ntype pdfProps = {\n  firstName: string\n  lastName: string\n  qrText: string\n  document: string\n  title: string\n  meetingDate: string\n  confirmationMessage: string\n}\n\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"column\",\n    textAlign: \"center\",\n  },\n  title: {\n    marginTop: 10,\n    fontSize: 30,\n    fontWeight: \"bold\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  image: {\n    marginVertical: 20,\n    marginHorizontal: 200,\n    width: \"210px\",\n    height: \"210px\",\n  },\n  imageLogo: {\n    marginVertical: 0,\n    marginHorizontal: 0,\n    width: \"60px\",\n    height: \"60px\",\n  },\n  paragraph: {\n    fontSize: 12,\n    width: \"80%\",\n    marginTop: 10,\n    marginHorizontal: 50,\n  },\n})\n\nconst PDF = ({\n  firstName,\n  lastName,\n  qrText,\n  document,\n  title,\n  meetingDate,\n  confirmationMessage,\n}: pdfProps) => {\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <View>\n          <Image\n            src=\"http://localhost:3000/logo192.png\"\n            style={styles.imageLogo}\n          />\n          <Text style={styles.title}>Reserva</Text>\n          <Text>\n            Bienvenid@ {firstName} {lastName}\n          </Text>\n          <Image src={qrText} style={styles.image} />\n          <Text>Documento: {document}</Text>\n          <Text>Reunión reservada: {title}</Text>\n          <Text>Fecha: {formatDate(meetingDate)}</Text>\n          <Text style={styles.paragraph}>{confirmationMessage}</Text>\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\nexport default PDF\n","import { Flex, Heading, Box } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { Reservation } from \"../generated/graphql\"\nimport { RESERVATION_VIEW } from \"../ui/formIds\"\nimport { formatDate } from \"../utils/formatDate\"\n\ntype ExternalProps = {\n  reservation: Reservation\n}\n\nexport default function ExternalReservationView({\n  reservation,\n}: ExternalProps) {\n  return (\n    <Flex flexDir=\"column\" alignItems=\"center\" flexWrap=\"wrap\">\n      <Heading id={RESERVATION_VIEW.title} mt={2} mb={2} as=\"h3\" size=\"lg\">\n        <DisplayText\n          id=\"app.externalReservation.title\"\n          defaultMessage=\"Reservation made by\"\n        />{\" \"}\n        {reservation?.citizen.firstName} {reservation?.citizen.lastName}\n      </Heading>\n\n      <Box>\n        <Box mt={2} mb={3}>\n          <Heading id={RESERVATION_VIEW.document} as=\"h4\" size=\"md\">\n            <DisplayText\n              id=\"form.document\"\n              defaultMessage=\"Reservation made by\"\n            />\n            :\n          </Heading>\n          {reservation?.citizen.document}\n          <Heading id={RESERVATION_VIEW.meetigTitle} as=\"h4\" size=\"md\">\n            <DisplayText\n              id=\"form.meetingReserved\"\n              defaultMessage=\"Meeting reserved\"\n            />\n            :\n          </Heading>\n          {reservation?.meeting.title}\n          <Heading id={RESERVATION_VIEW.meetingDate} as=\"h4\" size=\"md\">\n            <DisplayText id=\"form.date\" defaultMessage=\"Date\" />:\n          </Heading>\n          {formatDate(reservation?.meeting.meetingDate)}\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n","import { Flex, Heading, Box, Center, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { Reservation } from \"../generated/graphql\"\nimport { RESERVATION_VIEW } from \"../ui/formIds\"\nimport { formatDate } from \"../utils/formatDate\"\n\ntype UserReservationViewProps = {\n  reservation: Reservation\n}\n\nexport default function UserReservationView({\n  reservation,\n}: UserReservationViewProps) {\n  return (\n    <Flex flexDir=\"column\" alignItems=\"center\">\n      <Heading id={RESERVATION_VIEW.welcome} mt={2} mb={3} as=\"h3\" size=\"lg\">\n        <DisplayText id=\"app.reservation.title\" />{\" \"}\n        {reservation?.citizen.firstName} {reservation?.citizen.lastName}\n      </Heading>\n      <Box m=\"auto\">\n        <img\n          id={RESERVATION_VIEW.qrCode}\n          src={reservation?.qrText}\n          alt=\"qr\"\n          style={{ width: \"210px\", height: \"210px\", objectFit: \"cover\" }}\n        />\n      </Box>\n      <Box mt={3} mb={3}>\n        <Flex flexDir=\"column\" mt={2} mb={3}>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading\n                id={RESERVATION_VIEW.reservationTitleDocument}\n                as=\"h4\"\n                size=\"md\"\n              >\n                <DisplayText id=\"form.document\" defaultMessage=\"Document\" />:\n              </Heading>\n              <Text id={RESERVATION_VIEW.userDocument} fontSize=\"md\" ml={15}>\n                {reservation?.citizen.document}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading\n                id={RESERVATION_VIEW.reservationTitlemeeting}\n                as=\"h4\"\n                size=\"md\"\n              >\n                <DisplayText\n                  id=\"form.meetingReserved\"\n                  defaultMessage=\"Meeting reserved\"\n                />\n                :\n              </Heading>\n              <Text id={RESERVATION_VIEW.userMeeting} fontSize=\"md\" ml={15}>\n                {reservation?.meeting.title}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading\n                id={RESERVATION_VIEW.reservationTitleDate}\n                as=\"h4\"\n                size=\"md\"\n              >\n                <DisplayText id=\"form.date\" defaultMessage=\"Date\" />:\n              </Heading>\n              <Text\n                id={RESERVATION_VIEW.reservationUserDate}\n                fontSize=\"md\"\n                ml={15}\n              >\n                {formatDate(reservation?.meeting.meetingDate)}\n              </Text>\n            </Center>\n          </Flex>\n        </Flex>\n        <Text id={RESERVATION_VIEW.msgConfirm}>\n          <DisplayText id=\"app.reservation.message\" />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  Box,\n  Flex,\n  useToast,\n  Stack,\n  ModalFooter,\n  Spinner,\n} from \"@chakra-ui/react\"\nimport {\n  useSearchReservationQuery,\n  useCancelReservationMutation,\n} from \"../generated/graphql\"\nimport { useHistory } from \"react-router-dom\"\nimport WrapperButton from \"../components/formElements/PrimaryButton\"\nimport PDF from \"../components/DownloadPdf\"\nimport { PDFDownloadLink } from \"@react-pdf/renderer\"\nimport ModalWrapper from \"../components/ModalWrapper\"\nimport { RESERVATION_VIEW } from \"../ui/formIds\"\nimport CancelReservation from \"../components/CancelReservation\"\nimport ExternalReservationView from \"./ExternalReservationView\"\nimport UserReservationView from \"./UserReservationView\"\nimport { Reservation } from \"../generated/graphql\"\nimport CancelButton from \"../components/formElements/CancelButton\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport moment from \"moment\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\n\nconst ReservationView = ({ reservationId, external = false }: any) => {\n  const { formatMessage } = useIntl()\n  const [saving, setLoading] = useState(false)\n  const history = useHistory()\n  const toast = useToast()\n  const [, cancelReserve] = useCancelReservationMutation()\n\n  const [isOpen, setOpen] = useState(false)\n  const onClose = () => {\n    setOpen(false)\n  }\n\n  const [{ data, fetching, error }] = useSearchReservationQuery({\n    variables: { reservationId },\n  })\n  const userId = localStorage.getItem(\"userId\") || \"\"\n\n  // handle edge cases\n  if (fetching || saving) return <Spinner />\n  if (error) return <div>{error?.message}</div>\n  const reservation = data?.searchReservation?.reservation as Reservation\n  if (!reservation)\n    return (\n      <Box>\n        <DisplayText\n          id=\"app.reservation.noReservation\"\n          defaultMessage=\"There is no reservation with this id\"\n        />\n      </Box>\n    )\n  // -------\n\n  const onCancel = async () => {\n    setLoading(true)\n    const { data } = await cancelReserve({ reservationId, userId })\n    setLoading(false)\n    if (!data?.cancelReservation)\n      return toast({\n        title: formatMessage({ id: \"app.notification.cancelReservationError\" }),\n        isClosable: true,\n        duration: 3000,\n        status: \"error\",\n      })\n    toast({\n      title: formatMessage({ id: \"app.notification.cancelReservationOk\" }),\n      description: \"\",\n      isClosable: true,\n      duration: 3000,\n      status: \"success\",\n    })\n    history.push(\"/\")\n  }\n\n  return external ? (\n    <Box>\n      <ExternalReservationView reservation={reservation} />\n      <Flex mt={3} justifyContent=\"center\">\n        <WrapperButton\n          id={RESERVATION_VIEW.confirmBtn}\n          onClick={onCancel}\n          colorScheme=\"purple\"\n        >\n          <DisplayText id=\"app.buttons.confirm\" defaultMessage=\"confirm\" />\n        </WrapperButton>\n      </Flex>\n    </Box>\n  ) : (\n    <Box>\n      <UserReservationView reservation={reservation} />\n      <Flex mt={3} justifyContent=\"center\">\n        <Stack direction=\"row\" align=\"center\" spacing={3}>\n          <ShouldRender\n            if={\n              reservation?.meeting.meetingDate &&\n              moment(reservation?.meeting.meetingDate) > moment()\n            }\n          >\n            <CancelButton onClick={() => setOpen(true)}>\n              <DisplayText id=\"app.buttons.cancel\" defaultMessage=\"cancel\" />\n            </CancelButton>\n          </ShouldRender>\n          <PDFDownloadLink\n            style={{ marginRight: \"20px\" }}\n            document={\n              <PDF\n                firstName={reservation?.citizen.firstName}\n                lastName={reservation?.citizen.lastName}\n                qrText={reservation?.qrText}\n                document={reservation?.citizen.document}\n                title={reservation?.meeting.title}\n                meetingDate={reservation?.meeting.meetingDate}\n                confirmationMessage={formatMessage({\n                  id: \"app.message.confirmation\",\n                })}\n              />\n            }\n            fileName={`reservaAforo_${reservation?.meeting.id}.pdf`}\n          >\n            {({ loading }) => (\n              <WrapperButton\n                id={RESERVATION_VIEW.btnDownLoadPdf}\n                colorScheme=\"purple\"\n                isLoading={loading}\n              >\n                {loading\n                  ? formatMessage({ id: \"app.buttons.loading\" })\n                  : formatMessage({ id: \"app.buttons.downLoad\" })}\n              </WrapperButton>\n            )}\n          </PDFDownloadLink>\n        </Stack>\n      </Flex>\n      <ModalWrapper\n        titulo=\"\"\n        contenido={\n          <>\n            <DisplayText\n              id=\"app.modalReservation.cancelMessage\"\n              defaultMessage=\"Are you sure to cancel the reservation?\"\n            />\n            <ModalFooter>\n              <CancelReservation\n                reservationId={reservationId}\n                userId={userId}\n                meetingDate={reservation?.meeting.meetingDate}\n                onChange={() => history.push(\"/\")}\n                labeled\n              />\n            </ModalFooter>\n          </>\n        }\n        onClose={onClose}\n        isOpen={isOpen}\n      />\n    </Box>\n  )\n}\n\nexport default ReservationView\n","import { Flex } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useHistory, useLocation, useParams } from \"react-router-dom\"\nimport Wrapper from \"../components/Wrapper\"\nimport ReservationView from \"../container/ReservationView\"\nimport queryString from \"query-string\"\n\nconst ReservationData = () => {\n  const history = useHistory()\n  const location = useLocation()\n  let { reservationId }: any = useParams()\n  const { external = false } = queryString.parse(location.search)\n  if (!reservationId) history.push(\"/\")\n  return (\n    <Wrapper>\n      <Flex alignItems=\"center\" flex={1} p={5} flexDir=\"column\">\n        <ReservationView reservationId={reservationId} external={external} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default ReservationData\n","import { ButtonGroup } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"./formElements/DisplayMessage\"\nimport WrapperButton from \"./formElements/PrimaryButton\"\nimport { DefaultFun } from \"./types\"\nimport NeutralButton from \"./formElements/NeutralButton\"\n\ntype GroupProps = {\n  onYes: DefaultFun\n  onNo: DefaultFun\n  yesLbl?: string\n  noLbl?: string\n  yesProps?: any\n  noProps?: any\n}\n\nconst YesNoButtonGroup = ({\n  onYes,\n  onNo,\n  yesProps = {},\n  noProps = {},\n}: GroupProps) => {\n  return (\n    <ButtonGroup spacing=\"3\">\n      <NeutralButton onClick={onNo} {...noProps}>\n        <DisplayText id=\"app.buttons.cancel\" defaultMessage=\"cancel\" />\n      </NeutralButton>\n      <WrapperButton onClick={onYes} colorScheme=\"purple\" {...yesProps}>\n        <DisplayText id=\"app.buttons.continue\" defaultMessage=\"continue\" />\n      </WrapperButton>\n    </ButtonGroup>\n  )\n}\n\nexport default YesNoButtonGroup\n","import { useToast } from \"@chakra-ui/react\"\nimport { useParams, useHistory } from \"react-router-dom\"\n\nconst useValidUser = () => {\n  const { userId }: any = useParams()\n  const history = useHistory()\n  const toast = useToast()\n  if (userId) return userId\n  toast({\n    status: \"error\",\n    title: \"acceso invalido\",\n    duration: 4000,\n    onCloseComplete: () => history.push(\"/\"),\n  })\n  return null\n}\n\nexport default useValidUser\n","import {\n  Box,\n  Center,\n  Flex,\n  Heading,\n  Spinner,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\"\nimport React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport Loading from \"../components/formElements/Loading\"\nimport Wrapper from \"../components/Wrapper\"\nimport YesNoButtonGroup from \"../components/YesNoButtonGroup\"\nimport {\n  useGetMeetingQuery,\n  useGetUserByIdQuery,\n  useConfirmReservationMutation,\n} from \"../generated/graphql\"\nimport { CONFIRM_RESERVATION } from \"../ui/formIds\"\nimport { formatDate } from \"../utils/formatDate\"\nimport useValidUser from \"../utils/validUserInfo\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\n// TODO: move msgs to lang file\nconst Confirm = () => {\n  const userId = useValidUser()\n  const history = useHistory()\n  const toast = useToast()\n  const meetingId = localStorage.getItem(\"meetingId\") || \"\"\n  const [, confirm] = useConfirmReservationMutation()\n  if (!meetingId) history.push(\"/\")\n\n  const [confirming, setConfirming] = useState(false)\n  const [\n    { data: userData, fetching: userFetching, error: userError },\n  ] = useGetUserByIdQuery({ variables: { userId } })\n  const [\n    { data: meetingData, fetching: meetingFetching, error: meetingError },\n  ] = useGetMeetingQuery({ variables: { id: meetingId } })\n\n  if (userFetching || meetingFetching) return <Spinner />\n  if (userError || !userData)\n    return <Box>No se pudo obtener la informacion del usuario</Box>\n  if (meetingError || !meetingData)\n    return <Box>No se pudo obtener la informacion de la reunion</Box>\n\n  const objUser = userData?.userById?.user\n  const meet = meetingData?.meeting?.meeting\n\n  const onConfirm = async () => {\n    setConfirming(true)\n    const res = await confirm({ userId, meetingId })\n    setConfirming(false)\n    if (res.data?.addReservation.errors)\n      return toast({\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        title: \"error al confirmar\",\n        description: res.data.addReservation.errors[0].message,\n      })\n    history.push(`/reservation/${res.data?.addReservation.reservation?.id}`)\n  }\n\n  return (\n    <Wrapper>\n      <Flex w=\"100%\" alignItems=\"center\" flexDir=\"column\">\n        <Heading id={CONFIRM_RESERVATION.meetTitle} mb={5} as=\"h3\">\n          {meet?.title}\n        </Heading>\n        <Flex flexDir=\"column\">\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.userTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.user\" defaultMessage=\"User\" />:\n              </Heading>{\" \"}\n              <Text id={CONFIRM_RESERVATION.fullnameUser} fontSize=\"md\" ml={15}>\n                {objUser?.firstName} {objUser?.lastName}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.documentTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.document\" defaultMessage=\"Document\" />:\n              </Heading>{\" \"}\n              <Text id={CONFIRM_RESERVATION.documentUser} fontSize=\"md\" ml={15}>\n                {objUser?.document}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.contactTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.contact\" defaultMessage=\"Contact\" />:\n              </Heading>{\" \"}\n              <Text id={CONFIRM_RESERVATION.contactUser} fontSize=\"md\" ml={15}>\n                {objUser?.phone}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.emailTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.email\" defaultMessage=\"Email\" />:\n              </Heading>{\" \"}\n              <Text id={CONFIRM_RESERVATION.emailUser} fontSize=\"md\" ml={15}>\n                {objUser?.email}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.dateTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.date\" defaultMessage=\"Date\" />:\n              </Heading>\n              <Text id={CONFIRM_RESERVATION.dateUser} fontSize=\"md\" ml={15}>\n                {formatDate(meet?.meetingDate || \"\")}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.spotsTitle} as=\"h4\" size=\"md\">\n                <DisplayText\n                  id=\"form.SpaceAvailable\"\n                  defaultMessage=\"Space available\"\n                />\n                :\n              </Heading>\n              <Text id={CONFIRM_RESERVATION.spotsUser} fontSize=\"md\" ml={15}>\n                {meet?.spots}\n              </Text>\n            </Center>\n          </Flex>\n          <Box mt={3}>\n            <Text\n              id={CONFIRM_RESERVATION.confirmDates}\n              fontSize=\"md\"\n              style={{ color: \"#dc6d6d\" }}\n            >\n              <DisplayText id=\"app.confirm.notice\" />\n            </Text>\n          </Box>\n        </Flex>\n        <Flex mt={3}>\n          <Loading loading={confirming}>\n            <YesNoButtonGroup\n              onNo={() => history.replace(\"/\")}\n              onYes={onConfirm}\n              yesProps={{ disabled: confirming }}\n            />\n          </Loading>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Confirm\n","import { Flex, Heading, useToast } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport React from \"react\"\nimport Wrapper from \"../components/Wrapper\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport { useHeartbeatQuery, useLoginMutation } from \"../generated/graphql\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useIntl } from \"react-intl\"\nimport Loading from \"../components/formElements/Loading\"\nimport queryString from \"query-string\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\n\nconst Login = () => {\n  const [, login] = useLoginMutation()\n  const [{ data, fetching }] = useHeartbeatQuery()\n  const { formatMessage } = useIntl()\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const history = useHistory()\n  const location = useLocation()\n  const { next = \"/dashboard\" } = queryString.parse(location.search)\n  const toast = useToast({\n    duration: 3000,\n    isClosable: true,\n  })\n  const validateInputs = (values: any) => {\n    const { user, pwd } = values\n    const errors: any = {}\n\n    if (!user) {\n      errors.user = IS_REQUIRED\n    }\n    if (!pwd) {\n      errors.pwd = IS_REQUIRED\n    }\n\n    return errors\n  }\n\n  if (data && data.heartBeat) history.push(\"/dashboard\")\n  return (\n    <Wrapper>\n      <Flex w=\"100%\" alignItems=\"center\" flex={1} p={5} flexDir=\"column\">\n        <Heading mb={5}>\n          <DisplayText id=\"app.login.title\" defaultMessage=\"Aforo Admin\" />\n        </Heading>\n        <Formik\n          initialValues={{\n            user: \"\",\n            pwd: \"\",\n          }}\n          validate={(values) => {\n            const errors = validateInputs(values)\n            return errors\n          }}\n          onSubmit={async ({ pwd, user }: any) => {\n            const { data } = await login({ pwd, usr: user })\n            if (data?.login.errors) {\n              return toast({\n                description: data?.login.errors[0].message,\n                status: \"error\",\n              })\n            }\n            if (data?.login.admin) {\n              toast({\n                description: `${formatMessage({\n                  id: \"app.reservation.title\",\n                })} ${data.login.admin.firstName}`,\n                status: \"success\",\n              })\n              history.push(String(next))\n            }\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form style={{ width: \"90%\" }}>\n              <Flex mb={5} justifyContent=\"space-around\" flexDir=\"column\">\n                <FormikInput\n                  label={formatMessage({ id: \"form.user\" })}\n                  name=\"user\"\n                  required\n                />\n                <FormikInput\n                  label={formatMessage({ id: \"form.pwd\" })}\n                  type=\"password\"\n                  name=\"pwd\"\n                  required\n                />\n              </Flex>\n              <PrimaryButton\n                type=\"submit\"\n                data-qa=\"submit\"\n                isLoading={isSubmitting}\n              >\n                <DisplayText\n                  id=\"app.buttons.continue\"\n                  defaultMessage=\"continue\"\n                />\n              </PrimaryButton>\n            </Form>\n          )}\n        </Formik>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Login\n","import { Cache, QueryInput } from \"@urql/exchange-graphcache\"\n\n// this is used to redefine the types for typescript for\n// the cacheExhange mutation\nexport function betterUpdateQuery<Result, Query>(\n  cache: Cache,\n  qi: QueryInput,\n  result: any,\n  fn: (r: Result, q: Query) => Query\n) {\n  return cache.updateQuery(qi, (data) => fn(result, data as any) as any)\n}\n","import { createStandaloneToast } from \"@chakra-ui/react\"\n\ntype ToastProps = {\n  description?: string\n  title: string\n  type: \"error\" | \"warning\" | \"success\"\n}\n\nconst Notify = ({ description = undefined, title, type }: ToastProps) => {\n  const toast = createStandaloneToast()\n  toast({\n    title,\n    description,\n    status: type,\n    duration: 3000,\n    isClosable: true,\n  })\n}\n\nexport default Notify\n","import {\n  createClient,\n  dedupExchange,\n  Exchange,\n  fetchExchange,\n  subscriptionExchange,\n  stringifyVariables,\n} from \"urql\"\nimport { cacheExchange, Cache, Resolver } from \"@urql/exchange-graphcache\"\nimport { betterUpdateQuery } from \"./utils/createBetterQuery\"\nimport { tap, pipe } from \"wonka\"\nimport {\n  HeartbeatDocument,\n  HeartbeatQuery,\n  LoginMutation,\n  LogoutMutation,\n  MeetingsDocument,\n  MeetingsQuery,\n  NewMeetingSubscription,\n  MeetingDeleteSubscription,\n} from \"./generated/graphql\"\nimport { useHistory } from \"react-router-dom\"\nimport { SubscriptionClient } from \"subscriptions-transport-ws\"\nimport Notify from \"./utils/notify\"\n\nconst app_uri = `//${process.env.API_URL || \"localhost:4000\"}/graphql`\nconst subscriptionClient = new SubscriptionClient(`ws:${app_uri}`, {\n  reconnect: true,\n})\n\nconst errorExchange: Exchange = ({ forward }) => (ops$) => {\n  const history = useHistory()\n  return pipe(\n    forward(ops$),\n    tap(({ error }) => {\n      if (error?.message.includes(\"not authenticated\")) {\n        history ? history.replace(\"/login\") : window.location.replace(\"/login\")\n      }\n      if (error && error.message) {\n        return Notify({\n          title: error.message,\n          type: \"error\",\n        })\n      }\n    })\n  )\n}\n\nconst invalidateQuerys = (cache: Cache, fName: string) => {\n  const fieldInfos = cache\n    .inspectFields(\"Query\")\n    .filter((info) => info.fieldName === fName)\n  fieldInfos.forEach(({ fieldName, arguments: variables }: any) => {\n    cache.invalidate(\"Query\", fieldName, variables || undefined)\n  })\n}\n\nconst cursorPagination = (): Resolver => {\n  return (_parent, fieldArgs, cache, info) => {\n    const { parentKey: entityKey, fieldName } = info\n\n    const allFields = cache.inspectFields(entityKey)\n    const fieldInfos = allFields.filter((info) => info.fieldName === fieldName)\n    const size = fieldInfos.length\n    if (size === 0) {\n      return undefined\n    }\n    // check if the data is in the cache and return it\n    const fieldKey = `${fieldName}(${stringifyVariables(fieldArgs)})`\n    const isItInCache = cache.resolve(entityKey, fieldKey) as string[]\n    info.partial = !isItInCache // make sure it calls the BE when there is not data\n    const results: string[] = []\n    let hasMore = true\n    fieldInfos.forEach((fi) => {\n      const key = cache.resolve(entityKey, fi.fieldKey) as string\n      const data = cache.resolve(key, \"meetings\") as string[]\n      const _hasMore = cache.resolve(key, \"hasMore\")\n      if (!_hasMore) {\n        hasMore = _hasMore as boolean\n      }\n      results.push(...data)\n    })\n    return { __typename: \"PaginatedMeetings\", hasMore, posts: results }\n  }\n}\n\nconst createUrqlClient = () => {\n  return createClient({\n    url: process.env.REACT_APP_API || `http:${app_uri}`,\n    requestPolicy: \"cache-first\",\n    fetchOptions: {\n      credentials: \"include\",\n    },\n    exchanges: [\n      dedupExchange,\n      cacheExchange({\n        keys: {\n          Admin: (data) => data.name as string,\n          PlaceResponse: () => null,\n          PaginatedMeetings: () => null,\n        },\n        resolvers: {\n          Query: {\n            meetings: cursorPagination(),\n          },\n        },\n        updates: {\n          Mutation: {\n            logout: (result, _args, cache, _info) => {\n              betterUpdateQuery<LogoutMutation, HeartbeatQuery>(\n                cache,\n                { query: HeartbeatDocument },\n                result,\n                () => ({ heartBeat: null })\n              )\n            },\n            login: (results, _args, cache, _info) => {\n              betterUpdateQuery<LoginMutation, HeartbeatQuery>(\n                cache,\n                { query: HeartbeatDocument },\n                results,\n                (res, que) => {\n                  if (res.login.errors) return que\n                  return { heartBeat: res.login.admin }\n                }\n              )\n            },\n            saveMeeting: (_results, _args, cache, _info) => {\n              invalidateQuerys(cache, \"meetings\")\n            },\n            deleteMeeting: (_results, _args, cache, _info) => {\n              invalidateQuerys(cache, \"meetings\")\n            },\n            updateUser: (_results, _args, cache, _info) => {\n              invalidateQuerys(cache, \"getUserData\")\n            },\n          },\n          Subscription: {\n            newMeeting: (result, _args, cache) => {\n              const variables = {\n                limit: 15,\n                cursor: null as null | string,\n              }\n              betterUpdateQuery<NewMeetingSubscription, MeetingsQuery>(\n                cache,\n                { query: MeetingsDocument, variables },\n                result,\n                (res, que) => {\n                  const meeting = res.newMeeting.data\n                  if (!meeting) return que\n                  if (meeting.isActive === \"true\")\n                    que.meetings.meetings.unshift(meeting)\n                  else\n                    que.meetings.meetings = que.meetings.meetings.filter(\n                      (met) => met.id !== meeting.id\n                    )\n                  return que\n                }\n              )\n            },\n            meetingDelete: (result, _args, cache) => {\n              const variables = {\n                limit: 15,\n                cursor: null as null | string,\n              }\n              betterUpdateQuery<MeetingDeleteSubscription, MeetingsQuery>(\n                cache,\n                { query: MeetingsDocument, variables },\n                result,\n                (res, que) => {\n                  const meetingId = res.meetingDelete.data\n                  if (!meetingId) return que\n\n                  que.meetings.meetings = que.meetings.meetings.filter(\n                    (met) => met.id !== meetingId\n                  )\n                  return que\n                }\n              )\n            },\n          },\n        },\n      }),\n      subscriptionExchange({\n        forwardSubscription(operation) {\n          return subscriptionClient.request(operation)\n        },\n      }),\n      errorExchange,\n      fetchExchange,\n    ],\n  })\n}\n\nexport default createUrqlClient\n","import React, { useState } from \"react\"\nimport { IntlProvider } from \"react-intl\"\nimport Spanish from \"../lang/es.json\"\nimport English from \"../lang/en.json\"\n\nexport const Context = React.createContext({\n  locale: \"es\",\n  selectLanguage: (e: any) => null,\n})\nconst languages: any = {\n  es: Spanish,\n  en: English,\n}\nconst local = navigator.language\n\nlet lang = local === \"en\" ? English : Spanish\n\nconst LangWrapper = (props: any) => {\n  const [state, setState] = useState({ locale: local, messages: lang })\n\n  function selectLanguage(e: any) {\n    const newLocale = e.target.value\n    setState({ locale: newLocale, messages: languages[newLocale] || Spanish })\n    return null\n  }\n\n  return (\n    <Context.Provider value={{ locale: state.locale, selectLanguage }}>\n      <IntlProvider {...state}>{props.children}</IntlProvider>\n    </Context.Provider>\n  )\n}\n\nexport default LangWrapper\n","import { Box, Select } from \"@chakra-ui/react\"\nimport React, { useContext } from \"react\"\nimport { Context } from \"../context/LangWrapper\"\n\nconst LangDropDown = (props: any) => {\n  const context = useContext(Context)\n  return (\n    <Box className=\"LangDropDown\">\n      <Select\n        value={context.locale}\n        variant=\"unstyled\"\n        onChange={context.selectLanguage}\n      >\n        <option value=\"en\">English</option>\n        <option value=\"es\">Español</option>\n      </Select>\n    </Box>\n  )\n}\nexport default LangDropDown\n","//purpleVersion\n// btn: #8f6bbb\n// tabSection: #8f6bbb12\n// font: #414141\n// btnFont: #8f6bbb\nexport const brand = {\n  100: \"#f1f5fc\", //bg\n  200: \"#3e4685\", //actions\n  300: \"#87888a\", //font\n  400: \"#3e4685\", // titles\n  500: \"#96B4D5\", // bgDark\n  600: \"#E8E4E7\", // darkActions\n  700: \"#486AE5\", // darkFont\n  800: \"#252E48\", // darkTitles\n}\n\nexport const app_brand = {\n  bg: \"#f1f5fc\",\n  section: \"#f3f8fe\",\n  secondIcon: \"#e5e8f7\",\n  actions: \"#3e4685\",\n  actionsFont: \"white\",\n  font: \"black\",\n  titles: \"#3e4685\",\n  darkBg: \"#414141\",\n  darkActions: \"#63b3ed\",\n  darkFont: \"white\",\n  darkTitles: \"#63b3ed\",\n  darkSection: \"white\",\n  darkSecondIcon: \"#8f6bbb\",\n}\n\nexport const defaultFont = '\"Lato\", sans-serif'\n\nexport const btnProps = {\n  padding: \"1px\",\n  whiteSpace: \"normal\",\n  wordWrap: \"break-word\",\n  size: \"md\",\n  height: \"3rem\",\n  width: \"7.5rem\",\n  borderRadius: \"0.375rem\",\n  _hover: {\n    opacity: \"0.8\",\n  },\n}\n\nexport const iconBtnProps = {\n  _hover: {\n    opacity: \"0.8\",\n  },\n}\n\nexport const TabSectionStyles = {\n  borderRadius: \"5%\",\n}\n\nexport const TabStyles = {\n  _focus: {\n    fontWeight: \"600\",\n  },\n  minHeight: \"400px\",\n  shadow: \"md\",\n}","import React from \"react\"\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\"\nimport { IconButton, useColorMode } from \"@chakra-ui/react\"\nimport { NAVABAR_LIST } from \"../ui/formIds\"\nimport { app_brand } from \"../theme/components/general\"\n\nconst Toggle = () => {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <IconButton\n      onClick={toggleColorMode}\n      aria-label=\"toggleDarkMode\"\n      icon={colorMode === \"dark\" ? <SunIcon /> : <MoonIcon />}\n      id={NAVABAR_LIST.darkMode}\n      color={colorMode === \"dark\" ? app_brand.darkActions : app_brand.actions}\n      borderColor={colorMode === \"dark\" ? app_brand.darkActions : app_brand.actions}\n      borderWidth=\"1px\"\n    />\n  )\n}\n\nexport default Toggle\n","import { Divider } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { app_brand } from \"../../theme/components/general\"\n\nconst DividerWrapper = (props: any) => {\n  return <Divider opacity=\"1\" {...props} borderColor={app_brand.titles} />\n}\n\nexport default DividerWrapper\n","import React from \"react\"\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Text,\n  useColorMode,\n  Spinner,\n} from \"@chakra-ui/react\"\nimport { useHeartbeatQuery, useLogoutMutation } from \"../generated/graphql\"\nimport DisplayText from \"./formElements/DisplayMessage\"\nimport ShouldRender from \"./ShouldRender\"\nimport { SettingsIcon } from \"@chakra-ui/icons\"\nimport { useHistory } from \"react-router-dom\"\nimport { app_brand } from \"../theme/components/general\"\n\nexport default function Account() {\n  const { colorMode } = useColorMode()\n  const [{ data }] = useHeartbeatQuery()\n  const history = useHistory()\n  const [{ fetching }, logout] = useLogoutMutation()\n  if (fetching) return <Spinner />\n\n  return (\n    <ShouldRender if={data && data.heartBeat}>\n      <Menu>\n        <MenuButton as={Text}>\n          <DisplayText\n            id=\"app.navbar.greeting\"\n            defaultMessage=\"registrado como\"\n          />{\" \"}\n          {data?.heartBeat?.firstName}\n          <SettingsIcon ml={3} />\n        </MenuButton>\n        <MenuList\n          background={colorMode === \"dark\" ? app_brand.darkBg : app_brand.bg}\n        >\n          <MenuItem\n            onClick={async () => {\n              history.push(\"/settings\")\n            }}\n          >\n            <DisplayText id=\"app.account.settings\" defaultMessage=\"settings\" />\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              await logout()\n            }}\n          >\n            <DisplayText id=\"app.account.logOut\" defaultMessage=\"logout\" />\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </ShouldRender>\n  )\n}\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\ntype subtitleProps = {\n  value: string\n  id: string\n}\nconst Subtitle = ({ value, id }: subtitleProps) => {\n  return (\n    <Box as=\"h2\" id={id} >\n      {value}\n    </Box>\n  )\n}\n\nexport default Subtitle\n","import React from \"react\"\nimport { NAVABAR_LIST } from \"../ui/formIds\"\nimport { Flex } from \"@chakra-ui/react\"\nimport Subtitle from \"./formElements/Subtitle\"\nimport Heading from \"./formElements/Heading\"\n\nexport default function OrganizationTitle() {\n  return (\n    <Flex flexDir=\"column\" align=\"initial\" flexGrow={1} ml={3}>\n      <Heading id={NAVABAR_LIST.headerTitle}>\n        CENTRO DE FE Y ESPERANZA DE BELLO\n      </Heading>\n      <Subtitle\n        value=\"REGISTRO DE ASISTENCIA A LAS REUNIONES\"\n        id={NAVABAR_LIST.subTitle}\n      />\n    </Flex>\n  )\n}\n","import { useColorMode } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { app_brand } from \"../theme/components/general\"\nconst Logo = () => {\n  const { colorMode } = useColorMode()\n  return (\n    <svg\n      id=\"svg\"\n      viewBox=\"0 0 149.27 93.58\"\n      width=\"60px\"\n      fill={colorMode === \"dark\" ? app_brand.darkActions : app_brand.actions}\n    >\n      <g id=\"Capa_2\" data-name=\"Capa 2\">\n        <g id=\"Capa_3\" data-name=\"Capa 3\">\n          <path d=\"M87.41,47.84c-1.12,0-2.24,0-3.35,0-4-.06-4.26-.36-4.38-4.22A12.28,12.28,0,0,0,79,38.84c-.25-.59-.56-1.18-1.31-1s-.89.82-.88,1.45a22.32,22.32,0,0,0,.26,2.58c.26,1.93,1.24,4.11-.58,5.57a3.42,3.42,0,0,1-4.21-.1c-1.62-1.57-.68-3.71-.4-5.64a18.84,18.84,0,0,0,.21-2.59c0-.66-.28-1.25-1-1.3-.55,0-.85.42-1.07.89a12.37,12.37,0,0,0-.72,5.12c-.12,3.65-.46,4-4.18,4-2.86,0-5.73.09-8.58,0-2.44-.11-3.17-1-2.8-3.33.61-3.86,1.46-7.54,5.84-9.17a35.78,35.78,0,0,0,6.54-3.56c2.45-1.56,2.64-2.46.83-4.77A23.1,23.1,0,0,1,62.55,16a4.17,4.17,0,0,0-.39-1.79c-1.59-2.14-1.33-3.77.91-5.3.61-.41.74-1.52,1.1-2.31A10.55,10.55,0,0,1,74.46,0,10.53,10.53,0,0,1,84.78,6.59c.36.78.48,1.94,1.09,2.31,2.65,1.62,2.08,3.36.88,5.66-.77,1.47-.72,3.37-1,5.09a13.42,13.42,0,0,1-3.59,7.61c-1.89,1.91-1.78,2.87.55,4.35,2.61,1.66,5.41,3,8.11,4.58s5,6.55,4.49,9.57a2.19,2.19,0,0,1-2.3,2c-1.86.06-3.73,0-5.6,0ZM74.65,12.77v0c-1.73,0-3.47,0-5.2,0S67,13.68,67,15.35c0,3.65,1.13,6.83,4,9.22a5.51,5.51,0,0,0,8-.34,10.51,10.51,0,0,0,2.87-7.06c.28-3.93-.09-4.32-3.91-4.39C76.88,12.76,75.76,12.77,74.65,12.77Z\" />\n          <path d=\"M71.78,62A15.6,15.6,0,0,1,87.85,77.62c.09,8.24-6.56,16-16.62,16-7.07-.06-16-5.5-16.08-15.78A15.63,15.63,0,0,1,71.78,62Zm-.71,6.8c-4.88,0-8.45,3.81-8.46,8.93a8.58,8.58,0,0,0,8.87,9,8.7,8.7,0,0,0,8.89-9C80.35,72.29,76.62,68.72,71.07,68.78Z\" />\n          <path d=\"M106.41,83l4.31,4.4c1.46,1.51,3,3,3.73,5-3.92,1.86-7.13,1.28-10-1.56C102.28,88.85,101,86,98,84.24c-.63,2.08-.26,4-.36,6-.15,2.86-.43,3.14-3.32,3.2-3.33.06-4-.45-4.16-3.28s0-5.47,0-8.21c0-5.35,0-10.71,0-16.06,0-3.21.52-3.77,3.68-3.73,4,0,8-.48,11.9.47,4.7,1.13,7.71,4.16,8.27,8.46a10.49,10.49,0,0,1-5.52,10.57C107.87,82,107.06,82,106.41,83ZM97.67,72.76c0,3.74.24,4.15,2.64,4.12,3.87,0,6.17-1.5,6.22-3.94s-2.15-4.09-5.6-4.11C98,68.82,97.69,69.15,97.67,72.76Z\" />\n          <path d=\"M149.22,78c-.05,8.84-7.24,15.38-16.49,15.56-7.69.15-16.41-7.52-15.84-16.31S124,61.75,133.13,61.78C143.68,61.82,149.85,70.06,149.22,78Zm-7.53-.3c0-5.59-3.3-8.94-8.72-8.89-5.19,0-8.41,3.4-8.44,8.8,0,5.65,3.18,9.07,8.54,9.09S141.7,83.27,141.69,77.67Z\" />\n          <path d=\"M14.78,62.07c4,0,4.15,0,5.45,3.56,3,8.4,5.94,16.85,8.93,25.26.57,1.61.07,2.38-1.58,2.46-1,.05-2,0-3,0-1.69,0-2.9-.57-3.2-2.4-.38-2.33-1.9-3-4-2.83a35.09,35.09,0,0,1-4.47,0c-2.55-.17-4.55.17-5.44,3.17-.58,2-5.09,2.9-6.79,1.72-1.15-.78-.51-1.8-.21-2.67,1.9-5.51,3.85-11,5.79-16.51.91-2.57,1.85-5.13,2.75-7.7C10.41,62.07,10.39,62.06,14.78,62.07Zm.07,9.72-.69,0c-.85,2.52-1.69,5.05-2.54,7.57-.42,1.21,0,1.92,1.29,2,.86,0,1.72,0,2.58,0,1.58,0,2.33-.67,1.78-2.33C16.46,76.64,15.66,74.21,14.85,71.79Z\" />\n          <path d=\"M31.2,77.54c0-4-.06-8,0-11.94.05-3,.55-3.46,3.53-3.51Q42.4,62,50,62.09a3.72,3.72,0,0,1,3.23,5.72c-.6,1.06-1.64,1-2.62,1-3,0-6,0-8.95,0-2.73.07-2.94.34-3,3.05-.06,3,.28,3.49,2.88,3.58s5,0,7.46,0c2.73.09,3.09.55,3.07,3.43s-.35,3.19-3.22,3.27c-2.36.06-4.73,0-7.09,0-2.8.08-3,.27-3.09,3-.06,1.74,0,3.48,0,5.22-.11,2.58-.45,2.84-3.19,2.93-3.21.09-4.15-.4-4.22-2.8-.14-4.35,0-8.7,0-13Z\" />\n          <path d=\"M44.33,47.84a20.64,20.64,0,0,1-2.61,0c-1.59-.21-3.88.85-4.43-1.53a6.14,6.14,0,0,1,1.89-6.46A42.54,42.54,0,0,1,45,36.47c2.89-1.62,3-1.95,1.07-4.75a12.83,12.83,0,0,1-2.24-10.58c1.08-4.43,5.3-7.37,9.42-6.6,5,.94,8.16,5.1,7.46,10a15.09,15.09,0,0,1-3.24,7.83,21.08,21.08,0,0,0-5.37,12.82C52,47,50.94,47.8,49.18,47.81H44.33ZM57,22.92c-.32.3-.59.43-.61.6-.12.94-.42,1.78-1.52,1.73-1.25-.05-1.23-1-1-1.9s-.19-1.33-1-1.69A13.56,13.56,0,0,1,50,20c-1.57-1.29-2.27-.32-2.67,1a9.75,9.75,0,0,0,1.12,8.52c1.15,1.76,2.93,2.09,4.9,1.88s2.79-1.36,3.35-3A8.55,8.55,0,0,0,57,22.92Z\" />\n          <path d=\"M104.22,47.84c-1.89-.22-4.36.72-6.27-.57s-1.16-3.9-1.69-5.89a24.11,24.11,0,0,0-4.57-8.85c-2.52-3.23-4.09-6.82-3.14-11.07,1-4.69,5.25-7.73,9.51-6.91a8.83,8.83,0,0,1,7.44,10,15,15,0,0,1-2.85,7.56c-1.65,2.14-1.47,2.71.78,4,1.82,1.08,3.66,2.11,5.52,3.11a4.59,4.59,0,0,1,2.22,2.39c1.83,4.49.77,6.16-4,6.18Zm-2.48-25.1c-.34.47-.57.64-.59.83-.1,1-.49,1.77-1.56,1.68-1.23-.1-1.15-1.07-1-2s-.3-1.3-1-1.65A14.77,14.77,0,0,1,94.74,20c-1.31-1-2-.48-2.53.73-1.15,2.45-.49,7.14,1.3,9.15a4.62,4.62,0,0,0,8-1.54A8.73,8.73,0,0,0,101.74,22.74Z\" />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default Logo\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport LangDropDown from \"./LangDropDown\"\nimport { NAVABAR_LIST } from \"../ui/formIds\"\nimport ToggleDarkMode from \"./ToggleDarkMode\"\nimport { Box, Flex, Text } from \"@chakra-ui/react\"\nimport DisplayText from \"./formElements/DisplayMessage\"\nimport DividerWrapper from \"./formElements/Divider\"\nimport Account from \"./Account\"\nimport OrganizationTitle from \"./OrganizationTitle\"\nimport Logo from \"./Logo\"\n\nconst NavBar = () => {\n  return (\n    <Box style={{ position: \"sticky\" }} pl={5} pr={5} pt={2}>\n      <Flex alignItems=\"center\" flexWrap=\"wrap\" height=\"60px\">\n        <ToggleDarkMode />\n        <Box ml={3} w=\"100px\">\n          <Link to=\"/\" id={NAVABAR_LIST.logo}>\n            <Flex align=\"center\">\n              <Logo />\n              {/* <Text ml={2}>\n                <DisplayText id=\"app.navBar.home\" defaultMessage=\"home\" />\n              </Text> */}\n            </Flex>\n          </Link>\n        </Box>\n        <DividerWrapper mr={5} ml={5} orientation=\"vertical\" />\n        <OrganizationTitle />\n        <Flex\n          flexDir=\"row\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\"\n          flexGrow={1}\n          height=\"100%\"\n        >\n          <DividerWrapper mr={5} ml={5} orientation=\"vertical\" />\n          <LangDropDown />\n          <DividerWrapper mr={5} ml={5} orientation=\"vertical\" />\n          <Account />\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default NavBar\n","import { Spinner } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"../../components/formElements/DisplayMessage\"\nimport Heading from \"../../components/formElements/Heading\"\nimport { useHeartbeatQuery } from \"../../generated/graphql\"\nimport { MEETINGS_LIST } from \"../../ui/formIds\"\n\nexport default function DashboardTitle() {\n  const [{ data, fetching }] = useHeartbeatQuery()\n  if (fetching) return <Spinner />\n  return (\n    <Heading id={MEETINGS_LIST.title} fontSize=\"3xl\">\n      <DisplayText id=\"app.dashboard.title\" defaultMessage=\"hello\" />{\" \"}\n      {data?.heartBeat?.firstName}!\n    </Heading>\n  )\n}\n","import {\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n  useStyleConfig,\n} from \"@chakra-ui/react\"\nimport React from \"react\"\n\ntype TabsProps = {\n  tabs: { label: string; content: React.ReactNode }[]\n  isFitted?: boolean\n  isLazy: boolean\n  onChange?: (index: number) => void\n  defaultIndex?: number\n}\n\nexport default function TabsSection({\n  tabs,\n  defaultIndex = 0,\n  ...props\n}: TabsProps) {\n  const style = useStyleConfig(\"Tabs\", {})\n  return (\n    <Tabs\n      align=\"end\"\n      // variant=\"enclosed\"\n      {...props}\n      sx={style}\n      defaultIndex={defaultIndex}\n    >\n      <TabList>\n        {tabs.map((tab, index) => (\n          <Tab key={index}>{tab.label}</Tab>\n        ))}\n      </TabList>\n      <TabPanels>\n        {tabs.map((tab, index) => (\n          <TabPanel p={4} key={index}>\n            {tab.content}\n          </TabPanel>\n        ))}\n      </TabPanels>\n    </Tabs>\n  )\n}\n","import React from \"react\"\nimport { SelectControl } from \"formik-chakra-ui\"\nimport { FormLabel, FormControl } from \"@chakra-ui/react\"\n\nconst Select = ({\n  options,\n  id,\n  label,\n  name,\n  placeholder = \"select\",\n  ...props\n}: any) => {\n  return (\n    <FormControl mt={2}>\n      <FormLabel id={`lbl-${id}`} htmlFor={id} {...props}>\n        {label}\n      </FormLabel>\n      <SelectControl id={id} name={name} selectProps={{ placeholder }} m={0}>\n        {options?.map(({ id, name }: any) => (\n          <option key={id} value={id}>\n            {name}\n          </option>\n        ))}\n      </SelectControl>\n    </FormControl>\n  )\n}\n\nexport default Select\n","export default function isEmpty(element: any) {\n  if (typeof element === \"object\") {\n    return Object.keys(element).length === 0\n  }\n  return Boolean(element)\n}\n","import { MeetingDataType } from \"../components/types\"\n\nconst isMeetingDataValid = ({\n  title,\n  meetingDate,\n  spots,\n  place,\n  isActive,\n  formatMessage,\n}: MeetingDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n\n  if (!title) {\n    errors.title = IS_REQUIRED\n  } else if (title.length < 2 || title.length > 30) {\n    errors.title = IS_INCORRECT\n  }\n\n  if (!meetingDate) {\n    errors.meetingDate = IS_REQUIRED\n  }\n\n  if (!place) {\n    errors.place = IS_REQUIRED\n  }\n\n  if (!spots) {\n    errors.spots = IS_REQUIRED\n  } else if (spots < 1) {\n    errors.spots = IS_INCORRECT\n  }\n\n  if (!isActive) {\n    errors.isActive = IS_REQUIRED\n  }\n\n  return errors\n}\n\nexport default isMeetingDataValid\n","import { Box, Flex, Text, Radio, Spinner } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport React from \"react\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport Select from \"../components/formElements/Select\"\nimport {\n  useSaveMeetingMutation,\n  useGetPlacesQuery,\n  MeetingInput,\n} from \"../generated/graphql\"\nimport { useIntl } from \"react-intl\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport moment from \"moment\"\nimport isEmpty from \"../utils/isEmpty\"\nimport { formatAgeDate } from \"../utils/formatDate\"\nimport { RadioGroupControl } from \"formik-chakra-ui\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport Notify from \"../utils/notify\"\nimport ModalActions from \"../components/ModalActions\"\nimport isMeetingDataValid from \"../utils/isMeetingDataValid\"\n\nconst MeetingDataForm = ({ children, meeting, onChange }: any) => {\n  const [, saveMeeting] = useSaveMeetingMutation()\n  const { formatMessage } = useIntl()\n  const initialValues = isEmpty(meeting)\n    ? {\n        meetingId: \"\",\n        title: \"\",\n        meetingDate: \"\",\n        spots: 0,\n        place: \"\",\n        isActive: \"true\",\n      }\n    : {\n        ...meeting,\n        meetingId: meeting.id,\n        meetingDate: formatAgeDate(meeting.meetingDate),\n        place: meeting.place.id,\n      }\n\n  const validateInputs = (values: any) => {\n    const errors = isMeetingDataValid({ ...values, formatMessage })\n\n    return errors\n  }\n\n  const [{ data: placeData, fetching: placeLoading }] = useGetPlacesQuery()\n\n  const onSubmit = async ({ ...values }) => {\n    const { meetingId, createdAt, ...data } = values\n    const saveMeetingResponse = await saveMeeting({\n      meetingId,\n      data: data as MeetingInput,\n    })\n    if (saveMeetingResponse.error) {\n      return Notify({\n        title: formatMessage({ id: \"app.notification.saveMeetingError\" }),\n        type: \"error\",\n      })\n    }\n    if (typeof onChange === \"function\") onChange()\n    //window.location.reload()\n    Notify({\n      title: formatMessage({ id: \"app.notification.saveMeetingOk\" }),\n      type: \"success\",\n    })\n  }\n\n  if (placeLoading) return <Spinner />\n  return (\n    <Box minW=\"300px\">\n      <Formik\n        enableReinitialize\n        initialValues={initialValues}\n        validate={validateInputs}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, setValues, values }) => (\n          <Form style={{ width: \"100%\" }}>\n            <Box>\n              <Flex flexDir=\"column\" w=\"100%\">\n                <FormikInput\n                  id=\"1\"\n                  label={formatMessage({ id: \"form.title\" })}\n                  name=\"title\"\n                  disabled={false}\n                  required\n                />\n                <ShouldRender if={placeData?.getUserPlaces.place}>\n                  <Select\n                    id=\"selec\"\n                    label={formatMessage({ id: \"form.place\" })}\n                    name=\"place\"\n                    placeholder={formatMessage({ id: \"form.place\" })}\n                    options={placeData?.getUserPlaces.place?.filter(\n                      (i) => String(i.isActive) === \"true\"\n                    )}\n                  />\n                </ShouldRender>\n                <FormikInput\n                  id=\"3\"\n                  label={formatMessage({ id: \"form.date\" })}\n                  name=\"meetingDate\"\n                  type=\"datetime-local\"\n                  min={moment().format(\"yyyy-MM-ddThh:mm\")}\n                  required\n                />\n                <FormikInput\n                  type=\"number\"\n                  id=\"4\"\n                  label={formatMessage({ id: \"form.spots\" })}\n                  name=\"spots\"\n                  disabled={false}\n                  required\n                />\n                <Box mt={3}>\n                  <RadioGroupControl\n                    label={formatMessage({ id: \"app.label.state\" })}\n                    name=\"isActive\"\n                  >\n                    <Radio value=\"false\">\n                      <DisplayText\n                        id=\"form.inactive\"\n                        defaultMessage=\"Inactive\"\n                      />\n                    </Radio>\n                    <Radio value=\"true\">\n                      <DisplayText id=\"form.active\" defaultMessage=\"Active\" />\n                    </Radio>\n                  </RadioGroupControl>\n                  <ShouldRender if={String(values.isActive) === \"true\"}>\n                    <Text\n                      color=\"tomato\"\n                      as=\"i\"\n                      fontSize=\"md\"\n                      noOfLines={2}\n                      style={{ paddingTop: \"3px\", paddingBottom: \"10px\" }}\n                    >\n                      <DisplayText\n                        id=\"app.meetingForm.activeMessage\"\n                        defaultMessage=\"When activating the meeting, users will be able to reserve quotas Meetings with reservations cannot be modified / deleted\"\n                      />\n                    </Text>\n                  </ShouldRender>\n                </Box>\n                <ModalActions>\n                  {children}\n                  <PrimaryButton type=\"submit\" isLoading={isSubmitting}>\n                    <DisplayText id=\"app.buttons.save\" defaultMessage=\"save\" />\n                  </PrimaryButton>\n                </ModalActions>\n              </Flex>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default MeetingDataForm\n","import { PlusSquareIcon } from \"@chakra-ui/icons\"\nimport React from \"react\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport Card from \"./Card\"\nimport IconButton from \"./formElements/IconButton\"\n\nexport default function AddCard(props: any) {\n  return (\n    <Card\n      border=\"dashed\"\n      className={MEETINGS_LIST.meetingCard}\n      actions={\n        <IconButton\n          height=\"100%\"\n          id={MEETINGS_LIST.btnNewMeeting}\n          aria-label=\"newMeeting\"\n          iconType=\"IconPlus\"\n          fontSize=\"50px\"\n          onClick={props?.onClick}\n          icon={<PlusSquareIcon />}\n        />\n      }\n    />\n  )\n}\n","import React, { useState } from \"react\"\nimport { Flex, Text } from \"@chakra-ui/react\"\nimport ShouldRender from \"../../../components/ShouldRender\"\nimport ModalWrapper from \"../../../components/ModalWrapper\"\nimport MeetingDataForm from \"../../../container/MeetingData\"\nimport MeetingCard from \"../../../container/MeetingCard\"\nimport PrimaryButton from \"../../../components/formElements/PrimaryButton\"\nimport AddCard from \"../../../components/AddCard\"\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\"\nimport CancelButton from \"../../../components/formElements/CancelButton\"\nimport isEmpty from \"../../../utils/isEmpty\"\nimport NeutralButton from \"../../../components/formElements/NeutralButton\"\nimport DisplayText from \"../../../components/formElements/DisplayMessage\"\nimport Loading from \"../../../components/formElements/Loading\"\nimport IconButton from \"../../../components/formElements/IconButton\"\nimport {\n  useMeetingDeleteSubscription,\n  useMeetingsQuery,\n} from \"../../../generated/graphql\"\nimport { useDeleteMeetMutation } from \"../../../generated/graphql\"\nimport Notify from \"../../../utils/notify\"\nimport { useIntl } from \"react-intl\"\nimport { ACTIVE_CARD_COLOR, INACTIVE_CARD_COLOR } from \"../../../constants\"\nimport { v4 } from \"uuid\"\n\nexport default function Meetings() {\n  const { formatMessage } = useIntl()\n  const [variables, setVariables] = useState({\n    limit: 15,\n    cursor: null as null | string,\n  })\n  const [{ data, fetching }] = useMeetingsQuery({ variables })\n  const [newMeeting, setNewMeeting] = useState(false)\n  const [deleteMeeting, setDeleteMeeting] = useState(false)\n  const [meetingData, setMeeting] = useState({})\n  const [, getIdMeetMutation] = useDeleteMeetMutation()\n\n  useMeetingDeleteSubscription()\n\n  const onCloseFormMeeting = () => {\n    setNewMeeting(false)\n  }\n\n  const onCloseDeleteMeeting = () => {\n    setDeleteMeeting(false)\n  }\n\n  const deleteThisMeeting = async (meeting: any) => {\n    if (isEmpty(meeting)) return\n    const res = await getIdMeetMutation({ meetingId: meeting.id })\n    if (res.error) {\n      setDeleteMeeting(false)\n      return Notify({\n        title: res.error.message,\n        type: \"error\",\n      })\n    }\n    if (res.data?.deleteMeeting.errors) {\n      setDeleteMeeting(false)\n      return Notify({\n        title: formatMessage({ id: \"app.notification.cantDeleteMeet\" }),\n        type: \"error\",\n      })\n    }\n    setDeleteMeeting(false)\n\n    return Notify({\n      title: formatMessage({ id: \"app.notification.deleteMeet\" }),\n      type: \"success\",\n    })\n  }\n\n  return (\n    <>\n      <Flex justifyContent=\"center\" flexWrap=\"wrap\">\n        <Loading loading={fetching}>\n          <AddCard\n            onClick={() => {\n              setMeeting({})\n              setNewMeeting(true)\n            }}\n          />\n        </Loading>\n        <ShouldRender if={data && data.meetings.meetings}>\n          {data?.meetings.meetings.map(({ __typename, ...reu }) => (\n            <MeetingCard\n              {...reu}\n              bg={\n                reu.isActive === \"false\"\n                  ? INACTIVE_CARD_COLOR\n                  : ACTIVE_CARD_COLOR\n              }\n              key={v4()}\n            >\n              <IconButton\n                onClick={() => {\n                  setMeeting(reu)\n                  setDeleteMeeting(true)\n                }}\n                mr={2}\n                aria-label=\"eliminar\"\n                iconType=\"IconDelete\"\n                icon={<DeleteIcon />}\n              />\n              <IconButton\n                onClick={() => {\n                  setMeeting(reu)\n                  setNewMeeting(true)\n                }}\n                aria-label=\"editar\"\n                iconType=\"IconEdit\"\n                icon={<EditIcon />}\n              />\n            </MeetingCard>\n          ))}\n        </ShouldRender>\n        {data?.meetings.hasMore ? (\n          <Flex>\n            <PrimaryButton\n              isLoading={fetching}\n              mt={8}\n              onClick={() => {\n                setVariables({\n                  limit: variables.limit,\n                  cursor:\n                    data.meetings.meetings[data.meetings.meetings.length - 1]\n                      .createdAt,\n                })\n              }}\n            >\n              load more\n            </PrimaryButton>\n          </Flex>\n        ) : null}\n      </Flex>\n      <ModalWrapper\n        titulo={formatMessage({ id: \"app.meetingForm.deleteMeeting\" })}\n        contenido={\n          <Text>\n            <DisplayText\n              id=\"app.meetingForm.deleteMessage\"\n              defaultMessage=\"Are you sure you want to delete this meeting?\"\n            />\n          </Text>\n        }\n        actions={\n          <>\n            <CancelButton\n              onClick={() => {\n                deleteThisMeeting(meetingData)\n              }}\n            >\n              <DisplayText id=\"app.buttons.delete\" defaultMessage=\"delete\" />\n            </CancelButton>\n            <PrimaryButton onClick={onCloseDeleteMeeting}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </PrimaryButton>\n          </>\n        }\n        isOpen={deleteMeeting}\n        onClose={onCloseDeleteMeeting}\n      />\n      <ModalWrapper\n        titulo={\n          isEmpty(meetingData)\n            ? formatMessage({ id: \"app.meetingForm.newMeeting\" })\n            : formatMessage({ id: \"app.meetingForm.updateMeeting\" })\n        }\n        contenido={\n          <MeetingDataForm meeting={meetingData} onChange={onCloseFormMeeting}>\n            <NeutralButton onClick={onCloseFormMeeting} mr={3}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </NeutralButton>\n          </MeetingDataForm>\n        }\n        isOpen={newMeeting}\n        onClose={onCloseFormMeeting}\n      />\n    </>\n  )\n}\n","import { PlaceDataType } from \"../components/types\"\n\nconst isPlaceDataValid = ({ name, address, formatMessage }: PlaceDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n\n  if (!name) {\n    errors.name = IS_REQUIRED\n  } else if (name.length < 3 || name.length > 30) {\n    errors.name = IS_INCORRECT\n  }\n\n  if (!address) {\n    errors.address = IS_REQUIRED\n  } else if (address.length < 3 || address.length > 25) {\n    errors.address = IS_INCORRECT\n  }\n\n  return errors\n}\n\nexport default isPlaceDataValid\n","import { Box, Flex, Radio } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport { RadioGroupControl } from \"formik-chakra-ui\"\nimport React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport isEmpty from \"../utils/isEmpty\"\nimport { useAddPlaceMutation } from \"../generated/graphql\"\nimport ModalActions from \"../components/ModalActions\"\nimport isPlaceDataValid from \"../utils/isPlaceDataValid\"\nimport Notify from \"../utils/notify\"\n\nconst PlaceData = ({ children, place }: any) => {\n  const { formatMessage } = useIntl()\n  const [, addPlaceMutation] = useAddPlaceMutation()\n  const initialValues = isEmpty(place)\n    ? {\n        id: \"\",\n        name: \"\",\n        address: \"\",\n        isActive: \"true\",\n      }\n    : {\n        ...place,\n      }\n\n  const validateInputs = (values: any) => {\n    const errors = isPlaceDataValid({ ...values, formatMessage })\n\n    return errors\n  }\n\n  const onSubmit = async ({ id, ...values }: any) => {\n    const place = await addPlaceMutation({ placeId: id, data: values })\n    if (place.error) {\n      return Notify({\n        title: formatMessage({ id: \"app.notification.Couldn'tCreatePlace\" }),\n        type: \"error\",\n      })\n    }\n    window.location.reload()\n    return Notify({\n      title: formatMessage({ id: \"app.notification.placeCreatedCorrectly\" }),\n      type: \"success\",\n    })\n  }\n\n  return (\n    <Box minW=\"300px\">\n      <Formik\n        enableReinitialize\n        initialValues={initialValues}\n        validate={validateInputs}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, setValues, values }) => (\n          <Form style={{ width: \"100%\" }}>\n            <Box>\n              <Flex flexDir=\"column\" w=\"100%\">\n                <FormikInput\n                  id=\"1\"\n                  label={formatMessage({ id: \"form.names\" })}\n                  name=\"name\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"2\"\n                  label={formatMessage({ id: \"form.address\" })}\n                  name=\"address\"\n                  disabled={false}\n                  required\n                />\n                <Box mt={3}>\n                  <RadioGroupControl\n                    label={formatMessage({ id: \"app.label.state\" })}\n                    name=\"isActive\"\n                  >\n                    <Radio value=\"false\">\n                      <DisplayText\n                        id=\"form.inactive\"\n                        defaultMessage=\"Inactive\"\n                      />\n                    </Radio>\n                    <Radio value=\"true\">\n                      <DisplayText id=\"form.active\" defaultMessage=\"Active\" />\n                    </Radio>\n                  </RadioGroupControl>\n                </Box>\n                <ModalActions>\n                  {children}\n                  <PrimaryButton type=\"submit\" isLoading={isSubmitting}>\n                    <DisplayText id=\"app.buttons.save\" defaultMessage=\"save\" />\n                  </PrimaryButton>\n                </ModalActions>\n              </Flex>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default PlaceData\n","import { Box, Flex } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport Card from \"../components/Card\"\nimport Heading from \"../components/formElements/Heading\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport DisplayPair from \"../components/DisplayPairText\"\n\ntype MeetingProps = {\n  id: string | number | undefined\n  name: string\n  address: string\n  children: any\n  bg?: string\n}\n\nconst PlaceCard = ({ id, name, address, children, bg = \"\" }: MeetingProps) => {\n  return (\n    <Card\n      key={id}\n      className={MEETINGS_LIST.meetingCard}\n      actions={<Box alignSelf=\"flex-end\">{children}</Box>}\n    >\n      <Heading mb={3} className={MEETINGS_LIST.meetingTitle}>\n        {name}\n      </Heading>\n      <DisplayPair\n        bold={<DisplayText id=\"form.address\" defaultMessage=\"address\" />}\n        text={address}\n      />\n    </Card>\n  )\n}\n\nexport default PlaceCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\n\nconst DefaultContainer = ({ children }: { children: React.ReactNode }) => (\n  <Flex flex={1} justifyContent=\"center\" flexWrap=\"wrap\">\n    {children}\n  </Flex>\n)\n\nexport default DefaultContainer\n","import React, { useState } from \"react\"\nimport { Text } from \"@chakra-ui/react\"\nimport ModalWrapper from \"../../../components/ModalWrapper\"\nimport AddCard from \"../../../components/AddCard\"\nimport isEmpty from \"../../../utils/isEmpty\"\nimport NeutralButton from \"../../../components/formElements/NeutralButton\"\nimport DisplayText from \"../../../components/formElements/DisplayMessage\"\nimport Loading from \"../../../components/formElements/Loading\"\nimport PlaceData from \"../../../container/PlaceData\"\nimport {\n  useGetPlacesQuery,\n  useDeletePlaceMutation,\n} from \"../../../generated/graphql\"\nimport ShouldRender from \"../../../components/ShouldRender\"\nimport IconButton from \"../../../components/formElements/IconButton\"\nimport PlaceCard from \"../../../container/PlaceCard\"\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\"\nimport CancelButton from \"../../../components/formElements/CancelButton\"\nimport PrimaryButton from \"../../../components/formElements/PrimaryButton\"\nimport Notify from \"../../../utils/notify\"\nimport { ACTIVE_CARD_COLOR, INACTIVE_CARD_COLOR } from \"../../../constants\"\nimport { useIntl } from \"react-intl\"\nimport { v4 } from \"uuid\"\nimport DefaultContainer from \"../../../components/DefaultContainer\"\n\nexport default function Locations() {\n  const [newPlace, setnewPlace] = useState(false)\n  const [deletePlaceModal, setdeletePlaceModal] = useState(false)\n  const [placeData, setPlace] = useState({})\n  const [{ data, fetching }] = useGetPlacesQuery()\n  const [, idPlaceDelete] = useDeletePlaceMutation()\n  const { formatMessage } = useIntl()\n\n  const onCloseFormPlace = () => {\n    setnewPlace(false)\n  }\n\n  const onCloseDeletePlace = () => {\n    setdeletePlaceModal(false)\n  }\n\n  const deletePlace = async (placeId: any) => {\n    if (!placeId) return\n    const res = await idPlaceDelete({ placeId: placeId })\n\n    if (res.data?.deletePlace.errors || res.error) {\n      setdeletePlaceModal(false)\n      return Notify({\n        title: formatMessage({ id: \"app.notification.cantDeletePlace\" }),\n        type: \"error\",\n      })\n    }\n    setdeletePlaceModal(false)\n    window.location.reload()\n    return Notify({\n      title: formatMessage({ id: \"app.notification.deletePlaceOk\" }),\n      type: \"success\",\n    })\n  }\n\n  return (\n    <>\n      <DefaultContainer>\n        <Loading loading={fetching}>\n          <AddCard\n            onClick={() => {\n              setPlace({})\n              setnewPlace(true)\n            }}\n          />\n        </Loading>\n        <ShouldRender if={data && data.getUserPlaces}>\n          {data?.getUserPlaces.place?.map(({ __typename, ...place }: any) => (\n            <PlaceCard\n              key={v4()}\n              {...place}\n              bg={\n                String(place.isActive) === \"true\"\n                  ? ACTIVE_CARD_COLOR\n                  : INACTIVE_CARD_COLOR\n              }\n            >\n              <IconButton\n                onClick={() => {\n                  setdeletePlaceModal(true)\n                  setPlace(place.id)\n                }}\n                aria-label=\"eliminar\"\n                iconType=\"IconDelete\"\n                mr={2}\n                icon={<DeleteIcon />}\n              />\n              <IconButton\n                onClick={() => {\n                  setPlace(place)\n                  setnewPlace(true)\n                }}\n                iconType=\"IconEdit\"\n                aria-label=\"editar\"\n                icon={<EditIcon />}\n              />\n            </PlaceCard>\n          ))}\n        </ShouldRender>\n      </DefaultContainer>\n      <ModalWrapper\n        titulo={\n          isEmpty(placeData)\n            ? formatMessage({ id: \"app.modalLocation.newPlace\" })\n            : formatMessage({ id: \"app.modalLocation.modifyPlace\" })\n        }\n        contenido={\n          <PlaceData place={placeData}>\n            <NeutralButton onClick={onCloseFormPlace} mr={3}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </NeutralButton>\n          </PlaceData>\n        }\n        isOpen={newPlace}\n        onClose={onCloseFormPlace}\n      />\n      <ModalWrapper\n        titulo={formatMessage({ id: \"app.modalLocation.titleDeletePlace\" })}\n        contenido={\n          <Text>\n            <DisplayText id=\"app.modalLocation.deletePlace\" />\n          </Text>\n        }\n        actions={\n          <>\n            <CancelButton\n              onClick={() => {\n                deletePlace(placeData)\n              }}\n            >\n              <DisplayText id=\"app.buttons.delete\" defaultMessage=\"delete\" />\n            </CancelButton>\n            <PrimaryButton onClick={onCloseDeletePlace}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </PrimaryButton>\n          </>\n        }\n        isOpen={deletePlaceModal}\n        onClose={onCloseDeletePlace}\n      />\n    </>\n  )\n}\n","import { AdminDataType } from \"../components/types\"\n\nconst isAdminDataValid = ({\n  firstName,\n  lastName,\n  phone,\n  email,\n  username,\n  password,\n  repeatPassword,\n  formatMessage,\n}: AdminDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n  const IS_PWD = formatMessage({ id: \"form.pssCorrect\" })\n  const IS_PWDNOREPEAT = formatMessage({ id: \"app.login.pwdIncorret\" })\n\n  const onlyLetters = /^[a-zA-Z\\s]*$/\n  const isEmailValid = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i\n  const isPasswordValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/\n\n  if (!firstName) {\n    errors.firstName = IS_REQUIRED\n  } else if (firstName.length < 4 || firstName.length > 15) {\n    errors.firstName = IS_INCORRECT\n  } else if (!onlyLetters.test(firstName)) {\n    errors.firstName = IS_INCORRECT\n  }\n\n  if (!lastName) {\n    errors.lastName = IS_REQUIRED\n  } else if (lastName.length < 3 || lastName.length > 15) {\n    errors.lastName = IS_INCORRECT\n  } else if (!onlyLetters.test(lastName)) {\n    errors.lastName = IS_INCORRECT\n  }\n\n  if (!phone) {\n    errors.phone = IS_REQUIRED\n  } else if (String(phone).length !== 7 && String(phone).length !== 10) {\n    errors.phone = IS_INCORRECT\n  }\n\n  if (!email) {\n    errors.email = IS_REQUIRED\n  } else if (!isEmailValid.test(email)) {\n    errors.email = IS_INCORRECT\n  }\n\n  if (!username) {\n    errors.username = IS_REQUIRED\n  } else if (username.length < 5 || username.length > 10) {\n    errors.username = IS_INCORRECT\n  }\n\n  if (!password) {\n    errors.password = IS_REQUIRED\n  } else if (!isPasswordValid.test(password)) {\n    errors.password = IS_PWD\n  }\n\n  if (!repeatPassword) {\n    errors.repeatPassword = IS_REQUIRED\n  } else if (repeatPassword !== password) {\n    errors.repeatPassword = IS_PWDNOREPEAT\n  }\n\n  return errors\n}\n\nexport default isAdminDataValid\n","import { Box, Flex } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport Notify from \"../utils/notify\"\nimport { useAddAdminMutation } from \"../generated/graphql\"\nimport ModalActions from \"../components/ModalActions\"\nimport isAdminDataValid from \"../utils/isAdminDataValid\"\n\nconst AdminData = ({ children }: any) => {\n  const { formatMessage } = useIntl()\n  const [, saveAdmin] = useAddAdminMutation()\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    phone: 0,\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  }\n\n  const validateInputs = (values: any) => {\n    const errors = isAdminDataValid({ ...values, formatMessage })\n    return errors\n  }\n\n  const onSubmit = async ({ ...values }: any) => {\n    const { repeatPassword, ...data } = values\n    const res = await saveAdmin({ data: data })\n    if (res.data?.register.errors) {\n      return Notify({\n        title: formatMessage({ id: \"app.modalAdmin.dontSaveAdmin\" }),\n        type: \"error\",\n      })\n    }\n    return Notify({\n      title: formatMessage({ id: \"app.modalAdmin.saveAdmin\" }),\n      type: \"success\",\n    })\n  }\n\n  return (\n    <Box minW=\"300px\">\n      <Formik\n        enableReinitialize\n        initialValues={initialValues}\n        validate={validateInputs}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, setValues, values }) => (\n          <Form style={{ width: \"100%\" }}>\n            <Box>\n              <Flex flexDir=\"column\" w=\"100%\">\n                <FormikInput\n                  id=\"1\"\n                  label={formatMessage({ id: \"form.names\" })}\n                  name=\"firstName\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"2\"\n                  label={formatMessage({ id: \"form.lastNames\" })}\n                  name=\"lastName\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"3\"\n                  label={formatMessage({ id: \"form.phone\" })}\n                  type=\"number\"\n                  name=\"phone\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"4\"\n                  label={formatMessage({ id: \"form.email\" })}\n                  name=\"email\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"5\"\n                  label={formatMessage({ id: \"form.user\" })}\n                  name=\"username\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"6\"\n                  type=\"password\"\n                  label={formatMessage({ id: \"form.pwd\" })}\n                  name=\"password\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"7\"\n                  type=\"password\"\n                  label={formatMessage({ id: \"form.Repeatpwd\" })}\n                  name=\"repeatPassword\"\n                  disabled={false}\n                  required\n                />\n                <ModalActions>\n                  {children}\n                  <PrimaryButton type=\"submit\" isLoading={isSubmitting}>\n                    <DisplayText id=\"app.buttons.save\" defaultMessage=\"save\" />\n                  </PrimaryButton>\n                </ModalActions>\n              </Flex>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default AdminData\n","import { Box, Flex } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport Card from \"../components/Card\"\nimport Heading from \"../components/formElements/Heading\"\nimport Text from \"../components/formElements/Text\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport BoldText from \"../components/formElements/BoldText\"\nimport DisplayPair from \"../components/DisplayPairText\"\n\ntype MeetingProps = {\n  id: string | number | undefined\n  firstName: string\n  lastName: string\n  phone: string\n  email: string\n  username: string\n  children: any\n  bg?: string\n}\n\nconst PlaceCard = ({\n  id,\n  firstName,\n  lastName,\n  phone,\n  email,\n  children,\n  username,\n}: MeetingProps) => {\n  return (\n    <Card\n      key={id}\n      className={MEETINGS_LIST.meetingCard}\n      actions={<Box alignSelf=\"flex-end\">{children}</Box>}\n    >\n      <Heading mb={3} className={MEETINGS_LIST.meetingTitle}>\n        {firstName} {lastName}\n      </Heading>\n      <DisplayPair\n        bold={<DisplayText id=\"form.phone\" defaultMessage=\"Phone\" />}\n        text={phone}\n      />\n      <DisplayPair\n        bold={<DisplayText id=\"form.email\" defaultMessage=\"Email\" />}\n        text={email}\n      />\n      <DisplayPair\n        bold={<DisplayText id=\"form.user\" defaultMessage=\"User\" />}\n        text={username}\n      />\n    </Card>\n  )\n}\n\nexport default PlaceCard\n","import React, { useState } from \"react\"\nimport AddCard from \"../../../components/AddCard\"\nimport ModalWrapper from \"../../../components/ModalWrapper\"\nimport isEmpty from \"../../../utils/isEmpty\"\nimport { useIntl } from \"react-intl\"\nimport AdminData from \"../../../container/AdminData\"\nimport NeutralButton from \"../../../components/formElements/NeutralButton\"\nimport DisplayText from \"../../../components/formElements/DisplayMessage\"\nimport { useGetAdminDataQuery } from \"../../../generated/graphql\"\nimport Loading from \"../../../components/formElements/Loading\"\nimport ShouldRender from \"../../../components/ShouldRender\"\nimport AdminCard from \"../../../container/AdminCard\"\nimport { v4 } from \"uuid\"\nimport DefaultContainer from \"../../../components/DefaultContainer\"\n\nconst Admins = ({ adminId }: any) => {\n  const { formatMessage } = useIntl()\n  const [, setPlace] = useState({})\n  const [newAdmin, setnewAdmin] = useState(false)\n\n  const [{ data, fetching }] = useGetAdminDataQuery()\n\n  const onCloseFormAdmin = () => {\n    setnewAdmin(false)\n  }\n\n  return (\n    <>\n      <DefaultContainer>\n        <Loading loading={fetching}>\n          <ShouldRender if={data && data?.getAdminsData.length < 2}>\n            <AddCard\n              onClick={() => {\n                setPlace({})\n                setnewAdmin(true)\n              }}\n            />\n          </ShouldRender>\n        </Loading>\n        <ShouldRender if={data && data.getAdminsData}>\n          {data?.getAdminsData.map(\n            ({\n              id,\n              firstName,\n              lastName,\n              phone,\n              email,\n              children,\n              username,\n            }: any) => (\n              <AdminCard\n                key={v4()}\n                id={id}\n                firstName={firstName}\n                lastName={lastName}\n                phone={phone}\n                email={email}\n                children={children}\n                username={username}\n              />\n            )\n          )}\n        </ShouldRender>\n      </DefaultContainer>\n      <ModalWrapper\n        titulo={\n          isEmpty(adminId)\n            ? formatMessage({ id: \"app.modalAdmin.modifyAdmin\" })\n            : formatMessage({ id: \"app.modalAdmin.newAdmin\" })\n        }\n        contenido={\n          <AdminData adminId={adminId}>\n            <NeutralButton onClick={onCloseFormAdmin} mr={3}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </NeutralButton>\n          </AdminData>\n        }\n        isOpen={newAdmin}\n        onClose={onCloseFormAdmin}\n      />\n    </>\n  )\n}\n\nexport default Admins\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\nimport { useIsAuth } from \"../../hooks/useIsAuth\"\nimport DashboardTitle from \"./Title\"\nimport TabsSection from \"../../components/formElements/Tabs\"\nimport { useIntl } from \"react-intl\"\nimport Meetings from \"./tabs/Meetings\"\nimport Locations from \"./tabs/Locations\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport queryString from \"query-string\"\nimport Admins from \"./tabs/Admins\"\n\nexport default function Dashboard() {\n  useIsAuth()\n  const history = useHistory()\n  const location = useLocation()\n  const { formatMessage } = useIntl()\n  const { tab = 0 } = queryString.parse(location.search)\n\n  const tabData = [\n    {\n      label: formatMessage({ id: \"app.dashboard.tab1\" }),\n      content: (\n        <Box mt=\"3em\">\n          <Locations />\n        </Box>\n      ),\n    },\n    {\n      label: formatMessage({ id: \"app.dashboard.tab2\" }),\n      content: (\n        <Box mt=\"3em\">\n          <Meetings />\n        </Box>\n      ),\n    },\n    {\n      label: formatMessage({ id: \"app.dashboard.tab3\" }),\n      content: (\n        <Box mt=\"3em\">\n          <Admins />\n        </Box>\n      ),\n    },\n  ]\n  const onChange = (tabIndex: number) => {\n    history.replace(`/dashboard?tab=${tabIndex}`)\n  }\n\n  return (\n    <Box mt=\"3em\" width=\"100%\">\n      <DashboardTitle />\n      <Box mt=\"3em\">\n        <TabsSection\n          tabs={tabData}\n          isLazy\n          onChange={onChange}\n          defaultIndex={Number(tab)}\n        />\n      </Box>\n    </Box>\n  )\n}\n","import { useEffect } from \"react\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useHeartbeatQuery } from \"../generated/graphql\"\n\nexport const useIsAuth = () => {\n  const [{ data, fetching }] = useHeartbeatQuery()\n  const history = useHistory()\n  const location = useLocation()\n  useEffect(() => {\n    if (!fetching && !data?.heartBeat)\n      history.replace(`/login?next=${location.pathname}`)\n  }, [fetching, data, history, location.pathname])\n}\n","import { Box, Divider, Flex, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { app_brand } from \"../theme/components/general\"\n\nconst Footer = () => {\n  return (\n    <Box\n      style={{\n        position: \"fixed\",\n        textAlign: \"center\",\n        width: \"100%\",\n        bottom: 0,\n        borderTop: \"1px solid\",\n        borderTopColor: app_brand.titles,\n      }}\n    >\n      <Flex ml={2} w=\"100%\" alignContent=\"center\" p={2} flexWrap=\"wrap\">\n        <Box flexGrow={0}>\n          <img style={{ width: \"25px\" }} src=\"/logoSvg.svg\" alt=\"logo\" />\n        </Box>\n        <Box>\n          <Text ml={2}>© 2020 Dnsic </Text>\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Footer\n","import { Link, useStyleConfig } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"./formElements/DisplayMessage\"\nimport FormikInput from \"./formElements/FormikInput\"\nimport ShouldRender from \"./ShouldRender\"\nimport { useIntl } from \"react-intl\"\n\nconst ChangePwd = ({ onChangenewPwd, newPwd }: any) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Link\n        mt={4}\n        onClick={() => {\n          onChangenewPwd(!newPwd)\n        }}\n        href=\"#\"\n        sx={useStyleConfig(\"Link\", {})}\n      >\n        {newPwd ? (\n          <DisplayText id=\"app.label.hide\" defaultMessage=\"hide\" />\n        ) : (\n          <DisplayText\n            id=\"app.buttons.changePwd\"\n            defaultMessage=\"change password\"\n          />\n        )}\n      </Link>\n      <ShouldRender if={newPwd}>\n        <FormikInput\n          id=\"5\"\n          type=\"password\"\n          label={formatMessage({ id: \"form.pwd\" })}\n          name=\"password\"\n          disabled={false}\n          required={newPwd}\n        />\n        <FormikInput\n          id=\"6\"\n          type=\"password\"\n          label={formatMessage({ id: \"form.Newpwd\" })}\n          name=\"newPassword\"\n          disabled={false}\n          required={newPwd}\n        />\n        <FormikInput\n          id=\"7\"\n          type=\"password\"\n          label={formatMessage({ id: \"form.Repeatpwd\" })}\n          name=\"repeatPassword\"\n          disabled={false}\n          required={newPwd}\n        />\n      </ShouldRender>\n    </>\n  )\n}\n\nexport default ChangePwd\n","import { SettingsDataType } from \"../components/types\"\n\nconst isSettingsAdminDataValid = ({\n  firstName,\n  lastName,\n  phone,\n  email,\n  newPassword,\n  repeatPassword,\n  formatMessage,\n}: SettingsDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n\n  const onlyLetters = /^[a-zA-Z\\s]*$/\n  const isEmailValid = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i\n  const isPasswordValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/\n  const IS_PWD = formatMessage({ id: \"form.pssCorrect\" })\n  const IS_PWDNOREPEAT = formatMessage({ id: \"app.login.pwdIncorret\" })\n\n  if (!firstName) {\n    errors.firstName = IS_REQUIRED\n  } else if (firstName.length < 4 || firstName.length > 15) {\n    errors.firstName = IS_INCORRECT\n  } else if (!onlyLetters.test(firstName)) {\n    errors.firstName = IS_INCORRECT\n  }\n\n  if (!lastName) {\n    errors.lastname = IS_REQUIRED\n  } else if (lastName.length < 3 || lastName.length > 15) {\n    errors.lastname = IS_INCORRECT\n  } else if (!onlyLetters.test(lastName)) {\n    errors.lastName = IS_INCORRECT\n  }\n\n  if (!phone) {\n    errors.phone = IS_REQUIRED\n  } else if (String(phone).length !== 7 && String(phone).length !== 10) {\n    errors.phone = IS_INCORRECT\n  }\n\n  if (!email) {\n    errors.email = IS_REQUIRED\n  } else if (!isEmailValid.test(email)) {\n    errors.email = IS_INCORRECT\n  }\n\n  if (newPassword) {\n    if (!isPasswordValid.test(newPassword || \"\")) {\n      errors.newPassword = IS_PWD\n    }\n    if (repeatPassword !== newPassword) {\n      errors.repeatPassword = IS_PWDNOREPEAT\n    }\n  }\n  console.log(errors)\n  return errors\n}\n\nexport default isSettingsAdminDataValid\n","import React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { useHistory } from \"react-router-dom\"\n\nimport { Flex, Spinner } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { useUserQuery, useUpdateUserMutation } from \"../generated/graphql\"\nimport isEmpty from \"../utils/isEmpty\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport Notify from \"../utils/notify\"\nimport ChangePwd from \"../components/ChangesPwd\"\nimport isSettingsAdminDataValid from \"../utils/isSettingsAdminDataValid\"\n\nconst SettingsData = ({ children }: any) => {\n  const { formatMessage } = useIntl()\n  const [, updateUser] = useUpdateUserMutation()\n  const [newPwd, onChangenewPwd] = useState(false)\n  const history = useHistory()\n\n  const [{ data, fetching }] = useUserQuery()\n\n  const initialValues = isEmpty(data?.getUserData)\n    ? {\n        firstName: \"\",\n        lastName: \"\",\n        phone: 0,\n        email: \"\",\n        password: \"\",\n        newPassword: \"\",\n        repeatPassword: \"\",\n      }\n    : {\n        ...data?.getUserData,\n        password: \"\",\n        newPassword: \"\",\n        repeatPassword: \"\",\n      }\n\n  const validateInputs = (values: any) => {\n    const errors = isSettingsAdminDataValid({ ...values, formatMessage })\n    return errors\n  }\n\n  const onSubmit = async ({ __typename, repeatPassword, ...values }: any) => {\n    console.log(values)\n    const update = await updateUser({ userData: values })\n    if (update.error) {\n      return Notify({\n        title: formatMessage({ id: \"app.notification.userDontUpdate\" }),\n        type: \"error\",\n      })\n    }\n    history.push(\"/dashboard?tab=2\")\n    window.location.reload()\n    return Notify({\n      title: formatMessage({ id: \"app.notification.userUpdate\" }),\n      type: \"success\",\n    })\n  }\n\n  if (fetching) return <Spinner />\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validate={validateInputs}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Flex flexDir=\"column\">\n            <FormikInput\n              id=\"1\"\n              label={formatMessage({ id: \"form.names\" })}\n              name=\"firstName\"\n              disabled={false}\n              required\n            />\n            <FormikInput\n              id=\"2\"\n              label={formatMessage({ id: \"form.lastNames\" })}\n              name=\"lastName\"\n              disabled={false}\n              required\n            />\n            <FormikInput\n              id=\"3\"\n              label={formatMessage({ id: \"form.phone\" })}\n              type=\"number\"\n              name=\"phone\"\n              disabled={false}\n              required\n            />\n            <FormikInput\n              id=\"4\"\n              label={formatMessage({ id: \"form.email\" })}\n              name=\"email\"\n              disabled={false}\n              required\n            />\n            <ShouldRender if={data?.getUserData}>\n              <ChangePwd onChangenewPwd={onChangenewPwd} newPwd={newPwd} />\n            </ShouldRender>\n            <Flex mt={2} justifyContent=\"flex-end\">\n              {children}\n              <PrimaryButton ml={3} type=\"submit\" isLoading={isSubmitting}>\n                <DisplayText id=\"app.buttons.save\" defaultMessage=\"save\" />\n              </PrimaryButton>\n            </Flex>\n          </Flex>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default SettingsData\n","import { Flex, Heading } from \"@chakra-ui/react\"\nimport { useHistory } from \"react-router-dom\"\nimport React from \"react\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport Wrapper from \"../components/Wrapper\"\nimport SettingsData from \"../container/SettingsData\"\nimport { CITIZEN_FORM } from \"../ui/formIds\"\nimport NeutralButton from \"../components/formElements/NeutralButton\"\n\nconst Settings = () => {\n  const history = useHistory()\n  return (\n    <Wrapper>\n      <Flex flex={1} flexDir=\"column\">\n        <Heading id={CITIZEN_FORM.headingTitle}>\n          <DisplayText id=\"app.settings.title\" defaultMessage=\"settings\" />\n        </Heading>\n        <SettingsData>\n          <NeutralButton\n            onClick={() => {\n              history.push(\"/dashboard\")\n            }}\n          >\n            <DisplayText id=\"app.buttons.back\" defaultMessage=\"cancel\" />\n          </NeutralButton>\n        </SettingsData>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Settings\n","import React from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Landing from \"./pages/Landing\"\nimport Wrapper from \"./components/Wrapper\"\nimport Question from \"./container/Questions\"\n\nimport UserData from \"./pages/UserData\"\nimport ReservationData from \"./pages/Reservation\"\nimport Confirm from \"./pages/Confirm\"\nimport Login from \"./pages/Login\"\nimport urqlClient from \"./urqlClient\"\nimport { Provider } from \"urql\"\nimport NavBar from \"./components/NavBar\"\nimport Dashboard from \"./pages/Dashboard\"\nimport Footer from \"./components/Footer\"\nimport Settings from \"./pages/Settings\"\nimport Divider from \"./components/formElements/Divider\"\n\nconst App = () => {\n  return (\n    <Provider value={urqlClient()}>\n      <Router>\n        <NavBar />\n        <Divider mt={0} mb={0} />\n        <Wrapper>\n          <Switch>\n            <Route exact path=\"/datos/:meetingId\">\n              <UserData />\n            </Route>\n            <Route exact path=\"/questions/:userId\">\n              <Question />\n            </Route>\n            <Route exact path=\"/reservation/:reservationId\">\n              <ReservationData />\n            </Route>\n            <Route exact path=\"/confirm/:userId\">\n              <Confirm />\n            </Route>\n            <Route exact path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/settings\">\n              <Settings />\n            </Route>\n            <Route path=\"/\">\n              <Landing />\n            </Route>\n          </Switch>\n        </Wrapper>\n        <Footer />\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// theme.js\nimport { extendTheme } from \"@chakra-ui/react\"\n// Global style overrides\nimport styles from \"./styles\"\nimport { PrimaryButton, DefaultButton } from \"./components/Buttons\"\nimport { brand } from \"./components/general\"\nimport { IconReservation, IconEdit, IconDelete, IconPlus } from \"./components/Icons\"\nimport { Tabs, TabSection } from \"./components/Tabs\"\nimport { Card } from \"./components/Card\"\nimport { Link } from \"./components/Links\"\n\nconst overrides = {\n  styles,\n  fonts: {\n    heading: '\"Lato\", sans-serif',\n    body: '\"Lato\", system-ui, sans-serif',\n    mono: '\"Lato\", Menlo, monospace',\n  },\n  fontWeights: {\n    normal: 400,\n    medium: 600,\n    bold: 800,\n  },\n  // 1 rem = 16px\n  fontSizes: {\n    xs: \"0.75rem\",\n    sm: \"0.875rem\",\n    md: \"1rem\",\n    lg: \"1.125rem\",\n    xl: \"1.25rem\",\n    \"2xl\": \"1.5rem\",\n    \"3xl\": \"1.875rem\",\n    \"4xl\": \"2.25rem\",\n    \"5xl\": \"3rem\",\n    \"6xl\": \"4rem\",\n  },\n  colors: {\n    brand,\n  },\n  components: {\n    PrimaryButton,\n    DefaultButton,\n    IconReservation,\n    IconEdit,\n    IconDelete,\n    IconPlus,\n    Tabs,\n    TabSection,\n    Card,\n    Link\n  },\n  //borders,\n  // Other foundational style overrides go here\n}\nexport default extendTheme(overrides)\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand } from \"./components/general\"\nconst Globals = {\n  global: (props: any) => ({\n    body: {\n      color: mode(app_brand.font, app_brand.darkFont)(props),\n      bg: mode(app_brand.bg, app_brand.darkBg)(props),\n      h1: {\n        color: mode(app_brand.titles, app_brand.darkTitles)(props),\n        fontWeight: \"700\",\n        fontSize: \"large\",\n        marginRight: \"0px\",\n      },\n      h2: {\n        color: mode(app_brand.font, app_brand.darkFont)(props),\n      },\n    },\n  }),\n}\nexport default Globals\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand, btnProps } from \"./general\"\n\nexport const PrimaryButton = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actionsFont, app_brand.darkFont)(props),\n    bg: mode(app_brand.actions, app_brand.darkActions)(props),\n    ...btnProps,\n    fontWeight: 600,\n  }),\n}\n\nexport const DefaultButton = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actions, app_brand.darkActions)(props),\n    border: `1px solid ${mode(\n      app_brand.actions,\n      app_brand.darkActions\n    )(props)}`,\n    ...btnProps,\n  }),\n}\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand, iconBtnProps } from \"./general\"\n\nexport const IconEdit = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actionsFont, app_brand.darkFont)(props),\n    bg: mode(app_brand.actions, app_brand.darkActions)(props),\n    ...iconBtnProps,\n  }),\n}\n\nexport const IconDelete = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actions, app_brand.darkActions)(props),\n    border: `1px solid ${mode(\n      app_brand.actions,\n      app_brand.darkActions\n    )(props)}`,\n    ...iconBtnProps,\n  }),\n}\n\nexport const IconReservation = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actionsFont, app_brand.darkFont)(props),\n    bg: mode(app_brand.actions, app_brand.darkActions)(props),\n    ...iconBtnProps,\n  }),\n}\n\nexport const IconPlus = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actions, app_brand.darkActions)(props),\n  }),\n}","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand, TabSectionStyles, TabStyles } from \"./general\"\n\nexport const Tabs = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.titles, \"\")(props),\n    bg: mode(app_brand.section, \"\")(props),\n    ...TabStyles,\n  }),\n}\n\nexport const TabSection = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.secondIcon, app_brand.darkFont)(props),\n    bg: mode(app_brand.actionsFont, app_brand.darkActions)(props),\n    ...TabSectionStyles,\n  }),\n}\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand } from \"./general\"\n\nexport const Card = {\n  baseStyle: (props: Record<string, any>) => ({\n    bg: mode(\"white\", \"\")(props),\n    borderRadius: \"5%\",\n    padding: \"1rem\",\n    shadow: \"md\",\n    borderWidth: \"1px\",\n    margin: \"0.6rem\",\n    width: \"270px\",\n    height: \"220px\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  }),\n}\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand } from \"./general\"\n\nexport const Link = {\n    baseStyle: (props: Record<string, any>) => ({\n        color: mode(app_brand.titles, app_brand.darkActions)(props),\n        fontWeight: \"600\",\n    }),\n  }\n  ","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport LangContext from \"./context/LangWrapper\"\nimport theme from \"./theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <LangContext>\n      <ChakraProvider theme={theme}>\n        <App />\n      </ChakraProvider>\n    </LangContext>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}