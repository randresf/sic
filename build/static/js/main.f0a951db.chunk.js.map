{"version":3,"sources":["components/Wrapper.tsx","components/formElements/PrimaryButton.tsx","ui/formIds.ts","components/formElements/DisplayMessage.tsx","components/YesNoRadioGroup.tsx","constants/index.ts","generated/graphql.tsx","components/formElements/FormikInput.tsx","components/ModalActions.tsx","components/ModalWrapper.tsx","components/formElements/NeutralButton.tsx","utils/isQuestionDataValid.ts","container/Questions.tsx","hooks/useClient.ts","components/formElements/Heading.tsx","components/formElements/Subtitle.tsx","theme/components/general.ts","components/Footer.tsx","components/ShouldRender.tsx","components/Account.tsx","context/LangWrapper.tsx","components/LangDropDown.tsx","components/Logo.tsx","components/ToggleDarkMode.tsx","components/NavBar.tsx","layouts/index.tsx","ui/formSchemas.ts","utils/notify.ts","pages/Admin/AccountCreated.tsx","pages/Admin/AdminForm.tsx","pages/Admin/index.tsx","pages/ClientListPage.tsx","components/formElements/Loading.tsx","components/YesNoButtonGroup.tsx","utils/formatDate.ts","utils/validUserInfo.ts","pages/Confirm.tsx","components/formElements/Tabs.tsx","hooks/useIsAuth.ts","components/Card.tsx","components/formElements/IconButton.tsx","components/AddCard.tsx","utils/isEmpty.ts","utils/fieldsRegex.ts","utils/isAdminDataValid.ts","container/AdminData.tsx","components/formElements/BoldText.tsx","components/formElements/Text.tsx","components/DisplayPairText.tsx","container/AdminCard.tsx","components/DefaultContainer.tsx","pages/Dashboard/tabs/Admins.tsx","components/formElements/CancelButton.tsx","container/PlaceCard.tsx","components/formElements/Select.tsx","utils/formatAddress.ts","utils/isPlaceDataValid.ts","container/PlaceData.tsx","pages/Dashboard/tabs/Locations.tsx","utils/isMeetingDataValid.ts","container/MeetingData.tsx","container/MeetingCard.tsx","pages/Dashboard/tabs/Meetings.tsx","pages/Dashboard/Title.tsx","pages/Dashboard/index.tsx","components/Title.tsx","container/Meetings.tsx","components/formElements/NormalInput.tsx","components/CancelReservation.tsx","container/ReservationsList.tsx","container/SearchReservation.tsx","pages/Landing.tsx","pages/Login.tsx","components/DownloadPdf.tsx","container/ExternalReservationView.tsx","container/UserReservationView.tsx","container/ReservationView.tsx","pages/Reservation.tsx","components/ChangesPwd.tsx","utils/isSettingsAdminDataValid.ts","container/SettingsData.tsx","pages/Settings.tsx","utils/isPersonalDataValid.ts","utils/truncate.ts","container/PersonalDataForm.tsx","utils/getAgeFromDate.ts","pages/UserData.tsx","urqlClient/errorExchange.ts","urqlClient/exchangeKeys.ts","urqlClient/createBetterQuery.ts","urqlClient/invalidateQuerys.ts","urqlClient/index.ts","urqlClient/cursorPagination.ts","urqlClient/mutationUpdates.ts","urqlClient/subscriptionUpdates.ts","App.tsx","reportWebVitals.ts","theme/index.ts","theme/styles.ts","theme/components/Buttons.ts","theme/components/Icons.ts","theme/components/Tabs.ts","theme/components/Card.ts","theme/components/Links.ts","index.tsx"],"names":["Wrapper","children","props","direction","maxW","xl","m","PrimaryButton","style","useStyleConfig","as","sx","CITIZEN_FORM","RESERVATIONS_LIST","MEETINGS_LIST","NAVABAR_LIST","RESERVATION_VIEW","CONFIRM_RESERVATION","QUESTION_VIEW","QUESTIONS_FORM","DisplayText","id","defaultMessage","YesNoRadioGroup","questions","map","question","justifyItems","w","mb","className","role","aria-labelledby","ml","marginRight","type","name","value","v4","QUESTIONS","INACTIVE_CARD_COLOR","BTN_PROPS","ADDRESS_VALUES","way","letter","cardinal","MeetingDataFragmentDoc","gql","MeetingQueryFragmentDoc","UserDataFragmentDoc","AddAdminDocument","AddOrganizationDocument","AddPlaceDocument","CancelReservationDocument","useCancelReservationMutation","Urql","ConfirmReservationDocument","DeleteMeetDocument","DeletePlaceDocument","GetUserDocument","useGetUserMutation","LoginDocument","LogoutDocument","SaveMeetingDocument","SaveQuestionDocument","SaveUserDocument","UpdateAdminDocument","UpdateContactUserDocument","GetAdminDataDocument","GetClientsDocument","GetPlacesDocument","useGetPlacesQuery","options","query","GetUserByIdDocument","AdminDocument","HeartbeatDocument","useHeartbeatQuery","GetMeetingDocument","MeetingsDocument","useMeetingsQuery","SearchReservationDocument","MeetingDeleteDocument","useMeetingDeleteSubscription","handler","MeetingUpdatedDocument","NewMeetingDocument","WrapperInput","label","placeholder","field","form","isInvalid","errors","touched","mt","htmlFor","toLowerCase","data-qa","ModalActions","alignSelf","p","justifyContent","spacing","ModalWrapper","titulo","contenido","isOpen","onClose","actions","isCentered","NeutralButton","isQuestionDataValid","contactNumber","emergenceContact","formatMessage","IS_REQUIRED","IS_INCORRECT","String","length","test","Question","useIntl","React","useState","error","setError","errorInco","setErrorInco","history","useHistory","toast","useToast","saveQuestion","updateContactUser","userId","useParams","push","validateQuestions","values","a","emergencyPhone","emergencyContact","arrValue","Object","q","find","alignItems","flex","flexDir","size","initialValues","validate","validateInputs","onSubmit","contactData","resEmergencyContact","description","message","title","status","duration","isClosable","params","keys","key","questionId","answer","res","isSubmitting","width","align","FormikInput","required","mr","onClick","goBack","disabled","isLoading","to","target","color","useClient","client","useGetClientsQuery","variables","data","fetching","location","useLocation","useEffect","getOrganizationByName","organization","replace","currentOrg","sessionStorage","setItem","pathname","Heading","Subtitle","app_brand","btnProps","padding","whiteSpace","wordWrap","height","borderRadius","_hover","opacity","iconBtnProps","TabSectionStyles","TabStyles","_focus","fontWeight","minHeight","shadow","Footer","borderTopColor","borderTop","display","justify","EmailIcon","href","ShouldRender","if","Account","colorMode","useColorMode","logout","heartBeat","firstName","cursor","background","Context","createContext","locale","selectLanguage","e","languages","es","Spanish","en","English","local","navigator","language","lang","LangWrapper","messages","state","setState","Provider","newLocale","LangDropDown","useContext","otherOption","toUpperCase","Logo","viewBox","fill","data-name","d","Toggle","toggleColorMode","aria-label","icon","Sun","Moon","borderColor","borderWidth","h","minW","MenuItems","isLast","rest","base","sm","NavBar","show","setShow","wrap","md","Close","Hamburger","flexBasis","pt","ToggleDarkMode","Layout","OrgAdminSchema","Yup","shape","min","max","username","Notify","undefined","createStandaloneToast","AccountCreated","defaultAdmin","password","AdminForm","created","setCreated","loading","setLoading","addOrg","addOrganization","org","email","validationSchema","AdminPage","ClientListPage","onChange","Loading","isLoaded","YesNoButtonGroup","onYes","onNo","yesProps","noProps","colorScheme","moment","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","formatDate","strDate","format","formatAgeDate","useValidUser","onCloseComplete","Confirm","meetingId","localStorage","getItem","confirm","confirming","setConfirming","useGetUserByIdQuery","userData","userFetching","userError","useGetMeetingQuery","meetingData","meetingFetching","meetingError","objUser","userById","user","meet","meeting","onConfirm","addReservation","reservation","fontSize","lastName","document","phone","meetingDate","spots","TabsSection","tabs","defaultIndex","tab","index","content","Card","styles","flexWrap","textAlign","IconButtonWrapper","iconType","AddCard","border","PlusSquare","isEmpty","element","Boolean","EMAIL_RGX","ONLY_LETTERS_RGX","DOCUMENT_RGX","PWD_RGX","isAdminDataValid","repeatPassword","IS_PWD","IS_PWDNOREPEAT","AdminData","saveAdmin","register","enableReinitialize","setValues","BoldText","Text","DisplayPair","bold","text","maxWidth","isTruncated","PlaceCard","DefaultContainer","Admins","adminId","setPlace","newAdmin","setnewAdmin","useGetAdminDataQuery","onCloseFormAdmin","getAdminsData","AdminCard","CancelButton","variant","address","bg","Select","selectProps","jsonAddres","isActive","JSON","stringify","isPlaceDataValid","firstWayNumber","secondWayNumber","thirdWayNumber","PlaceData","place","onDone","addPlaceMutation","assign","parse","jsonAddress","firstLetter","secondLetter","valuesAddress","placeId","formatAddress","Locations","newPlace","setnewPlace","deletePlaceModal","setDeletePlaceModal","placeData","fetchAgain","idPlaceDelete","onCloseFormPlace","onCloseDeletePlace","addedNew","deletePlace","getUserPlaces","__typename","Delete","Edit","isMeetingDataValid","MeetingDataForm","saveMeeting","placeLoading","createdAt","filter","i","noOfLines","paddingTop","paddingBottom","MeetingCard","Meetings","limit","setVariables","newMeeting","setNewMeeting","deleteMeeting","setDeleteMeeting","setMeeting","getIdMeetMutation","onCloseFormMeeting","onCloseDeleteMeeting","deleteThisMeeting","meetings","reu","hasMore","MeetingData","DashboardTitle","Dashboard","useIsAuth","queryString","search","tabData","isLazy","tabIndex","Number","Title","useMeetingUpdatedSubscription","useNewMeetingSubscription","nextPage","ArrowRight","NormalInput","CancelReservation","reservationId","labeled","cancelReserve","onCancel","canDelete","ReservationsList","reservations","r","Search","initialState","citizenId","emptyValue","SearchReservation","showIcon","searchUser","updateSate","newValue","searchReservation","ev","trim","prevRes","showInput","setInput","btnsProps","onBlur","Landing","Login","login","next","pwd","usr","admin","StyleSheet","create","page","flexDirection","marginTop","section","margin","flexGrow","image","marginVertical","marginHorizontal","imageLogo","paragraph","PDF","qrText","confirmationMessage","src","ExternalReservationView","citizen","UserReservationView","alt","objectFit","ReservationView","external","saving","setOpen","useSearchReservationQuery","cancelReservation","fileName","ReservationData","ChangePwd","onChangenewPwd","newPwd","isSettingsAdminDataValid","newPassword","onlyLetters","lastname","console","log","SettingsData","updateUser","useAdminQuery","getAdminData","Settings","isPersonalDataValid","birthDate","substr","blurText","str","total","slice","repeat","PersonalDataForm","age","setAge","setUserId","userExists","setExist","setReservations","saveUser","booked","onBlurCitizenField","cb","formatedDate","usrReservations","stringDate","date","Date","diff_ms","now","getTime","age_dt","Math","abs","getUTCFullYear","getAgeFromDate","input","response","aling","pattern","UserData","errorExchange","forward","ops$","pipe","tap","includes","window","exchangeKeys","Admin","PlaceResponse","PaginatedMeetings","betterUpdateQuery","cache","qi","result","fn","updateQuery","invalidateQuerys","fName","inspectFields","info","fieldName","forEach","arguments","invalidate","app_uri","process","subscriptionClient","SubscriptionClient","reconnect","createUrqlClient","createClient","url","requestPolicy","fetchOptions","credentials","headers","clientId","exchanges","dedupExchange","cacheExchange","resolvers","Query","_parent","fieldArgs","entityKey","parentKey","fieldInfos","fieldKey","stringifyVariables","isItInCache","resolve","partial","results","fi","_hasMore","posts","updates","Mutation","_args","_info","que","_result","updateAdmin","args","_res","pl","addPlace","unshift","Subscription","met","meetingDelete","subscriptionExchange","forwardSubscription","operation","request","fetchExchange","AppRoutes","basename","exact","path","Reservation","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","overrides","global","body","mode","h1","h2","fonts","heading","mono","fontWeights","normal","medium","fontSizes","xs","lg","colors","brand","100","200","300","400","500","600","700","800","components","baseStyle","DefaultButton","IconReservation","IconEdit","IconDelete","IconPlus","Tabs","TabSection","Link","extendTheme","ReactDOM","render","StrictMode","theme","getElementById"],"mappings":"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","file":"static/js/main.f0a951db.chunk.js","sourcesContent":["import { Flex } from \"@chakra-ui/react\"\nimport React from \"react\"\n\ntype wrapper = {\n  children: \"\" | React.ReactNode\n}\n\nconst Wrapper = ({ children, ...props }: wrapper) => {\n  return (\n    <Flex\n      direction=\"column\"\n      //align=\"center\"\n      maxW={{ xl: \"1700px\" }}\n      m=\"0 auto\"\n      {...props}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport default Wrapper\n","import React from \"react\"\nimport { Button, useStyleConfig } from \"@chakra-ui/react\"\n\nconst PrimaryButton = (props: any) => {\n  const style = useStyleConfig(\"PrimaryButton\", props)\n  return <Button as=\"button\" sx={style} {...props} />\n}\n\nexport default PrimaryButton\n","// NOTE: for labels add 'lbl-' to the input id\nexport const CITIZEN_FORM = {\n  headingTitle: \"data-form-title\",\n  document: \"input-document\",\n  firstName: \"input-firstName\",\n  lastName: \"input-lastName\",\n  phone: \"input-phone\",\n  email: \"input-email\",\n  birthDate: \"input-birthDate\",\n  age: \"input-age\",\n  submit: \"btn-submit\",\n}\n\nexport const RESERVATIONS_LIST = {\n  note: \"lbl-note\",\n  title: \"lbl-title\",\n  reservationItem: \"reservation-item\",\n  reservationSection: \"reservation-section\",\n  link: \"link-meeting\",\n  btnLink: \"btn-meeting\",\n  meetingTitle: \"lbl-meeting-title\",\n  meetingDate: \"lbl-meeting-date\",\n  btnOpenReservation: \"btn-open-reservation\",\n  btnCancelReservation: \"btn-cancel-reservation\",\n}\n\nexport const MEETINGS_LIST = {\n  title: \"lbl-meetings-title\",\n  topTitle: \"lbl-top-title\",\n  noMeetings: \"lbl-no-meetings\",\n  searchOrClean: \"btn-search-clean\",\n  searchSection: \"search-section\",\n  document: \"input-document\",\n  btnSearch: \"btn-search\",\n  noResults: \"lbl-no-results\",\n  meetingCard: \"meeting-card\",\n  meetingTitle: \"lbl-meeting-title\",\n  meetingDate: \"lbl-meeting-date\",\n  spots: \"lbl-meeting-spots\",\n  linkCitizenForm: \"link-citizen-form\",\n  btnReserve: \"btn-reserve\",\n  btnNewMeeting: \"btn-new-meeting\",\n}\n\nexport const NAVABAR_LIST = {\n  darkMode: \"btn-dark-mode\",\n  logo: \"link-home\",\n  headerTitle: \"lbl-header-title\",\n  subTitle: \"lbl-sub-title\",\n}\n\nexport const RESERVATION_VIEW = {\n  title: \"lbl-title\",\n  document: \"lbl-document\",\n  meetigTitle: \"lbl-meetig-title\",\n  meetingDate: \"lbl-meeting-date\",\n  confirmBtn: \"btn-confirm\",\n  welcome: \"lbl-welcome\",\n  qrCode: \"img-qrCode\",\n  reservationTitleDocument: \"lbl-title-reservation-document\",\n  userDocument: \"lbl-user-document\",\n  reservationTitlemeeting: \"lbl-title-reservation-meeting\",\n  userMeeting: \"lbl-user-meeting\",\n  reservationTitleDate: \"lbl-title-reservation--date\",\n  reservationUserDate: \"lbl-user-date\",\n  msgConfirm: \"lbl-confirm-message\",\n  btnOpenModalCancelReserve: \"btn-open-cancel-reserve\",\n  btnDownLoadPdf: \"btn-download-pdf\",\n  btnCancelReserve: \"btn-cancel-reserve\",\n}\n\nexport const CONFIRM_RESERVATION = {\n  meetTitle: \"lbl-meeting-title\",\n  userTitle: \"lbl-user-title\",\n  fullnameUser: \"lbl-fullname-user\",\n  documentTitle: \"lbl-document-title\",\n  documentUser: \"lbl-document-user\",\n  contactTitle: \"lbl-contact-title\",\n  contactUser: \"lbl-contact-user\",\n  emailTitle: \"lbl-email-title\",\n  emailUser: \"lbl-email-user\",\n  dateTitle: \"lbl-date-title\",\n  dateUser: \"lbl-date-user\",\n  spotsTitle: \"lbl-spots-title\",\n  spotsUser: \"lbl-spotsUser-user\",\n  confirmDates: \"lbl-confirm-dates\",\n}\n\nexport const QUESTION_VIEW = {\n  formTitle: \"lbl-form-title\",\n  formparagraph: \"lbl-form-formparagraph\",\n  emergenceContact: \"lbl-emergence-contact\",\n  contactNumber: \"lbl-contact-number\",\n  notice: \"lbl-notice\",\n  btnGoBack: \"btn-go-back\",\n  btnSubmit: \"btn-submit\",\n  linkNoEntry: \"link-no-entry\",\n}\n\nexport const QUESTIONS_FORM = {\n  questionText: \"my-radio-group\",\n  responseYes: \"rbtn-response-yes\",\n  responseNo: \"rbtn-response-no\",\n}\n\nexport const DASHBOARD_MEETINGS = {\n  searchMeeting: \"input-search-meeting\",\n}\n","import React from \"react\"\nimport { FormattedMessage } from \"react-intl\"\n\nexport default function DisplayText(props: any) {\n  return (\n    <FormattedMessage id={props.id} defaultMessage={props.defaultMessage}/>\n  )\n}\n","import React from \"react\"\nimport { Box, Center, Flex } from \"@chakra-ui/react\"\nimport { Field } from \"formik\"\nimport { v4 } from \"uuid\"\nimport { QUESTIONS_FORM } from \"../ui/formIds\"\nimport DisplayText from \"./formElements/DisplayMessage\"\n\ntype RadioProps = {\n  questions: { id: number; question: string }[]\n}\n\nconst YesNoRadioGroup = ({ questions }: RadioProps) => {\n  return (\n    <Box>\n      {questions.map(({ question, id }) => (\n        <Flex justifyItems=\"center\" key={v4()}>\n          <Box w=\"100%\" mb={3} className={QUESTIONS_FORM.questionText}>\n            {question}\n          </Box>\n          <Flex role=\"group\" aria-labelledby=\"my-radio-group\" ml={5}>\n            <Center>\n              <Box>\n                <label style={{ marginRight: \"10px\" }}>\n                  <Field\n                    className={QUESTIONS_FORM.responseYes}\n                    type=\"radio\"\n                    name={id}\n                    value=\"1\"\n                  />\n                  <DisplayText id=\"radio.question.yes\" defaultMessage=\"Yes\" />\n                </label>\n              </Box>\n              <Box>\n                <label>\n                  <Field\n                    className={QUESTIONS_FORM.responseNo}\n                    type=\"radio\"\n                    name={id}\n                    value=\"0\"\n                  />\n                  <DisplayText id=\"radio.question.no\" defaultMessage=\"No\" />\n                </label>\n              </Box>\n            </Center>\n          </Flex>\n        </Flex>\n      ))}\n    </Box>\n  )\n}\n\nexport default YesNoRadioGroup\n","export const LIMITE_RESERVA_POR_MES = 2\nexport const __IsProd__ = process.env.NODE_ENV === \"production\"\nexport const QUESTIONS = [\n  {\n    id: 1,\n    question:\n      \"¿Ha presentado alguno de los siguientes síntomas relacionados con el COVID-19 durante los últimos 15 días: Dolor de cabeza, garganta, dolor muscular, dificultad respiratoria, tos seca?\",\n  },\n  {\n    id: 2,\n    question:\n      \"¿Ha tenido contacto con personas que hayan regresado del exterior en los últimos 20 dias y/o familiares o amigos que hayan sido diagnosticados con COVID-19?\",\n  },\n  {\n    id: 3,\n    question: \"¿Presenta fiebre o una temperatura superior a 37,5°c?\",\n  },\n]\n\nexport const DATE_FORMAT = `dddd Do MMMM, h:mm a`\n\nexport const ACTIVE_CARD_COLOR = \"\"\n\nexport const INACTIVE_CARD_COLOR = \"#dbe4f3\"\n\nexport const BTN_PROPS = {\n  size: \"md\",\n  height: \"48px\",\n  width: \"120px\",\n}\n\nexport const ADDRESS_VALUES = {\n  way: [\n    {\n      id: \"calle\",\n      name: \"calle\",\n    },\n    {\n      id: \"carrera\",\n      name: \"carrera\",\n    },\n    {\n      id: \"transversal\",\n      name: \"transversal\",\n    },\n    {\n      id: \"Diagonal\",\n      name: \"Diagonal\",\n    },\n    {\n      id: \"Avenida\",\n      name: \"Avenida\",\n    },\n    {\n      id: \"Bulevar\",\n      name: \"Bulevar\",\n    },\n    {\n      id: \"Autopista\",\n      name: \"Autopista\",\n    },\n    {\n      id: \"Esquina\",\n      name: \"Esquina\",\n    },\n  ],\n  letter: [\n    {\n      id: \"A\",\n      name: \"A\",\n    },\n    {\n      id: \"B\",\n      name: \"B\",\n    },\n    {\n      id: \"C\",\n      name: \"C\",\n    },\n    {\n      id: \"D\",\n      name: \"D\",\n    },\n    {\n      id: \"E\",\n      name: \"E\",\n    },\n    {\n      id: \"F\",\n      name: \"F\",\n    },\n    {\n      id: \"G\",\n      name: \"G\",\n    },\n    {\n      id: \"H\",\n      name: \"H\",\n    },\n    {\n      id: \"I\",\n      name: \"I\",\n    },\n    {\n      id: \"J\",\n      name: \"J\",\n    },\n    {\n      id: \"K\",\n      name: \"K\",\n    },\n    {\n      id: \"L\",\n      name: \"L\",\n    },\n    {\n      id: \"M\",\n      name: \"M\",\n    },\n    {\n      id: \"N\",\n      name: \"N\",\n    },\n    {\n      id: \"Ñ\",\n      name: \"Ñ\",\n    },\n    {\n      id: \"O\",\n      name: \"O\",\n    },\n    {\n      id: \"P\",\n      name: \"P\",\n    },\n    {\n      id: \"Q\",\n      name: \"Q\",\n    },\n    {\n      id: \"R\",\n      name: \"R\",\n    },\n    {\n      id: \"S\",\n      name: \"S\",\n    },\n    {\n      id: \"T\",\n      name: \"T\",\n    },\n    {\n      id: \"U\",\n      name: \"U\",\n    },\n    {\n      id: \"V\",\n      name: \"V\",\n    },\n    {\n      id: \"W\",\n      name: \"W\",\n    },\n    {\n      id: \"X\",\n      name: \"X\",\n    },\n    {\n      id: \"Y\",\n      name: \"Y\",\n    },\n    {\n      id: \"Z\",\n      name: \"Z\",\n    },\n  ],\n  cardinal: [\n    { id: \"norte\", name: \"norte\" },\n    { id: \"sur\", name: \"sur\" },\n    { id: \"este\", name: \"este\" },\n    { id: \"oeste\", name: \"oeste\" },\n  ],\n}\n","import gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */\n  DateTime: any;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  meetings: PaginatedMeetings;\n  meeting: MeetingRes;\n  meetingsById: Array<Meeting>;\n  questions: Array<Question>;\n  searchReservation: ReservationResponse;\n  userById: UserResponse;\n  heartBeat?: Maybe<Admin>;\n  getAdminsData: Array<Admin>;\n  getAdminData: Admin;\n  getUserPlaces: PlaceResponse;\n  getOrganizations: OrgListResponse;\n  getOrganizationByName: OrgNameResponse;\n};\n\n\nexport type QueryMeetingsArgs = {\n  cursor?: Maybe<Scalars['String']>;\n  limit: Scalars['Int'];\n};\n\n\nexport type QueryMeetingArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryMeetingsByIdArgs = {\n  ids: Array<Scalars['String']>;\n};\n\n\nexport type QuerySearchReservationArgs = {\n  reservationId: Scalars['String'];\n};\n\n\nexport type QueryUserByIdArgs = {\n  userId: Scalars['String'];\n};\n\n\nexport type QueryGetOrganizationsArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryGetOrganizationByNameArgs = {\n  orgName: Scalars['String'];\n};\n\nexport type PaginatedMeetings = {\n  __typename?: 'PaginatedMeetings';\n  meetings: Array<Meeting>;\n  hasMore: Scalars['Boolean'];\n};\n\nexport type Meeting = {\n  __typename?: 'Meeting';\n  id: Scalars['String'];\n  title: Scalars['String'];\n  spots: Scalars['Float'];\n  meetingDate: Scalars['DateTime'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  isActive: Scalars['String'];\n  hasReservation: Scalars['Boolean'];\n  place: Place;\n};\n\n\nexport type Place = {\n  __typename?: 'Place';\n  id: Scalars['String'];\n  name: Scalars['String'];\n  address: Scalars['String'];\n  jsonAddress?: Maybe<Scalars['String']>;\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  isActive: Scalars['String'];\n};\n\nexport type MeetingRes = {\n  __typename?: 'MeetingRes';\n  meeting?: Maybe<Meeting>;\n  errors?: Maybe<Array<ErrorField>>;\n};\n\nexport type ErrorField = {\n  __typename?: 'ErrorField';\n  field: Scalars['String'];\n  message: Scalars['String'];\n};\n\nexport type Question = {\n  __typename?: 'Question';\n  id: Scalars['String'];\n  questionId: Scalars['String'];\n  answer: Scalars['String'];\n};\n\nexport type ReservationResponse = {\n  __typename?: 'ReservationResponse';\n  errors?: Maybe<Array<ErrorField>>;\n  reservation?: Maybe<Reservation>;\n};\n\nexport type Reservation = {\n  __typename?: 'Reservation';\n  id: Scalars['String'];\n  meetingId: Scalars['String'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  qrText: Scalars['String'];\n  citizen: User;\n  meeting: Meeting;\n};\n\nexport type User = {\n  __typename?: 'User';\n  id: Scalars['String'];\n  document: Scalars['String'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phone: Scalars['Float'];\n  contactNumber: Scalars['Float'];\n  emergenceContact: Scalars['String'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  email: Scalars['String'];\n  birthDate: Scalars['String'];\n  reservations: Array<Reservation>;\n};\n\nexport type UserResponse = {\n  __typename?: 'UserResponse';\n  user?: Maybe<User>;\n  errors?: Maybe<Array<ErrorField>>;\n  userId: Scalars['String'];\n};\n\nexport type Admin = {\n  __typename?: 'Admin';\n  id: Scalars['String'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phone: Scalars['Float'];\n  email: Scalars['String'];\n  username: Scalars['String'];\n  password: Scalars['String'];\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  isActive: Scalars['Boolean'];\n};\n\nexport type PlaceResponse = {\n  __typename?: 'PlaceResponse';\n  errors?: Maybe<Array<ErrorField>>;\n  place?: Maybe<Array<Place>>;\n};\n\nexport type OrgListResponse = {\n  __typename?: 'OrgListResponse';\n  organization?: Maybe<Array<Organization>>;\n  errors?: Maybe<Array<ErrorField>>;\n};\n\nexport type Organization = {\n  __typename?: 'Organization';\n  id: Scalars['String'];\n  name: Scalars['String'];\n  logo?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  isActive: Scalars['Boolean'];\n};\n\nexport type OrgNameResponse = {\n  __typename?: 'OrgNameResponse';\n  organization?: Maybe<Organization>;\n  errors?: Maybe<Array<ErrorField>>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  saveMeeting: MeetingRes;\n  deleteMeeting: MeetingRes;\n  registrerQuestion: QuestionResponse;\n  addReservation: ReservationResponse;\n  cancelReservation: Scalars['Boolean'];\n  user: UserResponse;\n  createUser: UserResponse;\n  saveUser: UserResponse;\n  updateContactUser: UserResponse;\n  login: LoginResponse;\n  logout: Scalars['Boolean'];\n  register: LoginResponse;\n  updateAdmin: LoginResponse;\n  addPlace: PlaceResponse;\n  deletePlace: PlaceResponse;\n  addOrganization: OrgResponse;\n};\n\n\nexport type MutationSaveMeetingArgs = {\n  meetingId?: Maybe<Scalars['String']>;\n  data: MeetingInput;\n};\n\n\nexport type MutationDeleteMeetingArgs = {\n  meetingId?: Maybe<Scalars['String']>;\n};\n\n\nexport type MutationRegistrerQuestionArgs = {\n  userId: Scalars['String'];\n  questions: Array<QuestionType>;\n};\n\n\nexport type MutationAddReservationArgs = {\n  data: ReservationType;\n};\n\n\nexport type MutationCancelReservationArgs = {\n  userId: Scalars['String'];\n  reservationId: Scalars['String'];\n};\n\n\nexport type MutationUserArgs = {\n  document: Scalars['String'];\n};\n\n\nexport type MutationCreateUserArgs = {\n  data: UserInput;\n};\n\n\nexport type MutationSaveUserArgs = {\n  userId?: Maybe<Scalars['String']>;\n  data: UserInput;\n};\n\n\nexport type MutationUpdateContactUserArgs = {\n  contactData: UserContactType;\n  userId: Scalars['String'];\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\n\nexport type MutationRegisterArgs = {\n  options: AdminInput;\n};\n\n\nexport type MutationUpdateAdminArgs = {\n  userData: UserUpdateInput;\n};\n\n\nexport type MutationAddPlaceArgs = {\n  placeId?: Maybe<Scalars['String']>;\n  data: PlaceInput;\n};\n\n\nexport type MutationDeletePlaceArgs = {\n  placeId: Scalars['String'];\n};\n\n\nexport type MutationAddOrganizationArgs = {\n  data: AddOrgType;\n  key: Scalars['String'];\n};\n\nexport type MeetingInput = {\n  id?: Maybe<Scalars['String']>;\n  title: Scalars['String'];\n  spots: Scalars['Float'];\n  meetingDate: Scalars['String'];\n  hasReservation?: Maybe<Scalars['Boolean']>;\n  place: Scalars['String'];\n  isActive: Scalars['String'];\n};\n\nexport type QuestionResponse = {\n  __typename?: 'QuestionResponse';\n  error?: Maybe<Scalars['String']>;\n  saved?: Maybe<Scalars['Boolean']>;\n};\n\nexport type QuestionType = {\n  questionId: Scalars['String'];\n  answer: Scalars['String'];\n};\n\nexport type ReservationType = {\n  userId: Scalars['String'];\n  meetingId: Scalars['String'];\n};\n\nexport type UserInput = {\n  document: Scalars['String'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phone: Scalars['Float'];\n  email: Scalars['String'];\n  birthDate: Scalars['String'];\n  emergenceContac?: Maybe<Scalars['String']>;\n  contactNumer?: Maybe<Scalars['Float']>;\n};\n\nexport type UserContactType = {\n  contactNumber: Scalars['Float'];\n  emergenceContact: Scalars['String'];\n};\n\nexport type LoginResponse = {\n  __typename?: 'LoginResponse';\n  errors?: Maybe<Array<ErrorField>>;\n  admin?: Maybe<Admin>;\n};\n\nexport type AdminInput = {\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phone: Scalars['Float'];\n  email: Scalars['String'];\n  username: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type UserUpdateInput = {\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  phone: Scalars['Float'];\n  email: Scalars['String'];\n  password: Scalars['String'];\n  newPassword: Scalars['String'];\n};\n\nexport type PlaceInput = {\n  id?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  jsonAddress: Scalars['String'];\n  address: Scalars['String'];\n  isActive?: Maybe<Scalars['String']>;\n};\n\nexport type OrgResponse = {\n  __typename?: 'OrgResponse';\n  org?: Maybe<OrgType>;\n  errors?: Maybe<Array<ErrorField>>;\n};\n\nexport type OrgType = {\n  __typename?: 'OrgType';\n  id: Scalars['String'];\n  name: Scalars['String'];\n  defaultAdmin: AdminOutput;\n};\n\nexport type AdminOutput = {\n  __typename?: 'AdminOutput';\n  id: Scalars['String'];\n  username: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type AddOrgType = {\n  name: Scalars['String'];\n  username: Scalars['String'];\n  email: Scalars['String'];\n  logo?: Maybe<Scalars['String']>;\n  address?: Maybe<Scalars['String']>;\n};\n\nexport type Subscription = {\n  __typename?: 'Subscription';\n  meetingUpdated: MeetingUpdated;\n  newMeeting: MeetingUpdated;\n  meetingDelete: MeetingDeleted;\n  newReservation: SubsNewReservation;\n};\n\nexport type MeetingUpdated = {\n  __typename?: 'MeetingUpdated';\n  data: Meeting;\n};\n\nexport type MeetingDeleted = {\n  __typename?: 'MeetingDeleted';\n  data: Scalars['String'];\n};\n\nexport type SubsNewReservation = {\n  __typename?: 'SubsNewReservation';\n  meetingId: Scalars['String'];\n};\n\nexport type MeetingDataFragment = (\n  { __typename?: 'Meeting' }\n  & Pick<Meeting, 'id' | 'title' | 'meetingDate' | 'spots' | 'isActive' | 'createdAt'>\n);\n\nexport type MeetingQueryFragment = (\n  { __typename?: 'Meeting' }\n  & Pick<Meeting, 'hasReservation'>\n  & { place: (\n    { __typename?: 'Place' }\n    & Pick<Place, 'id' | 'name' | 'address'>\n  ) }\n  & MeetingDataFragment\n);\n\nexport type UserDataFragment = (\n  { __typename?: 'User' }\n  & Pick<User, 'id' | 'document' | 'lastName' | 'firstName' | 'phone' | 'email' | 'birthDate'>\n  & { reservations: Array<(\n    { __typename?: 'Reservation' }\n    & Pick<Reservation, 'id' | 'qrText' | 'meetingId'>\n    & { meeting: (\n      { __typename?: 'Meeting' }\n      & Pick<Meeting, 'title' | 'meetingDate'>\n    ) }\n  )> }\n);\n\nexport type AddAdminMutationVariables = Exact<{\n  data: AdminInput;\n}>;\n\n\nexport type AddAdminMutation = (\n  { __typename?: 'Mutation' }\n  & { register: (\n    { __typename?: 'LoginResponse' }\n    & { admin?: Maybe<(\n      { __typename?: 'Admin' }\n      & Pick<Admin, 'id'>\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>> }\n  ) }\n);\n\nexport type AddOrganizationMutationVariables = Exact<{\n  key: Scalars['String'];\n  data: AddOrgType;\n}>;\n\n\nexport type AddOrganizationMutation = (\n  { __typename?: 'Mutation' }\n  & { addOrganization: (\n    { __typename?: 'OrgResponse' }\n    & { org?: Maybe<(\n      { __typename?: 'OrgType' }\n      & Pick<OrgType, 'id' | 'name'>\n      & { defaultAdmin: (\n        { __typename?: 'AdminOutput' }\n        & Pick<AdminOutput, 'username' | 'password'>\n      ) }\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>> }\n  ) }\n);\n\nexport type AddPlaceMutationVariables = Exact<{\n  placeId: Scalars['String'];\n  data: PlaceInput;\n}>;\n\n\nexport type AddPlaceMutation = (\n  { __typename?: 'Mutation' }\n  & { addPlace: (\n    { __typename?: 'PlaceResponse' }\n    & { place?: Maybe<Array<(\n      { __typename?: 'Place' }\n      & Pick<Place, 'name' | 'address' | 'jsonAddress' | 'isActive'>\n    )>>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>> }\n  ) }\n);\n\nexport type CancelReservationMutationVariables = Exact<{\n  reservationId: Scalars['String'];\n  userId: Scalars['String'];\n}>;\n\n\nexport type CancelReservationMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'cancelReservation'>\n);\n\nexport type ConfirmReservationMutationVariables = Exact<{\n  meetingId: Scalars['String'];\n  userId: Scalars['String'];\n}>;\n\n\nexport type ConfirmReservationMutation = (\n  { __typename?: 'Mutation' }\n  & { addReservation: (\n    { __typename?: 'ReservationResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>>, reservation?: Maybe<(\n      { __typename?: 'Reservation' }\n      & Pick<Reservation, 'id'>\n    )> }\n  ) }\n);\n\nexport type DeleteMeetMutationVariables = Exact<{\n  meetingId: Scalars['String'];\n}>;\n\n\nexport type DeleteMeetMutation = (\n  { __typename?: 'Mutation' }\n  & { deleteMeeting: (\n    { __typename?: 'MeetingRes' }\n    & { meeting?: Maybe<(\n      { __typename?: 'Meeting' }\n      & Pick<Meeting, 'id' | 'title' | 'spots' | 'meetingDate' | 'createdAt' | 'updatedAt' | 'isActive'>\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>> }\n  ) }\n);\n\nexport type DeletePlaceMutationVariables = Exact<{\n  placeId: Scalars['String'];\n}>;\n\n\nexport type DeletePlaceMutation = (\n  { __typename?: 'Mutation' }\n  & { deletePlace: (\n    { __typename?: 'PlaceResponse' }\n    & { place?: Maybe<Array<(\n      { __typename?: 'Place' }\n      & Pick<Place, 'id'>\n    )>>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>> }\n  ) }\n);\n\nexport type GetUserMutationVariables = Exact<{\n  citizenId: Scalars['String'];\n}>;\n\n\nexport type GetUserMutation = (\n  { __typename?: 'Mutation' }\n  & { user: (\n    { __typename?: 'UserResponse' }\n    & { user?: Maybe<(\n      { __typename?: 'User' }\n      & UserDataFragment\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>> }\n  ) }\n);\n\nexport type LoginMutationVariables = Exact<{\n  usr: Scalars['String'];\n  pwd: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'LoginResponse' }\n    & { admin?: Maybe<(\n      { __typename?: 'Admin' }\n      & Pick<Admin, 'firstName' | 'lastName' | 'email'>\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>> }\n  ) }\n);\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type SaveMeetingMutationVariables = Exact<{\n  meetingId: Scalars['String'];\n  data: MeetingInput;\n}>;\n\n\nexport type SaveMeetingMutation = (\n  { __typename?: 'Mutation' }\n  & { saveMeeting: (\n    { __typename?: 'MeetingRes' }\n    & { meeting?: Maybe<(\n      { __typename?: 'Meeting' }\n      & Pick<Meeting, 'id' | 'title' | 'spots' | 'meetingDate' | 'createdAt' | 'updatedAt' | 'isActive'>\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>> }\n  ) }\n);\n\nexport type SaveQuestionMutationVariables = Exact<{\n  questions: Array<QuestionType>;\n  userId: Scalars['String'];\n}>;\n\n\nexport type SaveQuestionMutation = (\n  { __typename?: 'Mutation' }\n  & { registrerQuestion: (\n    { __typename?: 'QuestionResponse' }\n    & Pick<QuestionResponse, 'error' | 'saved'>\n  ) }\n);\n\nexport type SaveUserMutationVariables = Exact<{\n  input: UserInput;\n  userId?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type SaveUserMutation = (\n  { __typename?: 'Mutation' }\n  & { saveUser: (\n    { __typename?: 'UserResponse' }\n    & { user?: Maybe<(\n      { __typename?: 'User' }\n      & Pick<User, 'id'>\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>> }\n  ) }\n);\n\nexport type UpdateAdminMutationVariables = Exact<{\n  userData: UserUpdateInput;\n}>;\n\n\nexport type UpdateAdminMutation = (\n  { __typename?: 'Mutation' }\n  & { updateAdmin: (\n    { __typename?: 'LoginResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>>, admin?: Maybe<(\n      { __typename?: 'Admin' }\n      & Pick<Admin, 'firstName' | 'lastName' | 'email' | 'phone'>\n    )> }\n  ) }\n);\n\nexport type UpdateContactUserMutationVariables = Exact<{\n  userId: Scalars['String'];\n  contactData: UserContactType;\n}>;\n\n\nexport type UpdateContactUserMutation = (\n  { __typename?: 'Mutation' }\n  & { updateContactUser: (\n    { __typename?: 'UserResponse' }\n    & Pick<UserResponse, 'userId'>\n  ) }\n);\n\nexport type GetAdminDataQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAdminDataQuery = (\n  { __typename?: 'Query' }\n  & { getAdminsData: Array<(\n    { __typename?: 'Admin' }\n    & Pick<Admin, 'id' | 'firstName' | 'lastName' | 'email' | 'phone' | 'username'>\n  )> }\n);\n\nexport type GetClientsQueryVariables = Exact<{\n  name: Scalars['String'];\n}>;\n\n\nexport type GetClientsQuery = (\n  { __typename?: 'Query' }\n  & { getOrganizationByName: (\n    { __typename?: 'OrgNameResponse' }\n    & { organization?: Maybe<(\n      { __typename?: 'Organization' }\n      & Pick<Organization, 'id' | 'name'>\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>> }\n  ) }\n);\n\nexport type GetPlacesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetPlacesQuery = (\n  { __typename?: 'Query' }\n  & { getUserPlaces: (\n    { __typename?: 'PlaceResponse' }\n    & { place?: Maybe<Array<(\n      { __typename?: 'Place' }\n      & Pick<Place, 'id' | 'name' | 'address' | 'jsonAddress' | 'isActive'>\n    )>>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'field' | 'message'>\n    )>> }\n  ) }\n);\n\nexport type GetUserByIdQueryVariables = Exact<{\n  userId: Scalars['String'];\n}>;\n\n\nexport type GetUserByIdQuery = (\n  { __typename?: 'Query' }\n  & { userById: (\n    { __typename?: 'UserResponse' }\n    & { user?: Maybe<(\n      { __typename?: 'User' }\n      & UserDataFragment\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>> }\n  ) }\n);\n\nexport type AdminQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type AdminQuery = (\n  { __typename?: 'Query' }\n  & { getAdminData: (\n    { __typename?: 'Admin' }\n    & Pick<Admin, 'firstName' | 'lastName' | 'email' | 'phone'>\n  ) }\n);\n\nexport type HeartbeatQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HeartbeatQuery = (\n  { __typename?: 'Query' }\n  & { heartBeat?: Maybe<(\n    { __typename?: 'Admin' }\n    & Pick<Admin, 'firstName' | 'lastName' | 'email'>\n  )> }\n);\n\nexport type GetMeetingQueryVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\n\nexport type GetMeetingQuery = (\n  { __typename?: 'Query' }\n  & { meeting: (\n    { __typename?: 'MeetingRes' }\n    & { meeting?: Maybe<(\n      { __typename?: 'Meeting' }\n      & MeetingDataFragment\n    )>, errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>> }\n  ) }\n);\n\nexport type MeetingsQueryVariables = Exact<{\n  limit: Scalars['Int'];\n  cursor?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type MeetingsQuery = (\n  { __typename?: 'Query' }\n  & { meetings: (\n    { __typename?: 'PaginatedMeetings' }\n    & Pick<PaginatedMeetings, 'hasMore'>\n    & { meetings: Array<(\n      { __typename?: 'Meeting' }\n      & MeetingQueryFragment\n    )> }\n  ) }\n);\n\nexport type GetMeetingsByIdQueryVariables = Exact<{\n  ids: Array<Scalars['String']>;\n}>;\n\n\nexport type GetMeetingsByIdQuery = (\n  { __typename?: 'Query' }\n  & { meetingsById: Array<(\n    { __typename?: 'Meeting' }\n    & Pick<Meeting, 'id' | 'meetingDate' | 'title'>\n  )> }\n);\n\nexport type SearchReservationQueryVariables = Exact<{\n  reservationId: Scalars['String'];\n}>;\n\n\nexport type SearchReservationQuery = (\n  { __typename?: 'Query' }\n  & { searchReservation: (\n    { __typename?: 'ReservationResponse' }\n    & { errors?: Maybe<Array<(\n      { __typename?: 'ErrorField' }\n      & Pick<ErrorField, 'message'>\n    )>>, reservation?: Maybe<(\n      { __typename?: 'Reservation' }\n      & Pick<Reservation, 'id' | 'qrText'>\n      & { citizen: (\n        { __typename?: 'User' }\n        & Pick<User, 'document' | 'firstName' | 'lastName'>\n      ), meeting: (\n        { __typename?: 'Meeting' }\n        & Pick<Meeting, 'id' | 'title' | 'meetingDate'>\n      ) }\n    )> }\n  ) }\n);\n\nexport type MeetingDeleteSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MeetingDeleteSubscription = (\n  { __typename?: 'Subscription' }\n  & { meetingDelete: (\n    { __typename?: 'MeetingDeleted' }\n    & Pick<MeetingDeleted, 'data'>\n  ) }\n);\n\nexport type MeetingUpdatedSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type MeetingUpdatedSubscription = (\n  { __typename?: 'Subscription' }\n  & { meetingUpdated: (\n    { __typename?: 'MeetingUpdated' }\n    & { data: (\n      { __typename?: 'Meeting' }\n      & MeetingQueryFragment\n    ) }\n  ) }\n);\n\nexport type NewMeetingSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type NewMeetingSubscription = (\n  { __typename?: 'Subscription' }\n  & { newMeeting: (\n    { __typename?: 'MeetingUpdated' }\n    & { data: (\n      { __typename?: 'Meeting' }\n      & MeetingQueryFragment\n    ) }\n  ) }\n);\n\nexport type NewReservationSubscriptionVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type NewReservationSubscription = (\n  { __typename?: 'Subscription' }\n  & { newReservation: (\n    { __typename?: 'SubsNewReservation' }\n    & Pick<SubsNewReservation, 'meetingId'>\n  ) }\n);\n\nexport const MeetingDataFragmentDoc = gql`\n    fragment MeetingData on Meeting {\n  id\n  title\n  meetingDate\n  spots\n  isActive\n  createdAt\n}\n    `;\nexport const MeetingQueryFragmentDoc = gql`\n    fragment MeetingQuery on Meeting {\n  ...MeetingData\n  hasReservation\n  place {\n    id\n    name\n    address\n  }\n}\n    ${MeetingDataFragmentDoc}`;\nexport const UserDataFragmentDoc = gql`\n    fragment UserData on User {\n  id\n  document\n  lastName\n  firstName\n  phone\n  email\n  birthDate\n  reservations {\n    id\n    qrText\n    meetingId\n    meeting {\n      title\n      meetingDate\n    }\n  }\n}\n    `;\nexport const AddAdminDocument = gql`\n    mutation addAdmin($data: AdminInput!) {\n  register(options: $data) {\n    admin {\n      id\n    }\n    errors {\n      message\n    }\n  }\n}\n    `;\n\nexport function useAddAdminMutation() {\n  return Urql.useMutation<AddAdminMutation, AddAdminMutationVariables>(AddAdminDocument);\n};\nexport const AddOrganizationDocument = gql`\n    mutation AddOrganization($key: String!, $data: AddOrgType!) {\n  addOrganization(data: $data, key: $key) {\n    org {\n      id\n      name\n      defaultAdmin {\n        username\n        password\n      }\n    }\n    errors {\n      field\n      message\n    }\n  }\n}\n    `;\n\nexport function useAddOrganizationMutation() {\n  return Urql.useMutation<AddOrganizationMutation, AddOrganizationMutationVariables>(AddOrganizationDocument);\n};\nexport const AddPlaceDocument = gql`\n    mutation addPlace($placeId: String!, $data: PlaceInput!) {\n  addPlace(placeId: $placeId, data: $data) {\n    place {\n      name\n      address\n      jsonAddress\n      isActive\n    }\n    errors {\n      field\n      message\n    }\n  }\n}\n    `;\n\nexport function useAddPlaceMutation() {\n  return Urql.useMutation<AddPlaceMutation, AddPlaceMutationVariables>(AddPlaceDocument);\n};\nexport const CancelReservationDocument = gql`\n    mutation cancelReservation($reservationId: String!, $userId: String!) {\n  cancelReservation(reservationId: $reservationId, userId: $userId)\n}\n    `;\n\nexport function useCancelReservationMutation() {\n  return Urql.useMutation<CancelReservationMutation, CancelReservationMutationVariables>(CancelReservationDocument);\n};\nexport const ConfirmReservationDocument = gql`\n    mutation confirmReservation($meetingId: String!, $userId: String!) {\n  addReservation(data: {userId: $userId, meetingId: $meetingId}) {\n    errors {\n      message\n    }\n    reservation {\n      id\n    }\n  }\n}\n    `;\n\nexport function useConfirmReservationMutation() {\n  return Urql.useMutation<ConfirmReservationMutation, ConfirmReservationMutationVariables>(ConfirmReservationDocument);\n};\nexport const DeleteMeetDocument = gql`\n    mutation deleteMeet($meetingId: String!) {\n  deleteMeeting(meetingId: $meetingId) {\n    meeting {\n      id\n      title\n      spots\n      meetingDate\n      createdAt\n      updatedAt\n      isActive\n    }\n    errors {\n      field\n      message\n    }\n  }\n}\n    `;\n\nexport function useDeleteMeetMutation() {\n  return Urql.useMutation<DeleteMeetMutation, DeleteMeetMutationVariables>(DeleteMeetDocument);\n};\nexport const DeletePlaceDocument = gql`\n    mutation deletePlace($placeId: String!) {\n  deletePlace(placeId: $placeId) {\n    place {\n      id\n    }\n    errors {\n      field\n      message\n    }\n  }\n}\n    `;\n\nexport function useDeletePlaceMutation() {\n  return Urql.useMutation<DeletePlaceMutation, DeletePlaceMutationVariables>(DeletePlaceDocument);\n};\nexport const GetUserDocument = gql`\n    mutation getUser($citizenId: String!) {\n  user(document: $citizenId) {\n    user {\n      ...UserData\n    }\n    errors {\n      message\n    }\n  }\n}\n    ${UserDataFragmentDoc}`;\n\nexport function useGetUserMutation() {\n  return Urql.useMutation<GetUserMutation, GetUserMutationVariables>(GetUserDocument);\n};\nexport const LoginDocument = gql`\n    mutation login($usr: String!, $pwd: String!) {\n  login(password: $pwd, username: $usr) {\n    admin {\n      firstName\n      lastName\n      email\n    }\n    errors {\n      message\n    }\n  }\n}\n    `;\n\nexport function useLoginMutation() {\n  return Urql.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument);\n};\nexport const LogoutDocument = gql`\n    mutation logout {\n  logout\n}\n    `;\n\nexport function useLogoutMutation() {\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument);\n};\nexport const SaveMeetingDocument = gql`\n    mutation saveMeeting($meetingId: String!, $data: MeetingInput!) {\n  saveMeeting(meetingId: $meetingId, data: $data) {\n    meeting {\n      id\n      title\n      spots\n      meetingDate\n      createdAt\n      updatedAt\n      isActive\n    }\n    errors {\n      field\n      message\n    }\n  }\n}\n    `;\n\nexport function useSaveMeetingMutation() {\n  return Urql.useMutation<SaveMeetingMutation, SaveMeetingMutationVariables>(SaveMeetingDocument);\n};\nexport const SaveQuestionDocument = gql`\n    mutation saveQuestion($questions: [QuestionType!]!, $userId: String!) {\n  registrerQuestion(questions: $questions, userId: $userId) {\n    error\n    saved\n  }\n}\n    `;\n\nexport function useSaveQuestionMutation() {\n  return Urql.useMutation<SaveQuestionMutation, SaveQuestionMutationVariables>(SaveQuestionDocument);\n};\nexport const SaveUserDocument = gql`\n    mutation saveUser($input: UserInput!, $userId: String) {\n  saveUser(data: $input, userId: $userId) {\n    user {\n      id\n    }\n    errors {\n      message\n    }\n  }\n}\n    `;\n\nexport function useSaveUserMutation() {\n  return Urql.useMutation<SaveUserMutation, SaveUserMutationVariables>(SaveUserDocument);\n};\nexport const UpdateAdminDocument = gql`\n    mutation updateAdmin($userData: userUpdateInput!) {\n  updateAdmin(userData: $userData) {\n    errors {\n      field\n      message\n    }\n    admin {\n      firstName\n      lastName\n      email\n      phone\n    }\n  }\n}\n    `;\n\nexport function useUpdateAdminMutation() {\n  return Urql.useMutation<UpdateAdminMutation, UpdateAdminMutationVariables>(UpdateAdminDocument);\n};\nexport const UpdateContactUserDocument = gql`\n    mutation updateContactUser($userId: String!, $contactData: userContactType!) {\n  updateContactUser(userId: $userId, contactData: $contactData) {\n    userId\n  }\n}\n    `;\n\nexport function useUpdateContactUserMutation() {\n  return Urql.useMutation<UpdateContactUserMutation, UpdateContactUserMutationVariables>(UpdateContactUserDocument);\n};\nexport const GetAdminDataDocument = gql`\n    query getAdminData {\n  getAdminsData {\n    id\n    firstName\n    lastName\n    email\n    phone\n    username\n  }\n}\n    `;\n\nexport function useGetAdminDataQuery(options: Omit<Urql.UseQueryArgs<GetAdminDataQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetAdminDataQuery>({ query: GetAdminDataDocument, ...options });\n};\nexport const GetClientsDocument = gql`\n    query GetClients($name: String!) {\n  getOrganizationByName(orgName: $name) {\n    organization {\n      id\n      name\n    }\n    errors {\n      message\n    }\n  }\n}\n    `;\n\nexport function useGetClientsQuery(options: Omit<Urql.UseQueryArgs<GetClientsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetClientsQuery>({ query: GetClientsDocument, ...options });\n};\nexport const GetPlacesDocument = gql`\n    query getPlaces {\n  getUserPlaces {\n    place {\n      id\n      name\n      address\n      jsonAddress\n      isActive\n    }\n    errors {\n      field\n      message\n    }\n  }\n}\n    `;\n\nexport function useGetPlacesQuery(options: Omit<Urql.UseQueryArgs<GetPlacesQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetPlacesQuery>({ query: GetPlacesDocument, ...options });\n};\nexport const GetUserByIdDocument = gql`\n    query getUserById($userId: String!) {\n  userById(userId: $userId) {\n    user {\n      ...UserData\n    }\n    errors {\n      message\n    }\n  }\n}\n    ${UserDataFragmentDoc}`;\n\nexport function useGetUserByIdQuery(options: Omit<Urql.UseQueryArgs<GetUserByIdQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetUserByIdQuery>({ query: GetUserByIdDocument, ...options });\n};\nexport const AdminDocument = gql`\n    query Admin {\n  getAdminData {\n    firstName\n    lastName\n    email\n    phone\n  }\n}\n    `;\n\nexport function useAdminQuery(options: Omit<Urql.UseQueryArgs<AdminQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<AdminQuery>({ query: AdminDocument, ...options });\n};\nexport const HeartbeatDocument = gql`\n    query heartbeat {\n  heartBeat {\n    firstName\n    lastName\n    email\n  }\n}\n    `;\n\nexport function useHeartbeatQuery(options: Omit<Urql.UseQueryArgs<HeartbeatQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<HeartbeatQuery>({ query: HeartbeatDocument, ...options });\n};\nexport const GetMeetingDocument = gql`\n    query getMeeting($id: String!) {\n  meeting(id: $id) {\n    meeting {\n      ...MeetingData\n    }\n    errors {\n      message\n    }\n  }\n}\n    ${MeetingDataFragmentDoc}`;\n\nexport function useGetMeetingQuery(options: Omit<Urql.UseQueryArgs<GetMeetingQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetMeetingQuery>({ query: GetMeetingDocument, ...options });\n};\nexport const MeetingsDocument = gql`\n    query Meetings($limit: Int!, $cursor: String) {\n  meetings(limit: $limit, cursor: $cursor) {\n    meetings {\n      ...MeetingQuery\n    }\n    hasMore\n  }\n}\n    ${MeetingQueryFragmentDoc}`;\n\nexport function useMeetingsQuery(options: Omit<Urql.UseQueryArgs<MeetingsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<MeetingsQuery>({ query: MeetingsDocument, ...options });\n};\nexport const GetMeetingsByIdDocument = gql`\n    query getMeetingsById($ids: [String!]!) {\n  meetingsById(ids: $ids) {\n    id\n    meetingDate\n    title\n  }\n}\n    `;\n\nexport function useGetMeetingsByIdQuery(options: Omit<Urql.UseQueryArgs<GetMeetingsByIdQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<GetMeetingsByIdQuery>({ query: GetMeetingsByIdDocument, ...options });\n};\nexport const SearchReservationDocument = gql`\n    query searchReservation($reservationId: String!) {\n  searchReservation(reservationId: $reservationId) {\n    errors {\n      message\n    }\n    reservation {\n      id\n      qrText\n      citizen {\n        document\n        firstName\n        lastName\n      }\n      meeting {\n        id\n        title\n        meetingDate\n      }\n    }\n  }\n}\n    `;\n\nexport function useSearchReservationQuery(options: Omit<Urql.UseQueryArgs<SearchReservationQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<SearchReservationQuery>({ query: SearchReservationDocument, ...options });\n};\nexport const MeetingDeleteDocument = gql`\n    subscription MeetingDelete {\n  meetingDelete {\n    data\n  }\n}\n    `;\n\nexport function useMeetingDeleteSubscription<TData = MeetingDeleteSubscription>(options: Omit<Urql.UseSubscriptionArgs<MeetingDeleteSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<MeetingDeleteSubscription, TData>) {\n  return Urql.useSubscription<MeetingDeleteSubscription, TData, MeetingDeleteSubscriptionVariables>({ query: MeetingDeleteDocument, ...options }, handler);\n};\nexport const MeetingUpdatedDocument = gql`\n    subscription MeetingUpdated {\n  meetingUpdated {\n    data {\n      ...MeetingQuery\n    }\n  }\n}\n    ${MeetingQueryFragmentDoc}`;\n\nexport function useMeetingUpdatedSubscription<TData = MeetingUpdatedSubscription>(options: Omit<Urql.UseSubscriptionArgs<MeetingUpdatedSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<MeetingUpdatedSubscription, TData>) {\n  return Urql.useSubscription<MeetingUpdatedSubscription, TData, MeetingUpdatedSubscriptionVariables>({ query: MeetingUpdatedDocument, ...options }, handler);\n};\nexport const NewMeetingDocument = gql`\n    subscription NewMeeting {\n  newMeeting {\n    data {\n      ...MeetingQuery\n    }\n  }\n}\n    ${MeetingQueryFragmentDoc}`;\n\nexport function useNewMeetingSubscription<TData = NewMeetingSubscription>(options: Omit<Urql.UseSubscriptionArgs<NewMeetingSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<NewMeetingSubscription, TData>) {\n  return Urql.useSubscription<NewMeetingSubscription, TData, NewMeetingSubscriptionVariables>({ query: NewMeetingDocument, ...options }, handler);\n};\nexport const NewReservationDocument = gql`\n    subscription NewReservation {\n  newReservation {\n    meetingId\n  }\n}\n    `;\n\nexport function useNewReservationSubscription<TData = NewReservationSubscription>(options: Omit<Urql.UseSubscriptionArgs<NewReservationSubscriptionVariables>, 'query'> = {}, handler?: Urql.SubscriptionHandler<NewReservationSubscription, TData>) {\n  return Urql.useSubscription<NewReservationSubscription, TData, NewReservationSubscriptionVariables>({ query: NewReservationDocument, ...options }, handler);\n};","import {\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n} from \"@chakra-ui/react\"\nimport { Field } from \"formik\"\nimport React from \"react\"\nimport { FormikType } from \"../types\"\n\nconst WrapperInput = ({\n  type = \"text\",\n  name = \"\",\n  label = \"\",\n  placeholder = \"\",\n  id = \"\",\n  ...props\n}) => {\n  return !name ? null : (\n    <Field name={name}>\n      {({ field, form }: FormikType) => (\n        <FormControl isInvalid={form.errors[name] && form.touched[name]} mt={2}>\n          <FormLabel id={`lbl-${id}`} htmlFor={id} {...props}>\n            {label}\n          </FormLabel>\n          <Input\n            {...field}\n            type={type}\n            placeholder={placeholder || label.toLowerCase()}\n            {...props}\n            id={id}\n            data-qa={`${name}-field`}\n          />\n          <FormErrorMessage>{form.errors[name]}</FormErrorMessage>\n        </FormControl>\n      )}\n    </Field>\n  )\n}\n\nexport default WrapperInput\n","import React, { ReactNode } from \"react\"\nimport { Flex, HStack } from \"@chakra-ui/react\"\n\nconst ModalActions = ({ children }: { children: ReactNode }) => {\n  return (\n    <Flex alignSelf=\"flex-end\" p=\"2\" justifyContent=\"space-between\">\n      <HStack spacing=\"0.75rem\">{children}</HStack>\n    </Flex>\n  )\n}\nexport default ModalActions\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\"\nimport React from \"react\"\nimport ModalActions from \"./ModalActions\"\n\ntype ModalProps = {\n  titulo: string\n  contenido: any\n  isOpen: boolean\n  onClose: any\n  actions?: React.ReactNode\n}\n\nconst ModalWrapper = ({\n  titulo,\n  contenido,\n  isOpen,\n  onClose,\n  actions,\n}: ModalProps) => {\n  return (\n    <Modal onClose={onClose} isOpen={isOpen} isCentered>\n      <ModalOverlay />\n      <ModalContent justifyContent=\"start\">\n        <ModalHeader>{titulo}</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>{contenido}</ModalBody>\n        <ModalActions>{actions}</ModalActions>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ModalWrapper\n","import React from \"react\"\nimport { Box, useStyleConfig } from \"@chakra-ui/react\"\n\nconst NeutralButton = (props: any) => {\n  const style = useStyleConfig(\"DefaultButton\", props)\n  return <Box as=\"button\" sx={style} {...props} />\n}\n\nexport default NeutralButton\n","import { QuestionDataType } from \"../components/types\"\n\nconst isQuestionDataValid = ({\n  contactNumber,\n  emergenceContact,\n  formatMessage,\n}: QuestionDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n\n  const onlyLetters = /^[a-zA-Z\\s]*$/\n\n  if (!contactNumber) {\n    errors.contactNumber = IS_REQUIRED\n  } else if (\n    String(contactNumber).length !== 7 &&\n    String(contactNumber).length !== 10\n  ) {\n    errors.contactNumber = IS_INCORRECT\n  }\n\n  if (!emergenceContact) {\n    errors.emergenceContact = IS_REQUIRED\n  } else if (!onlyLetters.test(emergenceContact)) {\n    errors.emergenceContact = IS_INCORRECT\n  }\n\n  return errors\n}\n\nexport default isQuestionDataValid\n","import React from \"react\"\nimport Wrapper from \"../components/Wrapper\"\nimport { Box, Flex, Heading, useToast, Text } from \"@chakra-ui/react\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport YesNoRadioGroup from \"../components/YesNoRadioGroup\"\nimport { Formik, Form } from \"formik\"\nimport { QUESTIONS } from \"../constants/index\"\nimport { useParams, useHistory, Link } from \"react-router-dom\"\nimport { useSaveQuestionMutation } from \"../generated/graphql\"\nimport { useUpdateContactUserMutation } from \"../generated/graphql\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport ModalWrapper from \"../components/ModalWrapper\"\nimport { QUESTION_VIEW } from \"../ui/formIds\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport NeutralButton from \"../components/formElements/NeutralButton\"\nimport isQuestionDataValid from \"../utils/isQuestionDataValid\"\n\nconst Question = () => {\n  const { formatMessage } = useIntl()\n  const [error, setError] = React.useState(false)\n  const [errorInco, setErrorInco] = React.useState(true)\n  const history = useHistory()\n  const toast = useToast()\n  const [, saveQuestion] = useSaveQuestionMutation()\n  const [, updateContactUser] = useUpdateContactUserMutation()\n  let { userId }: any = useParams()\n  if (!userId) history.push(\"/\")\n\n  const onClose = () => {\n    setError(false)\n    history.push(\"/\")\n  }\n\n  const validateQuestions = async (values: any) => {\n    const { emergencyPhone, emergencyContact, ...questions } = values\n\n    const arrValue = Object.values(questions)\n    const q = arrValue.find((value) => value === \"1\")\n    if (QUESTIONS.length !== arrValue.length - 2) {\n      return setErrorInco(true)\n    } else {\n      setErrorInco(false)\n    }\n    if (q) {\n      setError(true)\n    }\n    return setErrorInco(false)\n  }\n\n  const validateInputs = (values: any) => {\n    const errors = isQuestionDataValid({ ...values, formatMessage })\n\n    return errors\n  }\n\n  return (\n    <Wrapper>\n      <Flex w=\"100%\" alignItems=\"center\" flex={1} p={5} flexDir=\"column\">\n        <Heading id={QUESTION_VIEW.formTitle}>\n          <DisplayText id=\"app.question.title\" defaultMessage=\"Health form\" />\n        </Heading>\n\n        <Heading\n          id={QUESTION_VIEW.formparagraph}\n          as=\"h5\"\n          size=\"sm\"\n          mb={6}\n          mt={6}\n        >\n          <DisplayText id=\"app.question.intro\" />\n        </Heading>\n        <Formik\n          initialValues={{\n            emergenceContact: \"\",\n            contactNumber: \"\",\n          }}\n          validate={(values) => {\n            const errors = validateInputs(values)\n            validateQuestions(values)\n            return errors\n          }}\n          onSubmit={async (values: any) => {\n            const { emergenceContact, contactNumber, ...questions } = values\n            const contactData = { emergenceContact, contactNumber }\n            const resEmergencyContact = await updateContactUser({\n              userId,\n              contactData,\n            })\n\n            if (resEmergencyContact.error) {\n              return toast({\n                description: resEmergencyContact.error.message,\n                title: formatMessage({ id: \"app.question.contactNameError\" }),\n                status: \"error\",\n                duration: 3000,\n                isClosable: true,\n              })\n            }\n\n            if (errorInco) {\n              return toast({\n                description: \"\",\n                title: formatMessage({ id: \"app.question.uncompleteQuestion\" }),\n                status: \"error\",\n                duration: 3000,\n                isClosable: true,\n              })\n            }\n\n            const params = Object.keys(questions).map((key) => ({\n              questionId: key,\n              answer: values[key],\n            }))\n            const res = await saveQuestion({\n              questions: params,\n              userId: userId,\n            })\n            if (res.error) {\n              return toast({\n                description: res.error.message,\n                title: \"\",\n                status: \"error\",\n                duration: 3000,\n                isClosable: true,\n              })\n            }\n            history.push(`/confirm/${userId}`)\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form style={{ width: \"100%\" }}>\n              <Flex mb={5} justifyContent=\"space-around\" align=\"flex-end\">\n                <FormikInput\n                  id={QUESTION_VIEW.emergenceContact}\n                  label={formatMessage({ id: \"app.question.contactName\" })}\n                  name=\"emergenceContact\"\n                  w=\"90%\"\n                  required\n                />\n                <FormikInput\n                  id={QUESTION_VIEW.contactNumber}\n                  label={formatMessage({ id: \"app.question.contactPhone\" })}\n                  name=\"contactNumber\"\n                  type=\"number\"\n                  required\n                />\n              </Flex>\n              <Box>\n                <Text id={QUESTION_VIEW.notice} mt={5} mb={3}>\n                  <DisplayText\n                    id=\"app.question.notice\"\n                    defaultMessage=\"Please carefully answer the following questions:\"\n                  />\n                </Text>\n                <Flex flexDir=\"column\" w=\"100%\" align=\"center\">\n                  {QUESTIONS && <YesNoRadioGroup questions={QUESTIONS} />}\n                  <Box alignSelf=\"flex-end\" mt={5}>\n                    <NeutralButton\n                      id={QUESTION_VIEW.btnGoBack}\n                      mr={3}\n                      onClick={() => {\n                        history.goBack()\n                      }}\n                    >\n                      <DisplayText\n                        id=\"app.buttons.back\"\n                        defaultMessage=\"back\"\n                      />\n                    </NeutralButton>\n                    <PrimaryButton\n                      id={QUESTION_VIEW.btnSubmit}\n                      type=\"submit\"\n                      disabled={error}\n                      isLoading={isSubmitting}\n                    >\n                      <DisplayText\n                        id=\"app.buttons.continue\"\n                        defaultMessage=\"continue\"\n                      />\n                    </PrimaryButton>\n                  </Box>\n                </Flex>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n        <ModalWrapper\n          titulo={formatMessage({ id: \"app.modalQuestion.title\" })}\n          contenido={\n            <>\n              <DisplayText id=\"app.modalQuestion.message\" />\n              <Link\n                id={QUESTION_VIEW.linkNoEntry}\n                to=\"https://www.youtube.com/c/cfebello\"\n                target=\"_blank\"\n                style={{ color: \"#62ade2\" }}\n              >\n                cfebello\n              </Link>\n            </>\n          }\n          isOpen={error}\n          onClose={onClose}\n        />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Question\n","import { useEffect } from \"react\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useGetClientsQuery } from \"../generated/graphql\"\n\nexport const useClient = (client: string) => {\n  const [{ data, fetching }] = useGetClientsQuery({\n    variables: { name: client },\n  })\n\n  const history = useHistory()\n  const location = useLocation()\n  useEffect(() => {\n    if (!fetching && !data?.getOrganizationByName.organization)\n      return history.replace(`/`)\n    const currentOrg = data?.getOrganizationByName?.organization\n    sessionStorage.setItem(\"clientId\", currentOrg?.id || \"\")\n  }, [fetching, data, history, location.pathname, client])\n}\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\nconst Heading = (props: any) => <Box as=\"h1\" {...props} />\n\nexport default Heading\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\ntype subtitleProps = {\n  value: string\n  id: string\n}\nconst Subtitle = ({ value, id }: subtitleProps) => {\n  return (\n    <Box as=\"h2\" id={id} >\n      {value}\n    </Box>\n  )\n}\n\nexport default Subtitle\n","//purpleVersion\n// btn: #8f6bbb\n// tabSection: #8f6bbb12\n// font: #414141\n// btnFont: #8f6bbb\nexport const brand = {\n  100: \"#f1f5fc\", //bg\n  200: \"#3e4685\", //actions\n  300: \"#87888a\", //font\n  400: \"#3e4685\", // titles\n  500: \"#96B4D5\", // bgDark\n  600: \"#E8E4E7\", // darkActions\n  700: \"#486AE5\", // darkFont\n  800: \"#252E48\", // darkTitles\n}\n\nexport const app_brand = {\n  bg: \"#f1f5fc\",\n  section: \"#f3f8fe\",\n  secondIcon: \"#e5e8f7\",\n  actions: \"#3e4685\",\n  actionsFont: \"white\",\n  font: \"black\",\n  titles: \"#3e4685\",\n  darkBg: \"#414141\",\n  darkActions: \"#63b3ed\",\n  darkFont: \"white\",\n  darkTitles: \"#63b3ed\",\n  darkSection: \"white\",\n  darkSecondIcon: \"#8f6bbb\",\n}\n\nexport const defaultFont = '\"Lato\", sans-serif'\n\nexport const btnProps = {\n  padding: \"1px\",\n  whiteSpace: \"normal\",\n  wordWrap: \"break-word\",\n  size: \"md\",\n  height: \"3rem\",\n  width: \"7.5rem\",\n  borderRadius: \"0.375rem\",\n  _hover: {\n    opacity: \"0.8\",\n  },\n}\n\nexport const iconBtnProps = {\n  _hover: {\n    opacity: \"0.8\",\n  },\n}\n\nexport const TabSectionStyles = {\n  borderRadius: \"5%\",\n}\n\nexport const TabStyles = {\n  _focus: {\n    fontWeight: \"600\",\n  },\n  minHeight: \"400px\",\n  shadow: \"md\",\n}","import { EmailIcon } from \"@chakra-ui/icons\"\nimport { Box, Flex, Icon, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { app_brand } from \"../theme/components/general\"\n\nconst Footer = () => {\n  return (\n    <Box\n      borderTopColor={app_brand.titles}\n      padding=\"1rem\"\n      borderTop=\"1px solid rgb(62, 70, 133)\"\n      display=\"flex\"\n    >\n      <Flex\n        align=\"flex-start\"\n        justify={[\"center\", \"space-between\"]}\n        direction={[\"column\", \"row\", \"row\", \"row\"]}\n        w=\"100%\"\n      >\n        <Text ml={2}>© 2021 Aforo </Text>\n\n        <Flex justifyItems=\"center\" align=\"center\">\n          <Icon as={EmailIcon} mr=\"4px\" />\n          <Box as=\"a\" href={`mailto:aforo.meetings@gmail.com`}>\n            aforo.meetings@gmail.com\n          </Box>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Footer\n","export default function ShouldRender(props: { if: any; children: any }) {\n  return props.if ? props.children : null\n}\n","import { SettingsIcon } from \"@chakra-ui/icons\"\nimport {\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Spinner,\n  useColorMode,\n} from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useHeartbeatQuery, useLogoutMutation } from \"../generated/graphql\"\nimport { app_brand } from \"../theme/components/general\"\nimport DisplayText from \"./formElements/DisplayMessage\"\nimport ShouldRender from \"./ShouldRender\"\n\nexport default function Account() {\n  const { colorMode } = useColorMode()\n  const [{ data }] = useHeartbeatQuery()\n  const history = useHistory()\n  const [{ fetching }, logout] = useLogoutMutation()\n  if (fetching) return <Spinner />\n\n  return (\n    <ShouldRender if={data && data.heartBeat}>\n      <Menu>\n        <MenuButton>\n          <DisplayText\n            id=\"app.navbar.greeting\"\n            defaultMessage=\"registrado como\"\n          />\n          {\": \"}\n          {data?.heartBeat?.firstName}\n          <SettingsIcon ml={3} cursor=\"pointer\" />\n        </MenuButton>\n        <MenuList\n          background={colorMode === \"dark\" ? app_brand.darkBg : app_brand.bg}\n        >\n          <MenuItem\n            onClick={async () => {\n              history.push(\"/settings\")\n            }}\n          >\n            <DisplayText id=\"app.account.settings\" defaultMessage=\"settings\" />\n          </MenuItem>\n          <MenuItem\n            onClick={async () => {\n              await logout()\n            }}\n          >\n            <DisplayText id=\"app.account.logOut\" defaultMessage=\"logout\" />\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </ShouldRender>\n  )\n}\n","import React, { useState } from \"react\"\nimport { IntlProvider } from \"react-intl\"\nimport Spanish from \"../lang/es.json\"\nimport English from \"../lang/en.json\"\n\nexport const Context = React.createContext({\n  locale: \"es\",\n  selectLanguage: (e: any) => null,\n})\nconst languages: any = {\n  es: Spanish,\n  en: English,\n}\nconst local = navigator.language\n\nlet lang = local === \"en\" ? English : Spanish\n\nconst LangWrapper = (props: any) => {\n  const [state, setState] = useState({ locale: local, messages: lang })\n\n  function selectLanguage(e: any) {\n    const newLocale = e.target.value\n    setState({ locale: newLocale, messages: languages[newLocale] || Spanish })\n    return null\n  }\n\n  return (\n    <Context.Provider value={{ locale: state.locale, selectLanguage }}>\n      <IntlProvider {...state}>{props.children}</IntlProvider>\n    </Context.Provider>\n  )\n}\n\nexport default LangWrapper\n","import { Box } from \"@chakra-ui/react\"\nimport React, { useContext } from \"react\"\nimport { Context } from \"../context/LangWrapper\"\n\nconst LangDropDown = (props: any) => {\n  const { locale, selectLanguage } = useContext(Context)\n  const otherOption = locale === \"es\" ? \"en\" : \"es\"\n  return (\n    <Box className=\"LangDropDown\">\n      <Box\n        as=\"a\"\n        onClick={(e) => {\n          selectLanguage({ target: { value: otherOption } })\n        }}\n        cursor=\"pointer\"\n      >\n        Lang: {otherOption.toUpperCase()}\n      </Box>\n    </Box>\n  )\n}\nexport default LangDropDown\n","import { useColorMode } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { app_brand } from \"../theme/components/general\"\nconst Logo = () => {\n  const { colorMode } = useColorMode()\n  return (\n    <svg\n      id=\"svg\"\n      viewBox=\"0 0 149.27 93.58\"\n      width=\"100%\"\n      height=\"100%\"\n      fill={colorMode === \"dark\" ? app_brand.darkActions : app_brand.actions}\n    >\n      <g id=\"Capa_2\" data-name=\"Capa 2\">\n        <g id=\"Capa_3\" data-name=\"Capa 3\">\n          <path d=\"M87.41,47.84c-1.12,0-2.24,0-3.35,0-4-.06-4.26-.36-4.38-4.22A12.28,12.28,0,0,0,79,38.84c-.25-.59-.56-1.18-1.31-1s-.89.82-.88,1.45a22.32,22.32,0,0,0,.26,2.58c.26,1.93,1.24,4.11-.58,5.57a3.42,3.42,0,0,1-4.21-.1c-1.62-1.57-.68-3.71-.4-5.64a18.84,18.84,0,0,0,.21-2.59c0-.66-.28-1.25-1-1.3-.55,0-.85.42-1.07.89a12.37,12.37,0,0,0-.72,5.12c-.12,3.65-.46,4-4.18,4-2.86,0-5.73.09-8.58,0-2.44-.11-3.17-1-2.8-3.33.61-3.86,1.46-7.54,5.84-9.17a35.78,35.78,0,0,0,6.54-3.56c2.45-1.56,2.64-2.46.83-4.77A23.1,23.1,0,0,1,62.55,16a4.17,4.17,0,0,0-.39-1.79c-1.59-2.14-1.33-3.77.91-5.3.61-.41.74-1.52,1.1-2.31A10.55,10.55,0,0,1,74.46,0,10.53,10.53,0,0,1,84.78,6.59c.36.78.48,1.94,1.09,2.31,2.65,1.62,2.08,3.36.88,5.66-.77,1.47-.72,3.37-1,5.09a13.42,13.42,0,0,1-3.59,7.61c-1.89,1.91-1.78,2.87.55,4.35,2.61,1.66,5.41,3,8.11,4.58s5,6.55,4.49,9.57a2.19,2.19,0,0,1-2.3,2c-1.86.06-3.73,0-5.6,0ZM74.65,12.77v0c-1.73,0-3.47,0-5.2,0S67,13.68,67,15.35c0,3.65,1.13,6.83,4,9.22a5.51,5.51,0,0,0,8-.34,10.51,10.51,0,0,0,2.87-7.06c.28-3.93-.09-4.32-3.91-4.39C76.88,12.76,75.76,12.77,74.65,12.77Z\" />\n          <path d=\"M71.78,62A15.6,15.6,0,0,1,87.85,77.62c.09,8.24-6.56,16-16.62,16-7.07-.06-16-5.5-16.08-15.78A15.63,15.63,0,0,1,71.78,62Zm-.71,6.8c-4.88,0-8.45,3.81-8.46,8.93a8.58,8.58,0,0,0,8.87,9,8.7,8.7,0,0,0,8.89-9C80.35,72.29,76.62,68.72,71.07,68.78Z\" />\n          <path d=\"M106.41,83l4.31,4.4c1.46,1.51,3,3,3.73,5-3.92,1.86-7.13,1.28-10-1.56C102.28,88.85,101,86,98,84.24c-.63,2.08-.26,4-.36,6-.15,2.86-.43,3.14-3.32,3.2-3.33.06-4-.45-4.16-3.28s0-5.47,0-8.21c0-5.35,0-10.71,0-16.06,0-3.21.52-3.77,3.68-3.73,4,0,8-.48,11.9.47,4.7,1.13,7.71,4.16,8.27,8.46a10.49,10.49,0,0,1-5.52,10.57C107.87,82,107.06,82,106.41,83ZM97.67,72.76c0,3.74.24,4.15,2.64,4.12,3.87,0,6.17-1.5,6.22-3.94s-2.15-4.09-5.6-4.11C98,68.82,97.69,69.15,97.67,72.76Z\" />\n          <path d=\"M149.22,78c-.05,8.84-7.24,15.38-16.49,15.56-7.69.15-16.41-7.52-15.84-16.31S124,61.75,133.13,61.78C143.68,61.82,149.85,70.06,149.22,78Zm-7.53-.3c0-5.59-3.3-8.94-8.72-8.89-5.19,0-8.41,3.4-8.44,8.8,0,5.65,3.18,9.07,8.54,9.09S141.7,83.27,141.69,77.67Z\" />\n          <path d=\"M14.78,62.07c4,0,4.15,0,5.45,3.56,3,8.4,5.94,16.85,8.93,25.26.57,1.61.07,2.38-1.58,2.46-1,.05-2,0-3,0-1.69,0-2.9-.57-3.2-2.4-.38-2.33-1.9-3-4-2.83a35.09,35.09,0,0,1-4.47,0c-2.55-.17-4.55.17-5.44,3.17-.58,2-5.09,2.9-6.79,1.72-1.15-.78-.51-1.8-.21-2.67,1.9-5.51,3.85-11,5.79-16.51.91-2.57,1.85-5.13,2.75-7.7C10.41,62.07,10.39,62.06,14.78,62.07Zm.07,9.72-.69,0c-.85,2.52-1.69,5.05-2.54,7.57-.42,1.21,0,1.92,1.29,2,.86,0,1.72,0,2.58,0,1.58,0,2.33-.67,1.78-2.33C16.46,76.64,15.66,74.21,14.85,71.79Z\" />\n          <path d=\"M31.2,77.54c0-4-.06-8,0-11.94.05-3,.55-3.46,3.53-3.51Q42.4,62,50,62.09a3.72,3.72,0,0,1,3.23,5.72c-.6,1.06-1.64,1-2.62,1-3,0-6,0-8.95,0-2.73.07-2.94.34-3,3.05-.06,3,.28,3.49,2.88,3.58s5,0,7.46,0c2.73.09,3.09.55,3.07,3.43s-.35,3.19-3.22,3.27c-2.36.06-4.73,0-7.09,0-2.8.08-3,.27-3.09,3-.06,1.74,0,3.48,0,5.22-.11,2.58-.45,2.84-3.19,2.93-3.21.09-4.15-.4-4.22-2.8-.14-4.35,0-8.7,0-13Z\" />\n          <path d=\"M44.33,47.84a20.64,20.64,0,0,1-2.61,0c-1.59-.21-3.88.85-4.43-1.53a6.14,6.14,0,0,1,1.89-6.46A42.54,42.54,0,0,1,45,36.47c2.89-1.62,3-1.95,1.07-4.75a12.83,12.83,0,0,1-2.24-10.58c1.08-4.43,5.3-7.37,9.42-6.6,5,.94,8.16,5.1,7.46,10a15.09,15.09,0,0,1-3.24,7.83,21.08,21.08,0,0,0-5.37,12.82C52,47,50.94,47.8,49.18,47.81H44.33ZM57,22.92c-.32.3-.59.43-.61.6-.12.94-.42,1.78-1.52,1.73-1.25-.05-1.23-1-1-1.9s-.19-1.33-1-1.69A13.56,13.56,0,0,1,50,20c-1.57-1.29-2.27-.32-2.67,1a9.75,9.75,0,0,0,1.12,8.52c1.15,1.76,2.93,2.09,4.9,1.88s2.79-1.36,3.35-3A8.55,8.55,0,0,0,57,22.92Z\" />\n          <path d=\"M104.22,47.84c-1.89-.22-4.36.72-6.27-.57s-1.16-3.9-1.69-5.89a24.11,24.11,0,0,0-4.57-8.85c-2.52-3.23-4.09-6.82-3.14-11.07,1-4.69,5.25-7.73,9.51-6.91a8.83,8.83,0,0,1,7.44,10,15,15,0,0,1-2.85,7.56c-1.65,2.14-1.47,2.71.78,4,1.82,1.08,3.66,2.11,5.52,3.11a4.59,4.59,0,0,1,2.22,2.39c1.83,4.49.77,6.16-4,6.18Zm-2.48-25.1c-.34.47-.57.64-.59.83-.1,1-.49,1.77-1.56,1.68-1.23-.1-1.15-1.07-1-2s-.3-1.3-1-1.65A14.77,14.77,0,0,1,94.74,20c-1.31-1-2-.48-2.53.73-1.15,2.45-.49,7.14,1.3,9.15a4.62,4.62,0,0,0,8-1.54A8.73,8.73,0,0,0,101.74,22.74Z\" />\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default Logo\n","import { MoonIcon, SunIcon } from \"@chakra-ui/icons\"\nimport { IconButton, useColorMode } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { app_brand } from \"../theme/components/general\"\nimport { NAVABAR_LIST } from \"../ui/formIds\"\n\nconst Toggle = () => {\n  const { colorMode, toggleColorMode } = useColorMode()\n  return (\n    <IconButton\n      onClick={toggleColorMode}\n      aria-label=\"toggleDarkMode\"\n      icon={colorMode === \"dark\" ? <SunIcon /> : <MoonIcon />}\n      id={NAVABAR_LIST.darkMode}\n      color={colorMode === \"dark\" ? app_brand.darkActions : app_brand.actions}\n      borderColor={\n        colorMode === \"dark\" ? app_brand.darkActions : app_brand.actions\n      }\n      borderWidth=\"1px\"\n      h={[\"1.5rem\", \"2rem\"]}\n      minW={[\"1.5rem\", \"2rem\"]}\n    />\n  )\n}\n\nexport default Toggle\n","import { CloseIcon, HamburgerIcon } from \"@chakra-ui/icons\"\nimport { Box, Flex, Stack, Text } from \"@chakra-ui/react\"\nimport React, { ReactNode } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { NAVABAR_LIST } from \"../ui/formIds\"\nimport Account from \"./Account\"\nimport LangDropDown from \"./LangDropDown\"\nimport Logo from \"./Logo\"\nimport ToggleDarkMode from \"./ToggleDarkMode\"\n\ntype MenuItemProps = {\n  children?: ReactNode\n  isLast?: boolean\n}\n\nconst MenuItems = (props: MenuItemProps) => {\n  const { children, isLast, ...rest } = props\n  return (\n    <Text\n      mb={{ base: isLast ? 0 : 3, sm: 0 }}\n      mr={{ base: 0, sm: isLast ? 0 : 3 }}\n      display=\"block\"\n      {...rest}\n    >\n      {children}\n    </Text>\n  )\n}\n\nconst NavBar = (props: any) => {\n  const [show, setShow] = React.useState(false)\n  const toggleMenu = () => setShow(!show)\n  return (\n    <Flex\n      as=\"nav\"\n      align=\"center\"\n      justify=\"space-between\"\n      wrap=\"wrap\"\n      w=\"100%\"\n      mb={8}\n      p={8}\n      {...props}\n    >\n      <Flex align=\"flex-start\">\n        <Box display={{ base: \"flex\", md: \"none\" }} onClick={toggleMenu}>\n          {show ? <CloseIcon /> : <HamburgerIcon />}\n        </Box>\n        <Box w={[\"30px\", \"30px\", \"50px\"]} ml={[\"1rem\"]}>\n          <Link to=\"/\" id={NAVABAR_LIST.logo}>\n            <Logo />\n          </Link>\n        </Box>\n      </Flex>\n\n      <Box\n        display={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n        flexBasis={{ base: \"100%\", md: \"auto\" }}\n      >\n        <Flex\n          align=\"flex-start\"\n          justify={[\"center\", \"space-between\", \"flex-end\", \"flex-end\"]}\n          direction={[\"column\", \"row\", \"row\", \"row\"]}\n          pt={[4, 4, 0, 0]}\n        >\n          <Box display={{ base: show ? \"block\" : \"none\", md: \"none\" }}>\n            <MenuItems>\n              <Account />\n            </MenuItems>\n          </Box>\n          <MenuItems>\n            <Link to=\"/meetings\">Eventos</Link>{\" \"}\n          </MenuItems>\n          <MenuItems isLast={!show}>\n            <Link to=\"/reservation\">Reservas</Link>\n          </MenuItems>\n          <Box display={{ base: show ? \"block\" : \"none\", md: \"none\" }}>\n            <MenuItems isLast={show}>\n              <LangDropDown />\n            </MenuItems>\n          </Box>\n        </Flex>\n      </Box>\n      <Flex>\n        <Flex\n          display={[\"none\", \"none\", \"flex\"]}\n          align={\"center\"}\n          justify={\"flex-end\"}\n          direction={\"row\"}\n          pt={[4, 4, 0, 0]}\n          mr=\"1rem\"\n        >\n          <Stack spacing=\"1rem\" direction=\"row\">\n            <Account />\n            <LangDropDown />\n          </Stack>\n        </Flex>\n        {show ? null : <ToggleDarkMode />}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default NavBar\n","import { Flex } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport Footer from \"../components/Footer\"\nimport NavBar from \"../components/NavBar\"\nimport Wrapper from \"../components/Wrapper\"\nimport { ChildrenType } from \"../utils/types\"\n\nexport default function Layout({ children }: ChildrenType) {\n  return (\n    <Wrapper>\n      <NavBar />\n      <Flex flexDir=\"column\" minHeight=\"85vh\" p={[2, 4, 6, 8]}>\n        {children}\n      </Flex>\n      <Footer />\n    </Wrapper>\n  )\n}\n","import * as Yup from \"yup\"\n// data:{\n//   name:\"test 1\",\n//   username:\"pino2\",\n// },\n// key:\"74PHQITMUT\"\nexport const OrgAdminSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  username: Yup.string()\n    .min(3, \"Too Short!\")\n    .max(8, \"Too Long!\")\n    .required(\"Required\"),\n  key: Yup.string().required(\"Required\"),\n})\n","import { createStandaloneToast } from \"@chakra-ui/react\"\n\ntype ToastProps = {\n  description?: string\n  title: string\n  type: \"error\" | \"warning\" | \"success\"\n}\n\nconst Notify = ({ description = undefined, title, type }: ToastProps) => {\n  const toast = createStandaloneToast()\n  toast({\n    title,\n    description,\n    status: type,\n    duration: 3000,\n    isClosable: true,\n  })\n}\n\nexport default Notify\n","import { Center, Stack } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport PrimaryButton from \"../../components/formElements/PrimaryButton\"\nimport Subtitle from \"../../components/formElements/Subtitle\"\n\nexport const AccountCreated = ({ data = {} }: any) => {\n  const history = useHistory()\n  const { name = \"\", defaultAdmin = {} } = data\n  return (\n    <Center>\n      <Stack spacing=\"1rem\" direction=\"column\">\n        <Subtitle\n          id=\"orgCreatedMsg\"\n          value={`Account for client ${name} was created successfuly with admin user: ${defaultAdmin?.username} and temp password: ${defaultAdmin?.password} `}\n        />\n        <PrimaryButton\n          onClick={() => {\n            history.push(\"/login\")\n          }}\n        >\n          Login to continue\n        </PrimaryButton>\n      </Stack>\n    </Center>\n  )\n}\n","import { Form, Formik } from \"formik\"\nimport React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../../components/formElements/DisplayMessage\"\nimport FormikInput from \"../../components/formElements/FormikInput\"\nimport PrimaryButton from \"../../components/formElements/PrimaryButton\"\nimport { useAddOrganizationMutation } from \"../../generated/graphql\"\nimport { CITIZEN_FORM } from \"../../ui/formIds\"\nimport { OrgAdminSchema } from \"../../ui/formSchemas\"\nimport Notify from \"../../utils/notify\"\nimport { AccountCreated } from \"./AccountCreated\"\n\nexport const AdminForm = () => {\n  const { formatMessage } = useIntl()\n  const [created, setCreated] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [{ data }, addOrg] = useAddOrganizationMutation()\n  if (created) return <AccountCreated data={data?.addOrganization.org} />\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        username: \"\",\n        email: \"\",\n        key: \"\",\n      }}\n      validationSchema={OrgAdminSchema}\n      onSubmit={async ({ name, username, key, email }) => {\n        setLoading(true)\n        const { data, error } = await addOrg({\n          data: { name, username, email },\n          key,\n        })\n        setLoading(false)\n        if (data?.addOrganization.errors) {\n          return Notify({\n            title: \"Error\",\n            description: data?.addOrganization.errors[0].message,\n            type: \"error\",\n          })\n        }\n        if (data?.addOrganization.org) setCreated(true)\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <FormikInput\n            label=\"organization name\"\n            name=\"name\"\n            disabled={loading}\n            id=\"orgName\"\n            required\n          />\n          <FormikInput\n            label=\"default admin username\"\n            name=\"username\"\n            disabled={loading}\n            id=\"defaultUsername\"\n            required\n          />\n          <FormikInput\n            label=\"admin email\"\n            name=\"email\"\n            disabled={loading}\n            id=\"defaultUsernameEmail\"\n            required\n          />\n          <FormikInput\n            label=\"api key\"\n            name=\"key\"\n            disabled={loading}\n            id=\"apiKeyField\"\n            required\n          />\n\n          <PrimaryButton\n            type=\"submit\"\n            isLoading={isSubmitting}\n            id={CITIZEN_FORM.submit}\n          >\n            <DisplayText id=\"app.buttons.continue\" defaultMessage=\"continue\" />\n          </PrimaryButton>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n","import React from \"react\"\nimport Heading from \"../../components/formElements/Heading\"\nimport Subtitle from \"../../components/formElements/Subtitle\"\nimport Layout from \"../../layouts\"\nimport { AdminForm } from \"./AdminForm\"\n\nconst AdminPage = () => {\n  return (\n    <Layout>\n      <Heading>Organization Creation Page</Heading>\n      <Subtitle\n        id=\"organizationPage_Subtitle\"\n        value=\"make sure you have the right key ಠ_ಠ\"\n      />\n      <AdminForm />\n    </Layout>\n  )\n}\n\nexport default AdminPage\n","import { Select } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useHeartbeatQuery } from \"../generated/graphql\"\n\nexport const ClientListPage = () => {\n  const [{ data }] = useHeartbeatQuery()\n  const history = useHistory()\n  if (data && data.heartBeat) {\n    history.replace(\"/dashboard\")\n  }\n  return (\n    <Select onChange={() => {}}>\n      <option>client 1</option>\n    </Select>\n  )\n}\n","import React from \"react\"\nimport { Skeleton } from \"@chakra-ui/react\"\n\nconst Loading = ({\n  children,\n  loading,\n}: {\n  children?: string | React.ReactNode\n  loading: boolean\n}) => {\n  return <Skeleton isLoaded={!loading}>{children}</Skeleton>\n}\n\nexport default Loading\n","import { ButtonGroup } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"./formElements/DisplayMessage\"\nimport WrapperButton from \"./formElements/PrimaryButton\"\nimport { DefaultFun } from \"./types\"\nimport NeutralButton from \"./formElements/NeutralButton\"\n\ntype GroupProps = {\n  onYes: DefaultFun\n  onNo: DefaultFun\n  yesLbl?: string\n  noLbl?: string\n  yesProps?: any\n  noProps?: any\n}\n\nconst YesNoButtonGroup = ({\n  onYes,\n  onNo,\n  yesProps = {},\n  noProps = {},\n}: GroupProps) => {\n  return (\n    <ButtonGroup spacing=\"3\">\n      <NeutralButton onClick={onNo} {...noProps}>\n        <DisplayText id=\"app.buttons.cancel\" defaultMessage=\"cancel\" />\n      </NeutralButton>\n      <WrapperButton onClick={onYes} colorScheme=\"purple\" {...yesProps}>\n        <DisplayText id=\"app.buttons.continue\" defaultMessage=\"continue\" />\n      </WrapperButton>\n    </ButtonGroup>\n  )\n}\n\nexport default YesNoButtonGroup\n","import moment from \"moment\"\nimport { DATE_FORMAT } from \"../constants\"\n\nmoment.locale(\"es\", {\n  months: \"Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_de Diciembre\".split(\n    \"_\"\n  ),\n  monthsShort: \"Enero._Feb._Mar_Abr._May_Jun_Jul._Ago_Sept._Oct._Nov._Dec.\".split(\n    \"_\"\n  ),\n  weekdays: \"Domingo_Lunes_Martes_Miércoles_Jueves_Viernes_Sábado\".split(\"_\"),\n  weekdaysShort: \"Dom._Lun._Mar._Mier._Jue._Vier._Sab.\".split(\"_\"),\n  weekdaysMin: \"Do_Lu_Ma_Mi_Ju_Vi_Sa\".split(\"_\"),\n})\n\nexport const formatDate = (strDate: string) =>\n  moment(strDate).format(DATE_FORMAT)\n\nexport const formatAgeDate = (strDate: string) =>\n  moment(strDate).format(\"YYYY-MM-DDTHH:MM\")\n","import { useToast } from \"@chakra-ui/react\"\nimport { useParams, useHistory } from \"react-router-dom\"\n\nconst useValidUser = () => {\n  const { userId }: any = useParams()\n  const history = useHistory()\n  const toast = useToast()\n  if (userId) return userId\n  toast({\n    status: \"error\",\n    title: \"acceso invalido\",\n    duration: 4000,\n    onCloseComplete: () => history.push(\"/\"),\n  })\n  return null\n}\n\nexport default useValidUser\n","import {\n  Box,\n  Center,\n  Flex,\n  Heading,\n  Spinner,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\"\nimport React, { useState } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport Loading from \"../components/formElements/Loading\"\nimport Wrapper from \"../components/Wrapper\"\nimport YesNoButtonGroup from \"../components/YesNoButtonGroup\"\nimport {\n  useGetMeetingQuery,\n  useGetUserByIdQuery,\n  useConfirmReservationMutation,\n} from \"../generated/graphql\"\nimport { CONFIRM_RESERVATION } from \"../ui/formIds\"\nimport { formatDate } from \"../utils/formatDate\"\nimport useValidUser from \"../utils/validUserInfo\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\n// TODO: move msgs to lang file\nconst Confirm = () => {\n  const userId = useValidUser()\n  const history = useHistory()\n  const toast = useToast()\n  const meetingId = localStorage.getItem(\"meetingId\") || \"\"\n  const [, confirm] = useConfirmReservationMutation()\n  if (!meetingId) history.push(\"/\")\n\n  const [confirming, setConfirming] = useState(false)\n  const [\n    { data: userData, fetching: userFetching, error: userError },\n  ] = useGetUserByIdQuery({ variables: { userId } })\n  const [\n    { data: meetingData, fetching: meetingFetching, error: meetingError },\n  ] = useGetMeetingQuery({ variables: { id: meetingId } })\n\n  if (userFetching || meetingFetching) return <Spinner />\n  if (userError || !userData)\n    return <Box>No se pudo obtener la informacion del usuario</Box>\n  if (meetingError || !meetingData)\n    return <Box>No se pudo obtener la informacion de la reunion</Box>\n\n  const objUser = userData?.userById?.user\n  const meet = meetingData?.meeting?.meeting\n\n  const onConfirm = async () => {\n    setConfirming(true)\n    const res = await confirm({ userId, meetingId })\n    setConfirming(false)\n    if (res.data?.addReservation.errors)\n      return toast({\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        title: \"error al confirmar\",\n        description: res.data.addReservation.errors[0].message,\n      })\n    history.push(`/reservation/${res.data?.addReservation.reservation?.id}`)\n  }\n\n  return (\n    <Wrapper>\n      <Flex w=\"100%\" alignItems=\"center\" flexDir=\"column\">\n        <Heading id={CONFIRM_RESERVATION.meetTitle} mb={5} as=\"h3\">\n          {meet?.title}\n        </Heading>\n        <Flex flexDir=\"column\">\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.userTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.user\" defaultMessage=\"User\" />:\n              </Heading>{\" \"}\n              <Text id={CONFIRM_RESERVATION.fullnameUser} fontSize=\"md\" ml={15}>\n                {objUser?.firstName} {objUser?.lastName}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.documentTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.document\" defaultMessage=\"Document\" />:\n              </Heading>{\" \"}\n              <Text id={CONFIRM_RESERVATION.documentUser} fontSize=\"md\" ml={15}>\n                {objUser?.document}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.contactTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.contact\" defaultMessage=\"Contact\" />:\n              </Heading>{\" \"}\n              <Text id={CONFIRM_RESERVATION.contactUser} fontSize=\"md\" ml={15}>\n                {objUser?.phone}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.emailTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.email\" defaultMessage=\"Email\" />:\n              </Heading>{\" \"}\n              <Text id={CONFIRM_RESERVATION.emailUser} fontSize=\"md\" ml={15}>\n                {objUser?.email}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.dateTitle} as=\"h4\" size=\"md\">\n                <DisplayText id=\"form.date\" defaultMessage=\"Date\" />:\n              </Heading>\n              <Text id={CONFIRM_RESERVATION.dateUser} fontSize=\"md\" ml={15}>\n                {formatDate(meet?.meetingDate || \"\")}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading id={CONFIRM_RESERVATION.spotsTitle} as=\"h4\" size=\"md\">\n                <DisplayText\n                  id=\"form.SpaceAvailable\"\n                  defaultMessage=\"Space available\"\n                />\n                :\n              </Heading>\n              <Text id={CONFIRM_RESERVATION.spotsUser} fontSize=\"md\" ml={15}>\n                {meet?.spots}\n              </Text>\n            </Center>\n          </Flex>\n          <Box mt={3}>\n            <Text\n              id={CONFIRM_RESERVATION.confirmDates}\n              fontSize=\"md\"\n              style={{ color: \"#dc6d6d\" }}\n            >\n              <DisplayText id=\"app.confirm.notice\" />\n            </Text>\n          </Box>\n        </Flex>\n        <Flex mt={3}>\n          <Loading loading={confirming}>\n            <YesNoButtonGroup\n              onNo={() => history.replace(\"/\")}\n              onYes={onConfirm}\n              yesProps={{ disabled: confirming }}\n            />\n          </Loading>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Confirm\n","import {\n  Tabs,\n  TabList,\n  Tab,\n  TabPanels,\n  TabPanel,\n  useStyleConfig,\n} from \"@chakra-ui/react\"\nimport React from \"react\"\n\ntype TabsProps = {\n  tabs: { label: string; content: React.ReactNode }[]\n  isFitted?: boolean\n  isLazy: boolean\n  onChange?: (index: number) => void\n  defaultIndex?: number\n}\n\nexport default function TabsSection({\n  tabs,\n  defaultIndex = 0,\n  ...props\n}: TabsProps) {\n  const style = useStyleConfig(\"Tabs\", {})\n  return (\n    <Tabs\n      align=\"end\"\n      // variant=\"enclosed\"\n      {...props}\n      sx={style}\n      defaultIndex={defaultIndex}\n    >\n      <TabList>\n        {tabs.map((tab, index) => (\n          <Tab key={index}>{tab.label}</Tab>\n        ))}\n      </TabList>\n      <TabPanels>\n        {tabs.map((tab, index) => (\n          <TabPanel p={4} key={index}>\n            {tab.content}\n          </TabPanel>\n        ))}\n      </TabPanels>\n    </Tabs>\n  )\n}\n","import { useEffect } from \"react\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { useHeartbeatQuery } from \"../generated/graphql\"\n\nexport const useIsAuth = () => {\n  const [{ data, fetching }] = useHeartbeatQuery()\n  const history = useHistory()\n  const location = useLocation()\n  useEffect(() => {\n    if (!fetching && !data?.heartBeat)\n      history.replace(`/login?next=${location.pathname}`)\n  }, [fetching, data, history, location.pathname])\n}\n","import React from \"react\"\nimport { Flex, useStyleConfig } from \"@chakra-ui/react\"\nconst Card = (props: any) => {\n  const styles = useStyleConfig(\"Card\", props)\n  return (\n    <Flex sx={styles} {...props}>\n      <Flex flexWrap=\"wrap\" flexDir=\"column\" textAlign=\"left\">\n        {props.children}\n      </Flex>\n      {props.actions}\n    </Flex>\n  )\n}\nexport default Card\n","import React from \"react\"\nimport { IconButton, useStyleConfig } from \"@chakra-ui/react\"\n\nexport default function IconButtonWrapper({ iconType, ...props }: any) {\n  const style = useStyleConfig(iconType, props)\n  return <IconButton sx={style} {...props} />\n}\n","import { PlusSquareIcon } from \"@chakra-ui/icons\"\nimport React from \"react\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport Card from \"./Card\"\nimport IconButton from \"./formElements/IconButton\"\n\nexport default function AddCard(props: any) {\n  return (\n    <Card\n      border=\"dashed\"\n      className={MEETINGS_LIST.meetingCard}\n      actions={\n        <IconButton\n          height=\"100%\"\n          id={MEETINGS_LIST.btnNewMeeting}\n          aria-label=\"newMeeting\"\n          iconType=\"IconPlus\"\n          fontSize=\"50px\"\n          onClick={props?.onClick}\n          icon={<PlusSquareIcon />}\n        />\n      }\n    />\n  )\n}\n","export default function isEmpty(element: any) {\n  if (typeof element === \"object\") {\n    return Object.keys(element).length === 0\n  }\n  return Boolean(element)\n}\n","export const EMAIL_RGX = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i\nexport const ONLY_LETTERS_RGX = /^[a-zA-Z\\s]*$/\nexport const DOCUMENT_RGX = /^[0-9*]+$/\nexport const PWD_RGX = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/\n","import { AdminDataType } from \"../components/types\"\nimport { EMAIL_RGX, ONLY_LETTERS_RGX, PWD_RGX } from \"./fieldsRegex\"\n\nconst isAdminDataValid = ({\n  firstName,\n  lastName,\n  phone,\n  email,\n  username,\n  password,\n  repeatPassword,\n  formatMessage,\n}: AdminDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n  const IS_PWD = formatMessage({ id: \"form.pssCorrect\" })\n  const IS_PWDNOREPEAT = formatMessage({ id: \"app.login.pwdIncorret\" })\n\n  if (!firstName) {\n    errors.firstName = IS_REQUIRED\n  } else if (firstName.length < 4 || firstName.length > 15) {\n    errors.firstName = IS_INCORRECT\n  } else if (!ONLY_LETTERS_RGX.test(firstName)) {\n    errors.firstName = IS_INCORRECT\n  }\n\n  if (!lastName) {\n    errors.lastName = IS_REQUIRED\n  } else if (lastName.length < 3 || lastName.length > 15) {\n    errors.lastName = IS_INCORRECT\n  } else if (!ONLY_LETTERS_RGX.test(lastName)) {\n    errors.lastName = IS_INCORRECT\n  }\n\n  if (!phone) {\n    errors.phone = IS_REQUIRED\n  } else if (String(phone).length !== 7 && String(phone).length !== 10) {\n    errors.phone = IS_INCORRECT\n  }\n\n  if (!email) {\n    errors.email = IS_REQUIRED\n  } else if (!EMAIL_RGX.test(email)) {\n    errors.email = IS_INCORRECT\n  }\n\n  if (!username) {\n    errors.username = IS_REQUIRED\n  } else if (username.length < 5 || username.length > 10) {\n    errors.username = IS_INCORRECT\n  }\n\n  if (!password) {\n    errors.password = IS_REQUIRED\n  } else if (!PWD_RGX.test(password)) {\n    errors.password = IS_PWD\n  }\n\n  if (!repeatPassword) {\n    errors.repeatPassword = IS_REQUIRED\n  } else if (repeatPassword !== password) {\n    errors.repeatPassword = IS_PWDNOREPEAT\n  }\n\n  return errors\n}\n\nexport default isAdminDataValid\n","import { Box, Flex } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport Notify from \"../utils/notify\"\nimport { useAddAdminMutation } from \"../generated/graphql\"\nimport ModalActions from \"../components/ModalActions\"\nimport isAdminDataValid from \"../utils/isAdminDataValid\"\n\nconst AdminData = ({ children }: any) => {\n  const { formatMessage } = useIntl()\n  const [, saveAdmin] = useAddAdminMutation()\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    phone: 0,\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  }\n\n  const validateInputs = (values: any) => {\n    const errors = isAdminDataValid({ ...values, formatMessage })\n    return errors\n  }\n\n  const onSubmit = async ({ ...values }: any) => {\n    const { repeatPassword, ...data } = values\n    const res = await saveAdmin({ data: data })\n    if (res.data?.register.errors) {\n      return Notify({\n        title: formatMessage({ id: \"app.modalAdmin.dontSaveAdmin\" }),\n        type: \"error\",\n      })\n    }\n    return Notify({\n      title: formatMessage({ id: \"app.modalAdmin.saveAdmin\" }),\n      type: \"success\",\n    })\n  }\n\n  return (\n    <Box minW=\"300px\">\n      <Formik\n        enableReinitialize\n        initialValues={initialValues}\n        validate={validateInputs}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, setValues, values }) => (\n          <Form style={{ width: \"100%\" }}>\n            <Box>\n              <Flex flexDir=\"column\" w=\"100%\">\n                <FormikInput\n                  id=\"1\"\n                  label={formatMessage({ id: \"form.names\" })}\n                  name=\"firstName\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"2\"\n                  label={formatMessage({ id: \"form.lastNames\" })}\n                  name=\"lastName\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"3\"\n                  label={formatMessage({ id: \"form.phone\" })}\n                  type=\"number\"\n                  name=\"phone\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"4\"\n                  label={formatMessage({ id: \"form.email\" })}\n                  name=\"email\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"5\"\n                  label={formatMessage({ id: \"form.user\" })}\n                  name=\"username\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"6\"\n                  type=\"password\"\n                  label={formatMessage({ id: \"form.pwd\" })}\n                  name=\"password\"\n                  disabled={false}\n                  required\n                />\n                <FormikInput\n                  id=\"7\"\n                  type=\"password\"\n                  label={formatMessage({ id: \"form.Repeatpwd\" })}\n                  name=\"repeatPassword\"\n                  disabled={false}\n                  required\n                />\n                <ModalActions>\n                  {children}\n                  <PrimaryButton type=\"submit\" isLoading={isSubmitting}>\n                    <DisplayText id=\"app.buttons.save\" defaultMessage=\"save\" />\n                  </PrimaryButton>\n                </ModalActions>\n              </Flex>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default AdminData\n","import React from \"react\"\nimport { Box } from \"@chakra-ui/react\"\n\nconst BoldText = (props: any) => (\n  <Box as=\"h3\" fontWeight=\"bold\">\n    {props.children}\n  </Box>\n)\nexport default BoldText\n","import React from \"react\"\nimport { Text as ChText } from \"@chakra-ui/react\"\nconst Text = (props: any) => (\n  <ChText size=\"md\" {...props} title={props.children}>\n    {props.children}\n  </ChText>\n)\nexport default Text\n","import React, { ReactNode } from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport BoldText from \"./formElements/BoldText\"\nimport Text from \"./formElements/Text\"\n\nconst DisplayPair = ({\n  bold,\n  text,\n}: {\n  bold: ReactNode | string\n  text: string\n}) => {\n  return (\n    <Flex flexDir=\"column\" justifyContent=\"space-between\" maxWidth=\"90%\">\n      <BoldText className={MEETINGS_LIST.spots}>{bold}</BoldText>\n      <Text isTruncated>{text}</Text>\n    </Flex>\n  )\n}\n\nexport default DisplayPair\n","import { Box } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport Card from \"../components/Card\"\nimport DisplayPair from \"../components/DisplayPairText\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport Heading from \"../components/formElements/Heading\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\n\ntype MeetingProps = {\n  id: string | number | undefined\n  firstName: string\n  lastName: string\n  phone: string\n  email: string\n  username: string\n  children: any\n  bg?: string\n}\n\nconst PlaceCard = ({\n  id,\n  firstName,\n  lastName,\n  phone,\n  email,\n  children,\n  username,\n}: MeetingProps) => {\n  return (\n    <Card\n      key={id}\n      className={MEETINGS_LIST.meetingCard}\n      actions={<Box alignSelf=\"flex-end\">{children}</Box>}\n    >\n      <Heading mb={3} className={MEETINGS_LIST.meetingTitle}>\n        {firstName} {lastName}\n      </Heading>\n      <DisplayPair\n        bold={<DisplayText id=\"form.phone\" defaultMessage=\"Phone\" />}\n        text={phone}\n      />\n      <DisplayPair\n        bold={<DisplayText id=\"form.email\" defaultMessage=\"Email\" />}\n        text={email}\n      />\n      <DisplayPair\n        bold={<DisplayText id=\"form.user\" defaultMessage=\"User\" />}\n        text={username}\n      />\n    </Card>\n  )\n}\n\nexport default PlaceCard\n","import React from \"react\"\nimport { Flex } from \"@chakra-ui/react\"\n\nconst DefaultContainer = ({ children }: { children: React.ReactNode }) => (\n  <Flex flex={1} justifyContent=\"center\" flexWrap=\"wrap\">\n    {children}\n  </Flex>\n)\n\nexport default DefaultContainer\n","import React, { useState } from \"react\"\nimport AddCard from \"../../../components/AddCard\"\nimport ModalWrapper from \"../../../components/ModalWrapper\"\nimport isEmpty from \"../../../utils/isEmpty\"\nimport { useIntl } from \"react-intl\"\nimport AdminData from \"../../../container/AdminData\"\nimport NeutralButton from \"../../../components/formElements/NeutralButton\"\nimport DisplayText from \"../../../components/formElements/DisplayMessage\"\nimport { useGetAdminDataQuery } from \"../../../generated/graphql\"\nimport Loading from \"../../../components/formElements/Loading\"\nimport ShouldRender from \"../../../components/ShouldRender\"\nimport AdminCard from \"../../../container/AdminCard\"\nimport { v4 } from \"uuid\"\nimport DefaultContainer from \"../../../components/DefaultContainer\"\n\nconst Admins = ({ adminId }: any) => {\n  const { formatMessage } = useIntl()\n  const [, setPlace] = useState({})\n  const [newAdmin, setnewAdmin] = useState(false)\n\n  const [{ data, fetching }] = useGetAdminDataQuery()\n\n  const onCloseFormAdmin = () => {\n    setnewAdmin(false)\n  }\n\n  return (\n    <>\n      <DefaultContainer>\n        <Loading loading={fetching}>\n          <ShouldRender if={data && data?.getAdminsData.length < 2}>\n            <AddCard\n              onClick={() => {\n                setPlace({})\n                setnewAdmin(true)\n              }}\n            />\n          </ShouldRender>\n        </Loading>\n        <ShouldRender if={data && data.getAdminsData}>\n          {data?.getAdminsData.map(\n            ({\n              id,\n              firstName,\n              lastName,\n              phone,\n              email,\n              children,\n              username,\n            }: any) => (\n              <AdminCard\n                key={v4()}\n                id={id}\n                firstName={firstName}\n                lastName={lastName}\n                phone={phone}\n                email={email}\n                children={children}\n                username={username}\n              />\n            )\n          )}\n        </ShouldRender>\n      </DefaultContainer>\n      <ModalWrapper\n        titulo={\n          isEmpty(adminId)\n            ? formatMessage({ id: \"app.modalAdmin.modifyAdmin\" })\n            : formatMessage({ id: \"app.modalAdmin.newAdmin\" })\n        }\n        contenido={\n          <AdminData adminId={adminId}>\n            <NeutralButton onClick={onCloseFormAdmin} mr={3}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </NeutralButton>\n          </AdminData>\n        }\n        isOpen={newAdmin}\n        onClose={onCloseFormAdmin}\n      />\n    </>\n  )\n}\n\nexport default Admins\n","import React from \"react\"\nimport { Button } from \"@chakra-ui/react\"\nimport { BTN_PROPS } from \"../../constants\"\n\nconst CancelButton = ({ children, ...rest }: any) => (\n  <Button\n    size={BTN_PROPS.size}\n    w={BTN_PROPS.width}\n    h={BTN_PROPS.height}\n    p={1}\n    style={{\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    }}\n    colorScheme=\"red\"\n    variant=\"outline\"\n    {...rest}\n  >\n    {children}\n  </Button>\n)\n\nexport default CancelButton\n","import { Box } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport Card from \"../components/Card\"\nimport DisplayPair from \"../components/DisplayPairText\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport Heading from \"../components/formElements/Heading\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\n\ntype MeetingProps = {\n  id: string | number | undefined\n  name: string\n  address: string\n  children: any\n  bg?: string\n}\n\nconst PlaceCard = ({ id, name, address, children, bg = \"\" }: MeetingProps) => {\n  return (\n    <Card\n      key={id}\n      className={MEETINGS_LIST.meetingCard}\n      actions={<Box alignSelf=\"flex-end\">{children}</Box>}\n    >\n      <Heading mb={3} className={MEETINGS_LIST.meetingTitle}>\n        {name}\n      </Heading>\n      <DisplayPair\n        bold={<DisplayText id=\"form.address\" defaultMessage=\"address\" />}\n        text={address}\n      />\n    </Card>\n  )\n}\n\nexport default PlaceCard\n","import React from \"react\"\nimport { SelectControl } from \"formik-chakra-ui\"\nimport { FormLabel, FormControl } from \"@chakra-ui/react\"\n\nconst Select = ({\n  options,\n  id,\n  label,\n  name,\n  placeholder = \"select\",\n  ...props\n}: any) => {\n  return (\n    <FormControl mt={2}>\n      <FormLabel id={`lbl-${id}`} htmlFor={id} {...props}>\n        {label}\n      </FormLabel>\n      <SelectControl id={id} name={name} selectProps={{ placeholder }} m={0}>\n        {options?.map(({ id, name }: any) => (\n          <option key={id} value={id}>\n            {name}\n          </option>\n        ))}\n      </SelectControl>\n    </FormControl>\n  )\n}\n\nexport default Select\n","export const jsonAddres = ({ name, address, isActive, ...values }: any) => {\n  const jsonAddress = JSON.stringify(values)\n  return jsonAddress\n}\n\nexport const formatAddress = ({ id, name, isActive, ...values }: any) => {\n  const finalAddress = `${values.way || \"\"}  ${values.firstWayNumber || \"\"} ${\n    values.firstLetter || \"\"\n  } ${values.secondLetter || \"\"} # ${values.secondWayNumber || \"\"} ${\n    values.cardinal || \"-\"\n  } ${values.thirdWayNumber || \"\"}`\n\n  return finalAddress\n}\n","import { PlaceDataType } from \"../components/types\"\n\nconst isPlaceDataValid = ({\n  name,\n  way,\n  firstWayNumber,\n  secondWayNumber,\n  thirdWayNumber,\n  address,\n  formatMessage,\n}: PlaceDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n\n  if (!name) {\n    errors.name = IS_REQUIRED\n  } else if (name.length < 3 || name.length > 50) {\n    errors.name = IS_INCORRECT\n  }\n\n  if (!way) {\n    errors.way = IS_REQUIRED\n  }\n\n  if (!firstWayNumber) {\n    errors.firstWayNumber = IS_REQUIRED\n  } else if (String(firstWayNumber).length > 3) {\n    errors.firstWayNumber = IS_INCORRECT\n  }\n\n  if (!secondWayNumber) {\n    errors.secondWayNumber = IS_REQUIRED\n  } else if (String(secondWayNumber).length > 3) {\n    errors.secondWayNumber = IS_INCORRECT\n  }\n\n  if (!thirdWayNumber) {\n    errors.thirdWayNumber = IS_REQUIRED\n  } else if (String(thirdWayNumber).length > 3) {\n    errors.thirdWayNumber = IS_INCORRECT\n  }\n\n  if (!address) {\n    errors.address = IS_REQUIRED\n  } else if (address.length < 3 || address.length > 50) {\n    errors.address = IS_INCORRECT\n  }\n\n  return errors\n}\n\nexport default isPlaceDataValid\n","import { Box, Flex, Radio } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport { RadioGroupControl } from \"formik-chakra-ui\"\nimport React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport Select from \"../components/formElements/Select\"\nimport ModalActions from \"../components/ModalActions\"\nimport { ADDRESS_VALUES } from \"../constants/index\"\nimport { useAddPlaceMutation } from \"../generated/graphql\"\nimport { formatAddress, jsonAddres } from \"../utils/formatAddress\"\nimport isEmpty from \"../utils/isEmpty\"\nimport isPlaceDataValid from \"../utils/isPlaceDataValid\"\nimport Notify from \"../utils/notify\"\n\nconst PlaceData = ({ children, place, onDone }: any) => {\n  const { formatMessage } = useIntl()\n  const [, addPlaceMutation] = useAddPlaceMutation()\n\n  if (!isEmpty(place)) {\n    place = Object.assign(place, JSON.parse(place.jsonAddress))\n  }\n\n  const initialValues = isEmpty(place)\n    ? {\n        id: \"\",\n        name: \"\",\n        address: \"\",\n        isActive: \"true\",\n      }\n    : {\n        ...place,\n      }\n\n  const validateInputs = (values: any) => {\n    const errors = isPlaceDataValid({ ...values, formatMessage })\n    values.address = formatAddress(values)\n    return errors\n  }\n\n  const onSubmit = async ({ id, ...values }: any) => {\n    values.jsonAddress = jsonAddres(values)\n    const {\n      cardinal,\n      firstLetter,\n      firstWayNumber,\n      secondLetter,\n      secondWayNumber,\n      thirdWayNumber,\n      way,\n      ...valuesAddress\n    } = values\n\n    const place = await addPlaceMutation({ placeId: id, data: valuesAddress })\n    if (place.error) {\n      return Notify({\n        title: formatMessage({ id: \"app.notification.Couldn'tCreatePlace\" }),\n        type: \"error\",\n      })\n    }\n    if (typeof onDone === \"function\") onDone(true)\n    return Notify({\n      title: formatMessage({ id: \"app.notification.placeCreatedCorrectly\" }),\n      type: \"success\",\n    })\n  }\n\n  return (\n    <Box minW=\"300px\">\n      <Formik\n        enableReinitialize\n        initialValues={initialValues}\n        validate={validateInputs}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, setValues, values }) => (\n          <Form style={{ width: \"100%\" }}>\n            <Box>\n              <Flex flexDir=\"column\" w=\"100%\">\n                <FormikInput\n                  id=\"1\"\n                  label={formatMessage({ id: \"form.names\" })}\n                  name=\"name\"\n                  disabled={false}\n                  required\n                />\n                <Flex>\n                  <Box w=\"100%\" mr={2}>\n                    <Select\n                      id=\"way\"\n                      label={formatMessage({ id: \"form.way\" })}\n                      name=\"way\"\n                      placeholder=\" \"\n                      options={ADDRESS_VALUES?.way}\n                    />\n                  </Box>\n                  <Box w=\"100%\" mr={2}>\n                    <FormikInput\n                      id=\"firstWayNumber\"\n                      label={formatMessage({ id: \"form.number\" })}\n                      name=\"firstWayNumber\"\n                      type=\"number\"\n                      disabled={false}\n                      required\n                    />\n                  </Box>\n                  <Box w=\"50%\" mr={2}>\n                    <Select\n                      id=\"firstLetter\"\n                      label=\"A\"\n                      name=\"firstLetter\"\n                      placeholder=\" \"\n                      options={ADDRESS_VALUES?.letter}\n                    />\n                  </Box>\n                  <Box w=\"50%\">\n                    <Select\n                      id=\"secondLetter\"\n                      label=\"B\"\n                      name=\"secondLetter\"\n                      placeholder=\" \"\n                      options={ADDRESS_VALUES?.letter}\n                    />\n                  </Box>\n                </Flex>\n                <Flex>\n                  <Box w=\"100%\" mr={2}>\n                    <FormikInput\n                      id=\"secondWayNumber\"\n                      type=\"number\"\n                      label={formatMessage({ id: \"form.number\" })}\n                      name=\"secondWayNumber\"\n                      disabled={false}\n                      required\n                    />\n                  </Box>\n                  <Box w=\"100%\" mr={2}>\n                    <Select\n                      id=\"cardinal\"\n                      label=\"Cardinal\"\n                      name=\"cardinal\"\n                      options={ADDRESS_VALUES?.cardinal}\n                    />\n                  </Box>\n                  <Box w=\"100%\">\n                    <FormikInput\n                      id=\"thirdWayNumber\"\n                      type=\"number\"\n                      label={formatMessage({ id: \"form.number\" })}\n                      name=\"thirdWayNumber\"\n                      disabled={false}\n                    />\n                  </Box>\n                </Flex>\n                <FormikInput\n                  id=\"2\"\n                  label={formatMessage({ id: \"form.finalAddress\" })}\n                  name=\"address\"\n                  disabled={true}\n                  required\n                />\n                <Box mt={3}>\n                  <RadioGroupControl\n                    label={formatMessage({ id: \"app.label.state\" })}\n                    name=\"isActive\"\n                  >\n                    <Radio value=\"false\">\n                      <DisplayText\n                        id=\"form.inactivePlace\"\n                        defaultMessage=\"Inactive\"\n                      />\n                    </Radio>\n                    <Radio value=\"true\">\n                      <DisplayText\n                        id=\"form.activePlace\"\n                        defaultMessage=\"Active\"\n                      />\n                    </Radio>\n                  </RadioGroupControl>\n                </Box>\n                <ModalActions>\n                  {children}\n                  <PrimaryButton type=\"submit\" isLoading={isSubmitting}>\n                    <DisplayText id=\"app.buttons.save\" defaultMessage=\"save\" />\n                  </PrimaryButton>\n                </ModalActions>\n              </Flex>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default PlaceData\n","import { DeleteIcon, EditIcon } from \"@chakra-ui/icons\"\nimport { Text } from \"@chakra-ui/react\"\nimport React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { v4 } from \"uuid\"\nimport AddCard from \"../../../components/AddCard\"\nimport DefaultContainer from \"../../../components/DefaultContainer\"\nimport CancelButton from \"../../../components/formElements/CancelButton\"\nimport DisplayText from \"../../../components/formElements/DisplayMessage\"\nimport IconButton from \"../../../components/formElements/IconButton\"\nimport Loading from \"../../../components/formElements/Loading\"\nimport NeutralButton from \"../../../components/formElements/NeutralButton\"\nimport PrimaryButton from \"../../../components/formElements/PrimaryButton\"\nimport ModalWrapper from \"../../../components/ModalWrapper\"\nimport ShouldRender from \"../../../components/ShouldRender\"\nimport { ACTIVE_CARD_COLOR, INACTIVE_CARD_COLOR } from \"../../../constants\"\nimport PlaceCard from \"../../../container/PlaceCard\"\nimport PlaceData from \"../../../container/PlaceData\"\nimport {\n  useDeletePlaceMutation,\n  useGetPlacesQuery,\n} from \"../../../generated/graphql\"\nimport isEmpty from \"../../../utils/isEmpty\"\nimport Notify from \"../../../utils/notify\"\n\nexport default function Locations() {\n  const [newPlace, setnewPlace] = useState(false)\n  const [deletePlaceModal, setDeletePlaceModal] = useState(false)\n  const [placeData, setPlace] = useState({})\n  const [{ data, fetching }, fetchAgain] = useGetPlacesQuery()\n  const [, idPlaceDelete] = useDeletePlaceMutation()\n  const { formatMessage } = useIntl()\n\n  const onCloseFormPlace = () => {\n    setnewPlace(false)\n  }\n\n  const onCloseDeletePlace = (addedNew: boolean | undefined) => {\n    setDeletePlaceModal(false)\n    if (addedNew) fetchAgain()\n  }\n\n  const deletePlace = async (placeId: any) => {\n    if (!placeId) return\n    const res = await idPlaceDelete({ placeId: placeId })\n\n    if (res.data?.deletePlace.errors || res.error) {\n      setDeletePlaceModal(false)\n      return Notify({\n        title: formatMessage({ id: \"app.notification.cantDeletePlace\" }),\n        type: \"error\",\n      })\n    }\n    setDeletePlaceModal(false)\n    return Notify({\n      title: formatMessage({ id: \"app.notification.deletePlaceOk\" }),\n      type: \"success\",\n    })\n  }\n\n  return (\n    <>\n      <DefaultContainer>\n        <Loading loading={fetching}>\n          <AddCard\n            onClick={() => {\n              setPlace({})\n              setnewPlace(true)\n            }}\n          />\n        </Loading>\n        <ShouldRender if={data && data.getUserPlaces}>\n          {data?.getUserPlaces.place?.map(({ __typename, ...place }: any) => (\n            <PlaceCard\n              key={v4()}\n              {...place}\n              bg={\n                String(place.isActive) === \"true\"\n                  ? ACTIVE_CARD_COLOR\n                  : INACTIVE_CARD_COLOR\n              }\n            >\n              <IconButton\n                onClick={() => {\n                  setDeletePlaceModal(true)\n                  setPlace(place.id)\n                }}\n                aria-label=\"eliminar\"\n                iconType=\"IconDelete\"\n                mr={2}\n                icon={<DeleteIcon />}\n              />\n              <IconButton\n                onClick={() => {\n                  setPlace(place)\n                  setnewPlace(true)\n                }}\n                iconType=\"IconEdit\"\n                aria-label=\"editar\"\n                icon={<EditIcon />}\n              />\n            </PlaceCard>\n          ))}\n        </ShouldRender>\n      </DefaultContainer>\n      <ModalWrapper\n        titulo={\n          isEmpty(placeData)\n            ? formatMessage({ id: \"app.modalLocation.newPlace\" })\n            : formatMessage({ id: \"app.modalLocation.modifyPlace\" })\n        }\n        contenido={\n          <PlaceData place={placeData} onDone={onCloseFormPlace}>\n            <NeutralButton onClick={onCloseFormPlace} mr={3}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </NeutralButton>\n          </PlaceData>\n        }\n        isOpen={newPlace}\n        onClose={onCloseFormPlace}\n      />\n      <ModalWrapper\n        titulo={formatMessage({ id: \"app.modalLocation.titleDeletePlace\" })}\n        contenido={\n          <Text>\n            <DisplayText id=\"app.modalLocation.deletePlace\" />\n          </Text>\n        }\n        actions={\n          <>\n            <CancelButton\n              onClick={() => {\n                deletePlace(placeData)\n              }}\n            >\n              <DisplayText id=\"app.buttons.delete\" defaultMessage=\"delete\" />\n            </CancelButton>\n            <PrimaryButton onClick={onCloseDeletePlace}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </PrimaryButton>\n          </>\n        }\n        isOpen={deletePlaceModal}\n        onClose={onCloseDeletePlace}\n      />\n    </>\n  )\n}\n","import moment from \"moment\"\nimport { MeetingDataType } from \"../components/types\"\n\nconst isMeetingDataValid = ({\n  title,\n  meetingDate,\n  spots,\n  place,\n  isActive,\n  formatMessage,\n}: MeetingDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n\n  if (!title) {\n    errors.title = IS_REQUIRED\n  } else if (title.length < 2 || title.length > 30) {\n    errors.title = IS_INCORRECT\n  }\n\n  if (!meetingDate) {\n    errors.meetingDate = IS_REQUIRED\n  } else if (meetingDate < moment().format(\"yyyy-MM-DDThh:mm\")) {\n    errors.meetingDate = IS_INCORRECT\n  }\n\n  if (!place) {\n    errors.place = IS_REQUIRED\n  }\n\n  if (!spots) {\n    errors.spots = IS_REQUIRED\n  } else if (spots < 1) {\n    errors.spots = IS_INCORRECT\n  }\n\n  if (!isActive) {\n    errors.isActive = IS_REQUIRED\n  }\n\n  return errors\n}\n\nexport default isMeetingDataValid\n","import { Box, Flex, Text, Radio, Spinner } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport React from \"react\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport Select from \"../components/formElements/Select\"\nimport {\n  useSaveMeetingMutation,\n  useGetPlacesQuery,\n  MeetingInput,\n} from \"../generated/graphql\"\nimport { useIntl } from \"react-intl\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport moment from \"moment\"\nimport isEmpty from \"../utils/isEmpty\"\nimport { formatAgeDate } from \"../utils/formatDate\"\nimport { RadioGroupControl } from \"formik-chakra-ui\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport Notify from \"../utils/notify\"\nimport ModalActions from \"../components/ModalActions\"\nimport isMeetingDataValid from \"../utils/isMeetingDataValid\"\n\nconst MeetingDataForm = ({ children, meeting, onChange }: any) => {\n  const [, saveMeeting] = useSaveMeetingMutation()\n  const { formatMessage } = useIntl()\n  const initialValues = isEmpty(meeting)\n    ? {\n        meetingId: \"\",\n        title: \"\",\n        meetingDate: \"\",\n        spots: 0,\n        place: \"\",\n        isActive: \"true\",\n      }\n    : {\n        ...meeting,\n        meetingId: meeting.id,\n        meetingDate: formatAgeDate(meeting.meetingDate),\n        place: meeting.place.id,\n      }\n\n  const validateInputs = (values: any) => {\n    const errors = isMeetingDataValid({ ...values, formatMessage })\n\n    return errors\n  }\n\n  const [{ data: placeData, fetching: placeLoading }] = useGetPlacesQuery()\n\n  const onSubmit = async ({ ...values }) => {\n    const { meetingId, createdAt, ...data } = values\n    const saveMeetingResponse = await saveMeeting({\n      meetingId,\n      data: data as MeetingInput,\n    })\n    if (saveMeetingResponse.error) {\n      return Notify({\n        title: formatMessage({ id: \"app.notification.saveMeetingError\" }),\n        type: \"error\",\n      })\n    }\n    if (typeof onChange === \"function\") onChange()\n    //window.location.reload()\n    Notify({\n      title: formatMessage({ id: \"app.notification.saveMeetingOk\" }),\n      type: \"success\",\n    })\n  }\n\n  if (placeLoading) return <Spinner />\n  return (\n    <Box minW=\"300px\">\n      <Formik\n        enableReinitialize\n        initialValues={initialValues}\n        validate={validateInputs}\n        onSubmit={onSubmit}\n      >\n        {({ isSubmitting, setValues, values }) => (\n          <Form style={{ width: \"100%\" }}>\n            <Box>\n              <Flex flexDir=\"column\" w=\"100%\">\n                <FormikInput\n                  id=\"1\"\n                  label={formatMessage({ id: \"form.title\" })}\n                  name=\"title\"\n                  disabled={false}\n                  required\n                />\n                <ShouldRender if={placeData?.getUserPlaces.place}>\n                  <Select\n                    id=\"selec\"\n                    label={formatMessage({ id: \"form.place\" })}\n                    name=\"place\"\n                    placeholder={formatMessage({ id: \"form.place\" })}\n                    options={placeData?.getUserPlaces.place?.filter(\n                      (i) => String(i.isActive) === \"true\"\n                    )}\n                  />\n                </ShouldRender>\n                <FormikInput\n                  id=\"3\"\n                  label={formatMessage({ id: \"form.date\" })}\n                  name=\"meetingDate\"\n                  type=\"datetime-local\"\n                  min={moment().format(\"yyyy-MM-DDThh:mm\")}\n                  required\n                />\n                <FormikInput\n                  type=\"number\"\n                  id=\"4\"\n                  label={formatMessage({ id: \"form.spots\" })}\n                  name=\"spots\"\n                  disabled={false}\n                  required\n                />\n                <Box mt={3}>\n                  <RadioGroupControl\n                    label={formatMessage({ id: \"app.label.state\" })}\n                    name=\"isActive\"\n                  >\n                    <Radio value=\"false\">\n                      <DisplayText\n                        id=\"form.inactive\"\n                        defaultMessage=\"Inactive\"\n                      />\n                    </Radio>\n                    <Radio value=\"true\">\n                      <DisplayText id=\"form.active\" defaultMessage=\"Active\" />\n                    </Radio>\n                  </RadioGroupControl>\n                  <ShouldRender if={String(values.isActive) === \"true\"}>\n                    <Text\n                      color=\"tomato\"\n                      as=\"i\"\n                      fontSize=\"md\"\n                      noOfLines={2}\n                      style={{ paddingTop: \"3px\", paddingBottom: \"10px\" }}\n                    >\n                      <DisplayText\n                        id=\"app.meetingForm.activeMessage\"\n                        defaultMessage=\"When activating the meeting, users will be able to reserve quotas Meetings with reservations cannot be modified / deleted\"\n                      />\n                    </Text>\n                  </ShouldRender>\n                </Box>\n                <ModalActions>\n                  {children}\n                  <PrimaryButton type=\"submit\" isLoading={isSubmitting}>\n                    <DisplayText id=\"app.buttons.save\" defaultMessage=\"save\" />\n                  </PrimaryButton>\n                </ModalActions>\n              </Flex>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default MeetingDataForm\n","import { Box, Flex } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport Card from \"../components/Card\"\nimport DisplayPair from \"../components/DisplayPairText\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport Heading from \"../components/formElements/Heading\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport { formatDate } from \"../utils/formatDate\"\n\ntype MeetingProps = {\n  spots: number\n  id: string | number | undefined\n  title: string\n  meetingDate: string\n  children: any\n  bg?: string\n}\n\nconst MeetingCard = ({\n  spots,\n  id,\n  title,\n  meetingDate,\n  children,\n  bg,\n}: MeetingProps) => {\n  return (\n    <Card\n      id={id}\n      className={MEETINGS_LIST.meetingCard}\n      actions={\n        <ShouldRender if={String(spots) !== \"0\"}>\n          <Box alignSelf=\"flex-end\">{children}</Box>\n        </ShouldRender>\n      }\n    >\n      <Flex justifyContent=\"left\" flexWrap=\"wrap\" flexDir=\"column\">\n        <Heading mb={3} className={MEETINGS_LIST.meetingTitle}>\n          {title}\n        </Heading>\n        <DisplayPair\n          bold={<DisplayText id=\"app.label.date\" defaultMessage=\"date\" />}\n          text={formatDate(meetingDate)}\n        />\n        <DisplayPair\n          bold={<DisplayText id=\"app.label.spots\" defaultMessage=\"spots\" />}\n          text={String(spots)}\n        />\n      </Flex>\n    </Card>\n  )\n}\n\nexport default MeetingCard\n","import React, { useState } from \"react\"\nimport { Flex, Text } from \"@chakra-ui/react\"\nimport ShouldRender from \"../../../components/ShouldRender\"\nimport ModalWrapper from \"../../../components/ModalWrapper\"\nimport MeetingDataForm from \"../../../container/MeetingData\"\nimport MeetingCard from \"../../../container/MeetingCard\"\nimport PrimaryButton from \"../../../components/formElements/PrimaryButton\"\nimport AddCard from \"../../../components/AddCard\"\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\"\nimport CancelButton from \"../../../components/formElements/CancelButton\"\nimport isEmpty from \"../../../utils/isEmpty\"\nimport NeutralButton from \"../../../components/formElements/NeutralButton\"\nimport DisplayText from \"../../../components/formElements/DisplayMessage\"\nimport Loading from \"../../../components/formElements/Loading\"\nimport IconButton from \"../../../components/formElements/IconButton\"\nimport {\n  useMeetingDeleteSubscription,\n  useMeetingsQuery,\n} from \"../../../generated/graphql\"\nimport { useDeleteMeetMutation } from \"../../../generated/graphql\"\nimport Notify from \"../../../utils/notify\"\nimport { useIntl } from \"react-intl\"\nimport { ACTIVE_CARD_COLOR, INACTIVE_CARD_COLOR } from \"../../../constants\"\nimport { v4 } from \"uuid\"\n\nexport default function Meetings() {\n  const { formatMessage } = useIntl()\n  const [variables, setVariables] = useState({\n    limit: 15,\n    cursor: null as null | string,\n  })\n  const [{ data, fetching }] = useMeetingsQuery({ variables })\n  const [newMeeting, setNewMeeting] = useState(false)\n  const [deleteMeeting, setDeleteMeeting] = useState(false)\n  const [meetingData, setMeeting] = useState({})\n  const [, getIdMeetMutation] = useDeleteMeetMutation()\n\n  useMeetingDeleteSubscription()\n\n  const onCloseFormMeeting = () => {\n    setNewMeeting(false)\n  }\n\n  const onCloseDeleteMeeting = () => {\n    setDeleteMeeting(false)\n  }\n\n  const deleteThisMeeting = async (meeting: any) => {\n    if (isEmpty(meeting)) return\n    const res = await getIdMeetMutation({ meetingId: meeting.id })\n    if (res.error) {\n      setDeleteMeeting(false)\n      return Notify({\n        title: res.error.message,\n        type: \"error\",\n      })\n    }\n    if (res.data?.deleteMeeting.errors) {\n      setDeleteMeeting(false)\n      return Notify({\n        title: formatMessage({ id: \"app.notification.cantDeleteMeet\" }),\n        type: \"error\",\n      })\n    }\n    setDeleteMeeting(false)\n\n    return Notify({\n      title: formatMessage({ id: \"app.notification.deleteMeet\" }),\n      type: \"success\",\n    })\n  }\n\n  return (\n    <>\n      <Flex justifyContent=\"center\" flexWrap=\"wrap\">\n        <Loading loading={fetching}>\n          <AddCard\n            onClick={() => {\n              setMeeting({})\n              setNewMeeting(true)\n            }}\n          />\n        </Loading>\n        <ShouldRender if={data && data.meetings.meetings}>\n          {data?.meetings.meetings.map(({ __typename, ...reu }) => (\n            <MeetingCard\n              {...reu}\n              bg={\n                reu.isActive === \"false\"\n                  ? INACTIVE_CARD_COLOR\n                  : ACTIVE_CARD_COLOR\n              }\n              key={v4()}\n            >\n              <IconButton\n                onClick={() => {\n                  setMeeting(reu)\n                  setDeleteMeeting(true)\n                }}\n                mr={2}\n                aria-label=\"eliminar\"\n                iconType=\"IconDelete\"\n                icon={<DeleteIcon />}\n              />\n              <IconButton\n                onClick={() => {\n                  setMeeting(reu)\n                  setNewMeeting(true)\n                }}\n                aria-label=\"editar\"\n                iconType=\"IconEdit\"\n                icon={<EditIcon />}\n              />\n            </MeetingCard>\n          ))}\n        </ShouldRender>\n        {data?.meetings.hasMore ? (\n          <Flex>\n            <PrimaryButton\n              isLoading={fetching}\n              mt={8}\n              onClick={() => {\n                setVariables({\n                  limit: variables.limit,\n                  cursor:\n                    data.meetings.meetings[data.meetings.meetings.length - 1]\n                      .createdAt,\n                })\n              }}\n            >\n              load more\n            </PrimaryButton>\n          </Flex>\n        ) : null}\n      </Flex>\n      <ModalWrapper\n        titulo={formatMessage({ id: \"app.meetingForm.deleteMeeting\" })}\n        contenido={\n          <Text>\n            <DisplayText\n              id=\"app.meetingForm.deleteMessage\"\n              defaultMessage=\"Are you sure you want to delete this meeting?\"\n            />\n          </Text>\n        }\n        actions={\n          <>\n            <CancelButton\n              onClick={() => {\n                deleteThisMeeting(meetingData)\n              }}\n            >\n              <DisplayText id=\"app.buttons.delete\" defaultMessage=\"delete\" />\n            </CancelButton>\n            <PrimaryButton onClick={onCloseDeleteMeeting}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </PrimaryButton>\n          </>\n        }\n        isOpen={deleteMeeting}\n        onClose={onCloseDeleteMeeting}\n      />\n      <ModalWrapper\n        titulo={\n          isEmpty(meetingData)\n            ? formatMessage({ id: \"app.meetingForm.newMeeting\" })\n            : formatMessage({ id: \"app.meetingForm.updateMeeting\" })\n        }\n        contenido={\n          <MeetingDataForm meeting={meetingData} onChange={onCloseFormMeeting}>\n            <NeutralButton onClick={onCloseFormMeeting} mr={3}>\n              <DisplayText id=\"app.buttons.back\" defaultMessage=\"back\" />\n            </NeutralButton>\n          </MeetingDataForm>\n        }\n        isOpen={newMeeting}\n        onClose={onCloseFormMeeting}\n      />\n    </>\n  )\n}\n","import { Spinner } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"../../components/formElements/DisplayMessage\"\nimport Heading from \"../../components/formElements/Heading\"\nimport { useHeartbeatQuery } from \"../../generated/graphql\"\nimport { MEETINGS_LIST } from \"../../ui/formIds\"\n\nexport default function DashboardTitle() {\n  const [{ data, fetching }] = useHeartbeatQuery()\n  if (fetching) return <Spinner />\n  return (\n    <Heading id={MEETINGS_LIST.title} fontSize=\"3xl\">\n      <DisplayText id=\"app.dashboard.title\" defaultMessage=\"hello\" />{\" \"}\n      {data?.heartBeat?.firstName}!\n    </Heading>\n  )\n}\n","import { Box } from \"@chakra-ui/react\"\nimport queryString from \"query-string\"\nimport React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport TabsSection from \"../../components/formElements/Tabs\"\nimport { useIsAuth } from \"../../hooks/useIsAuth\"\nimport Layout from \"../../layouts\"\nimport Admins from \"./tabs/Admins\"\nimport Locations from \"./tabs/Locations\"\nimport Meetings from \"./tabs/Meetings\"\nimport DashboardTitle from \"./Title\"\n\nexport default function Dashboard() {\n  useIsAuth()\n  const history = useHistory()\n  const location = useLocation()\n  const { formatMessage } = useIntl()\n  const { tab = 0 } = queryString.parse(location.search)\n\n  const tabData = [\n    {\n      label: formatMessage({ id: \"app.dashboard.tab1\" }),\n      content: (\n        <Box mt=\"3em\">\n          <Locations />\n        </Box>\n      ),\n    },\n    {\n      label: formatMessage({ id: \"app.dashboard.tab2\" }),\n      content: (\n        <Box mt=\"3em\">\n          <Meetings />\n        </Box>\n      ),\n    },\n    {\n      label: formatMessage({ id: \"app.dashboard.tab3\" }),\n      content: (\n        <Box mt=\"3em\">\n          <Admins />\n        </Box>\n      ),\n    },\n  ]\n  const onChange = (tabIndex: number) => {\n    history.replace(`/dashboard?tab=${tabIndex}`)\n  }\n\n  return (\n    <Layout>\n      <DashboardTitle />\n      <Box mt=\"3em\">\n        <TabsSection\n          tabs={tabData}\n          isLazy\n          onChange={onChange}\n          defaultIndex={Number(tab)}\n        />\n      </Box>\n    </Layout>\n  )\n}\n","import React from \"react\"\nimport { Flex, Heading } from \"@chakra-ui/react\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport DisplayText from \"./formElements/DisplayMessage\"\n\nexport const Title = () => (\n  <Flex\n    justifyItems=\"flex-start\"\n    justifyContent=\"center\"\n    flexDir=\"column\"\n    mt={2}\n    mb={2}\n  >\n    <Heading as=\"h3\" size=\"md\" id={MEETINGS_LIST.topTitle}>\n      <DisplayText id=\"app.title\" defaultMessage=\"app title\" />\n    </Heading>\n  </Flex>\n)\n","import React, { useState } from \"react\"\nimport { Box, Flex, Spinner, Text } from \"@chakra-ui/react\"\nimport {\n  useMeetingsQuery,\n  useMeetingUpdatedSubscription,\n  useNewMeetingSubscription,\n  useMeetingDeleteSubscription,\n} from \"../generated/graphql\"\nimport IconButton from \"../components/formElements/IconButton\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport MeetingCard from \"./MeetingCard\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { ArrowRightIcon } from \"@chakra-ui/icons\"\nimport { Link } from \"react-router-dom\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\n\nconst Meetings = () => {\n  const [variables, setVariables] = useState({\n    limit: 15,\n    cursor: null as null | string,\n  })\n  const [{ data, fetching, error }] = useMeetingsQuery({ variables })\n  useMeetingUpdatedSubscription()\n  useNewMeetingSubscription()\n  useMeetingDeleteSubscription()\n\n  if (fetching) return <Spinner />\n\n  if (error || !data || data.meetings.meetings.length === 0)\n    return (\n      <Box id={MEETINGS_LIST.noMeetings}>\n        <DisplayText\n          id=\"app.meetings.empty\"\n          defaultMessage=\"no hay reuniones\"\n        />\n      </Box>\n    )\n  const nextPage = {\n    limit: variables.limit,\n    cursor:\n      data?.meetings.meetings[data.meetings.meetings.length - 1].createdAt,\n  }\n\n  return (\n    <Flex flex={1} alignItems=\"center\" flexWrap=\"wrap\">\n      <ShouldRender if={data && data.meetings}>\n        {data?.meetings.meetings.map(({ __typename, ...reu }) => (\n          <MeetingCard {...reu}>\n            <Flex mt={\"-15px\"}>\n              <Link\n                to={`/datos/${reu.id}`}\n                className={MEETINGS_LIST.linkCitizenForm}\n              >\n                <Text mr={3}>\n                  <DisplayText\n                    id=\"app.buttons.reserve\"\n                    defaultMessage=\"Reserve\"\n                  />\n                </Text>\n                <IconButton\n                  className={MEETINGS_LIST.btnReserve}\n                  aria-label=\"reservar\"\n                  iconType=\"IconReservation\"\n                  icon={<ArrowRightIcon />}\n                />\n              </Link>\n            </Flex>\n          </MeetingCard>\n        ))}\n        <ShouldRender if={data && data.meetings.hasMore}>\n          <Flex>\n            <PrimaryButton\n              isLoading={fetching}\n              mt={8}\n              onClick={() => {\n                setVariables(nextPage)\n              }}\n            >\n              load more\n            </PrimaryButton>\n          </Flex>\n        </ShouldRender>\n      </ShouldRender>\n    </Flex>\n  )\n}\n\nexport default Meetings\n","import React from \"react\"\nimport { FormControl, FormLabel, Input } from \"@chakra-ui/react\"\n\ntype NormalInputProps = {\n  name: string\n  label: string\n  id: string\n  required: true | false\n  onBlur?: any\n  onChange?: any\n  disabled: true | false\n}\n\nconst NormalInput = ({ name, label, id, ...props }: NormalInputProps) => (\n  <FormControl mt={2}>\n    <FormLabel htmlFor={id}>{label}</FormLabel>\n    <Input id={id} placeholder={label.toLowerCase()} {...props} />\n  </FormControl>\n)\n\nexport default NormalInput\n","import { DeleteIcon } from \"@chakra-ui/icons\"\nimport { Spinner, useToast } from \"@chakra-ui/react\"\nimport moment from \"moment\"\nimport React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { useCancelReservationMutation } from \"../generated/graphql\"\nimport { RESERVATIONS_LIST } from \"../ui/formIds\"\nimport CancelButton from \"./formElements/CancelButton\"\nimport ShouldRender from \"./ShouldRender\"\nimport IconButton from \"../components/formElements/IconButton\"\n\ntype CancelProps = {\n  reservationId: string\n  meetingDate: string\n  userId: string\n  labeled?: boolean\n  onChange?: () => void\n}\n\nconst CancelReservation = ({\n  reservationId,\n  meetingDate,\n  labeled = false,\n  userId,\n  onChange,\n}: CancelProps) => {\n  const [{ fetching }, cancelReserve] = useCancelReservationMutation()\n  const { formatMessage } = useIntl()\n  const toast = useToast({ isClosable: true, duration: 3000 })\n\n  const onCancel = async () => {\n    const res = await cancelReserve({ reservationId, userId })\n    if (res.error)\n      return toast({\n        title: formatMessage({ id: \"app.notification.cancelReservationError\" }),\n        description: res.error.message,\n        status: \"error\",\n      })\n    toast({\n      title: formatMessage({ id: \"app.notification.success\" }),\n      description: \"\",\n      status: \"success\",\n    })\n    if (typeof onChange === \"function\") onChange()\n  }\n  if (fetching) return <Spinner />\n\n  const canDelete = moment(meetingDate) > moment()\n  const props = {\n    onClick: onCancel,\n    id: RESERVATIONS_LIST.btnCancelReservation,\n  }\n\n  return (\n    <ShouldRender if={canDelete}>\n      {labeled ? (\n        <CancelButton {...props}>cancelar</CancelButton>\n      ) : (\n        <IconButton\n          {...props}\n          iconType=\"IconDelete\"\n          aria-label=\"cancelar\"\n          icon={<DeleteIcon />}\n        />\n      )}\n    </ShouldRender>\n  )\n}\n\nexport default CancelReservation\n","import { SearchIcon } from \"@chakra-ui/icons\"\nimport { Center, Flex, Heading, Text, Wrap, WrapItem } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport IconButton from \"../components/formElements/IconButton\"\nimport { formatDate } from \"../utils/formatDate\"\nimport { MEETINGS_LIST, RESERVATIONS_LIST } from \"../ui/formIds\"\nimport CancelReservation from \"../components/CancelReservation\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport ShouldRender from \"../components/ShouldRender\"\n\ntype ReservationListProps = {\n  reservations: any\n  userId: string\n  onChange?: any\n}\n\nconst ReservationsList = ({\n  reservations = [],\n  userId,\n  onChange,\n}: ReservationListProps) => {\n  const history = useHistory()\n  if (reservations?.length === 0) return null\n  return (\n    <Flex\n      flexDir=\"column\"\n      flexWrap=\"wrap\"\n      id={RESERVATIONS_LIST.reservationSection}\n    >\n      <Heading as=\"h3\" size=\"md\" mt={3} id={RESERVATIONS_LIST.title}>\n        <DisplayText id=\"app.reservations.title\" defaultMessage=\"reservas\" />\n      </Heading>\n      <Wrap className={RESERVATIONS_LIST.reservationItem}>\n        <ShouldRender if={!reservations || reservations.length === 0}>\n          <Text id={MEETINGS_LIST.noResults}>\n            <DisplayText\n              id=\"app.reservations.noResults\"\n              defaultMessage=\"no reservations\"\n            />\n          </Text>\n        </ShouldRender>\n        {reservations?.map((r: any) => (\n          <WrapItem\n            key={r.id}\n            id={r.id}\n            className={RESERVATIONS_LIST.reservationItem}\n          >\n            <Center w=\"80%\" mr={4}>\n              <Link to={`/reservation/${r.id}`} id={RESERVATIONS_LIST.link}>\n                <Text id={RESERVATIONS_LIST.meetingTitle}>\n                  {r.meeting.title}\n                </Text>\n                <Text size=\"sm\" id={RESERVATIONS_LIST.meetingDate}>\n                  {formatDate(r.meeting.meetingDate)}\n                </Text>\n              </Link>\n            </Center>\n            <Center>\n              <IconButton\n                aria-label=\"Open reservation\"\n                onClick={() => {\n                  history.push(`/reservation/${r.id}`)\n                }}\n                iconType=\"IconEdit\"\n                icon={<SearchIcon />}\n                id={RESERVATIONS_LIST.btnOpenReservation}\n                mr={3}\n              />\n              <CancelReservation\n                reservationId={r.id}\n                userId={userId}\n                meetingDate={r.meeting.meetingDate}\n                onChange={onChange}\n              />\n            </Center>\n          </WrapItem>\n        ))}\n      </Wrap>\n    </Flex>\n  )\n}\n\nexport default ReservationsList\n","import { SearchIcon } from \"@chakra-ui/icons\"\nimport { Box, InputGroup, Flex, IconButton } from \"@chakra-ui/react\"\nimport React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport NeutralButton from \"../components/formElements/NeutralButton\"\nimport NormalInput from \"../components/formElements/NormalInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport { useGetUserMutation } from \"../generated/graphql\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\nimport ReservationsList from \"./ReservationsList\"\n\ntype SearchReservationState = {\n  userId: string\n  reservations: any\n  citizenId: string\n  emptyValue: boolean\n  error: boolean\n  loading: boolean\n}\n\nconst initialState = {\n  userId: \"\",\n  reservations: null,\n  citizenId: \"\",\n  emptyValue: false,\n  error: false,\n  loading: false,\n}\nexport default function SearchReservation({ showIcon = false }) {\n  const { formatMessage } = useIntl()\n  const [, searchUser] = useGetUserMutation()\n  const [state, setState] = useState<SearchReservationState>(initialState)\n\n  const { userId, reservations, citizenId, emptyValue, error, loading } = state\n\n  const updateSate = (newValue: any) => {\n    setState({ ...initialState, ...newValue })\n  }\n\n  const onInputChange = (ev: any) => {\n    updateSate({ citizenId: String(ev.target.value) })\n  }\n\n  const searchReservation = async (ev: any) => {\n    if (!citizenId.trim()) return updateSate({ emptyValue: true })\n\n    updateSate({ loading: true })\n    const { data } = await searchUser({ citizenId })\n    if (data?.user?.user) {\n      const { id, reservations: prevRes = [] } = data.user.user\n      localStorage.setItem(\"userId\", id)\n      updateSate({\n        userId: id,\n        reservations: prevRes,\n      })\n    }\n    const errors = data?.user?.errors || []\n    if (errors.length > 0) {\n      updateSate({ error: true })\n    }\n  }\n  const [showInput, setInput] = useState(false)\n\n  const btnsProps = {\n    onClick: () => {\n      setInput(!showInput)\n    },\n    mt: 5,\n    id: MEETINGS_LIST.searchOrClean,\n  }\n\n  return (\n    <Box ml={3} mt={3} id={MEETINGS_LIST.searchSection}>\n      {showInput ? (\n        <NeutralButton {...btnsProps}>\n          <DisplayText id=\"app.buttons.back\" defaultMessage=\"volver\" />\n        </NeutralButton>\n      ) : (\n        <PrimaryButton {...btnsProps}>\n          <DisplayText\n            id=\"app.buttons.searchReservation\"\n            defaultMessage=\"search reservation\"\n          />\n        </PrimaryButton>\n      )}\n      <ShouldRender if={showInput}>\n        <InputGroup>\n          <Flex flexDir=\"row\" align=\"flex-end\" w=\"50%\">\n            <NormalInput\n              onBlur={!showIcon ? searchReservation : undefined}\n              label={formatMessage({ id: \"form.document\" })}\n              name=\"document\"\n              required\n              id={MEETINGS_LIST.document}\n              disabled={loading}\n              onChange={onInputChange}\n            />\n            <ShouldRender if={showIcon}>\n              <IconButton\n                aria-label={formatMessage({ id: \"form.searchReservation\" })}\n                icon={<SearchIcon />}\n                onClick={searchReservation}\n                isLoading={loading}\n                id={MEETINGS_LIST.btnSearch}\n                ml={5}\n              />\n            </ShouldRender>\n          </Flex>\n        </InputGroup>\n        <Box>\n          <ShouldRender if={error}>\n            <DisplayText\n              id=\"app.errors.noUser\"\n              defaultMessage=\"usuario no existe\"\n            />\n          </ShouldRender>\n          <ShouldRender if={emptyValue}>\n            <DisplayText id=\"form.required\" defaultMessage=\"campo requerido\" />\n          </ShouldRender>\n        </Box>\n        <Box mt={3}>\n          <ShouldRender if={reservations && !error && !emptyValue}>\n            <ReservationsList reservations={reservations} userId={userId} />\n          </ShouldRender>\n        </Box>\n      </ShouldRender>\n    </Box>\n  )\n}\n","import { Heading } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { Title } from \"../components/Title\"\nimport Meetings from \"../container/Meetings\"\nimport SearchReservation from \"../container/SearchReservation\"\nimport { useHeartbeatQuery } from \"../generated/graphql\"\nimport Layout from \"../layouts\"\nimport { MEETINGS_LIST } from \"../ui/formIds\"\n\nconst Landing = () => {\n  const [{ data }] = useHeartbeatQuery()\n  const history = useHistory()\n  if (data && data.heartBeat) {\n    history.replace(\"/dashboard\")\n  }\n  return (\n    <Layout>\n      <Title />\n      <Heading as=\"h2\" size=\"md\" id={MEETINGS_LIST.title}>\n        <DisplayText\n          id=\"app.meetings.title\"\n          defaultMessage=\"Próximos eventos:\"\n        />\n      </Heading>\n      <Meetings />\n      <SearchReservation />\n    </Layout>\n  )\n}\n\nexport default Landing\n","import { Flex, Heading, useToast } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport queryString from \"query-string\"\nimport React from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport { useHeartbeatQuery, useLoginMutation } from \"../generated/graphql\"\nimport Layout from \"../layouts\"\n\nconst Login = () => {\n  const [, login] = useLoginMutation()\n  const [{ data, fetching }] = useHeartbeatQuery()\n  const { formatMessage } = useIntl()\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const history = useHistory()\n  const location = useLocation()\n  const { next = \"/dashboard\" } = queryString.parse(location.search)\n  const toast = useToast({\n    duration: 3000,\n    isClosable: true,\n  })\n  const validateInputs = (values: any) => {\n    const { user, pwd } = values\n    const errors: any = {}\n\n    if (!user) {\n      errors.user = IS_REQUIRED\n    }\n    if (!pwd) {\n      errors.pwd = IS_REQUIRED\n    }\n\n    return errors\n  }\n\n  if (data && data.heartBeat) history.push(\"/dashboard\")\n  return (\n    <Layout>\n      <Heading mb={5}>\n        <DisplayText id=\"app.login.title\" defaultMessage=\"Aforo Admin\" />\n      </Heading>\n      <Formik\n        initialValues={{\n          user: \"\",\n          pwd: \"\",\n        }}\n        validate={(values) => {\n          const errors = validateInputs(values)\n          return errors\n        }}\n        onSubmit={async ({ pwd, user }: any) => {\n          const { data } = await login({ pwd, usr: user })\n          if (data?.login.errors) {\n            return toast({\n              description: data?.login.errors[0].message,\n              status: \"error\",\n            })\n          }\n          if (data?.login.admin) {\n            toast({\n              description: `${formatMessage({\n                id: \"app.reservation.title\",\n              })} ${data.login.admin.firstName}`,\n              status: \"success\",\n            })\n            history.push(String(next))\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form style={{ width: \"90%\" }}>\n            <Flex mb={5} justifyContent=\"space-around\" flexDir=\"column\">\n              <FormikInput\n                label={formatMessage({ id: \"form.user\" })}\n                name=\"user\"\n                required\n              />\n              <FormikInput\n                label={formatMessage({ id: \"form.pwd\" })}\n                type=\"password\"\n                name=\"pwd\"\n                required\n              />\n            </Flex>\n            <PrimaryButton\n              type=\"submit\"\n              data-qa=\"submit\"\n              isLoading={isSubmitting}\n            >\n              <DisplayText\n                id=\"app.buttons.continue\"\n                defaultMessage=\"continue\"\n              />\n            </PrimaryButton>\n          </Form>\n        )}\n      </Formik>\n    </Layout>\n  )\n}\n\nexport default Login\n","import React from \"react\"\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  Image,\n} from \"@react-pdf/renderer\"\nimport { formatDate } from \"../utils/formatDate\"\n\ntype pdfProps = {\n  firstName: string\n  lastName: string\n  qrText: string\n  document: string\n  title: string\n  meetingDate: string\n  confirmationMessage: string\n}\n\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"column\",\n    textAlign: \"center\",\n  },\n  title: {\n    marginTop: 10,\n    fontSize: 30,\n    fontWeight: \"bold\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  image: {\n    marginVertical: 20,\n    marginHorizontal: 200,\n    width: \"210px\",\n    height: \"210px\",\n  },\n  imageLogo: {\n    marginVertical: 0,\n    marginHorizontal: 0,\n    width: \"60px\",\n    height: \"60px\",\n    margin: \"25px\",\n  },\n  paragraph: {\n    fontSize: 12,\n    width: \"80%\",\n    marginTop: 10,\n    marginHorizontal: 50,\n  },\n})\n\nconst PDF = ({\n  firstName,\n  lastName,\n  qrText,\n  document,\n  title,\n  meetingDate,\n  confirmationMessage,\n}: pdfProps) => {\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <View>\n          <Image\n            src=\"http://localhost:3000/logo192.png\"\n            style={styles.imageLogo}\n          />\n          <Text style={styles.title}>Reserva</Text>\n          <Text>\n            Bienvenid@ {firstName} {lastName}\n          </Text>\n          <Image src={qrText} style={styles.image} />\n          <Text>Documento: {document}</Text>\n          <Text>Reunión reservada: {title}</Text>\n          <Text>Fecha: {formatDate(meetingDate)}</Text>\n          <Text style={styles.paragraph}>{confirmationMessage}</Text>\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\nexport default PDF\n","import { Flex, Heading, Box } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { Reservation } from \"../generated/graphql\"\nimport { RESERVATION_VIEW } from \"../ui/formIds\"\nimport { formatDate } from \"../utils/formatDate\"\n\ntype ExternalProps = {\n  reservation: Reservation\n}\n\nexport default function ExternalReservationView({\n  reservation,\n}: ExternalProps) {\n  return (\n    <Flex flexDir=\"column\" alignItems=\"center\" flexWrap=\"wrap\">\n      <Heading id={RESERVATION_VIEW.title} mt={2} mb={2} as=\"h3\" size=\"lg\">\n        <DisplayText\n          id=\"app.externalReservation.title\"\n          defaultMessage=\"Reservation made by\"\n        />{\" \"}\n        {reservation?.citizen.firstName} {reservation?.citizen.lastName}\n      </Heading>\n\n      <Box>\n        <Box mt={2} mb={3}>\n          <Heading id={RESERVATION_VIEW.document} as=\"h4\" size=\"md\">\n            <DisplayText\n              id=\"form.document\"\n              defaultMessage=\"Reservation made by\"\n            />\n            :\n          </Heading>\n          {reservation?.citizen.document}\n          <Heading id={RESERVATION_VIEW.meetigTitle} as=\"h4\" size=\"md\">\n            <DisplayText\n              id=\"form.meetingReserved\"\n              defaultMessage=\"Meeting reserved\"\n            />\n            :\n          </Heading>\n          {reservation?.meeting.title}\n          <Heading id={RESERVATION_VIEW.meetingDate} as=\"h4\" size=\"md\">\n            <DisplayText id=\"form.date\" defaultMessage=\"Date\" />:\n          </Heading>\n          {formatDate(reservation?.meeting.meetingDate)}\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n","import { Flex, Heading, Box, Center, Text } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport { Reservation } from \"../generated/graphql\"\nimport { RESERVATION_VIEW } from \"../ui/formIds\"\nimport { formatDate } from \"../utils/formatDate\"\n\ntype UserReservationViewProps = {\n  reservation: Reservation\n}\n\nexport default function UserReservationView({\n  reservation,\n}: UserReservationViewProps) {\n  return (\n    <Flex flexDir=\"column\" alignItems=\"center\">\n      <Heading id={RESERVATION_VIEW.welcome} mt={2} mb={3} as=\"h3\" size=\"lg\">\n        <DisplayText id=\"app.reservation.title\" />{\" \"}\n        {reservation?.citizen.firstName} {reservation?.citizen.lastName}\n      </Heading>\n      <Box m=\"auto\">\n        <img\n          id={RESERVATION_VIEW.qrCode}\n          src={reservation?.qrText}\n          alt=\"qr\"\n          style={{ width: \"210px\", height: \"210px\", objectFit: \"cover\" }}\n        />\n      </Box>\n      <Box mt={3} mb={3}>\n        <Flex flexDir=\"column\" mt={2} mb={3}>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading\n                id={RESERVATION_VIEW.reservationTitleDocument}\n                as=\"h4\"\n                size=\"md\"\n              >\n                <DisplayText id=\"form.document\" defaultMessage=\"Document\" />:\n              </Heading>\n              <Text id={RESERVATION_VIEW.userDocument} fontSize=\"md\" ml={15}>\n                {reservation?.citizen.document}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading\n                id={RESERVATION_VIEW.reservationTitlemeeting}\n                as=\"h4\"\n                size=\"md\"\n              >\n                <DisplayText\n                  id=\"form.meetingReserved\"\n                  defaultMessage=\"Meeting reserved\"\n                />\n                :\n              </Heading>\n              <Text id={RESERVATION_VIEW.userMeeting} fontSize=\"md\" ml={15}>\n                {reservation?.meeting.title}\n              </Text>\n            </Center>\n          </Flex>\n          <Flex mb={2} flexDir=\"row\">\n            <Center>\n              <Heading\n                id={RESERVATION_VIEW.reservationTitleDate}\n                as=\"h4\"\n                size=\"md\"\n              >\n                <DisplayText id=\"form.date\" defaultMessage=\"Date\" />:\n              </Heading>\n              <Text\n                id={RESERVATION_VIEW.reservationUserDate}\n                fontSize=\"md\"\n                ml={15}\n              >\n                {formatDate(reservation?.meeting.meetingDate)}\n              </Text>\n            </Center>\n          </Flex>\n        </Flex>\n        <Text id={RESERVATION_VIEW.msgConfirm}>\n          <DisplayText id=\"app.reservation.message\" />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  Box,\n  Flex,\n  useToast,\n  Stack,\n  ModalFooter,\n  Spinner,\n} from \"@chakra-ui/react\"\nimport {\n  useSearchReservationQuery,\n  useCancelReservationMutation,\n} from \"../generated/graphql\"\nimport { useHistory } from \"react-router-dom\"\nimport WrapperButton from \"../components/formElements/PrimaryButton\"\nimport PDF from \"../components/DownloadPdf\"\nimport { PDFDownloadLink } from \"@react-pdf/renderer\"\nimport ModalWrapper from \"../components/ModalWrapper\"\nimport { RESERVATION_VIEW } from \"../ui/formIds\"\nimport CancelReservation from \"../components/CancelReservation\"\nimport ExternalReservationView from \"./ExternalReservationView\"\nimport UserReservationView from \"./UserReservationView\"\nimport { Reservation } from \"../generated/graphql\"\nimport CancelButton from \"../components/formElements/CancelButton\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport moment from \"moment\"\nimport { useIntl } from \"react-intl\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\n\nconst ReservationView = ({ reservationId, external = false }: any) => {\n  const { formatMessage } = useIntl()\n  const [saving, setLoading] = useState(false)\n  const history = useHistory()\n  const toast = useToast()\n  const [, cancelReserve] = useCancelReservationMutation()\n\n  const [isOpen, setOpen] = useState(false)\n  const onClose = () => {\n    setOpen(false)\n  }\n\n  const [{ data, fetching, error }] = useSearchReservationQuery({\n    variables: { reservationId },\n  })\n  const userId = localStorage.getItem(\"userId\") || \"\"\n\n  // handle edge cases\n  if (fetching || saving) return <Spinner />\n  if (error) return <div>{error?.message}</div>\n  const reservation = data?.searchReservation?.reservation as Reservation\n  if (!reservation)\n    return (\n      <Box>\n        <DisplayText\n          id=\"app.reservation.noReservation\"\n          defaultMessage=\"There is no reservation with this id\"\n        />\n      </Box>\n    )\n  // -------\n\n  const onCancel = async () => {\n    setLoading(true)\n    const { data } = await cancelReserve({ reservationId, userId })\n    setLoading(false)\n    if (!data?.cancelReservation)\n      return toast({\n        title: formatMessage({ id: \"app.notification.cancelReservationError\" }),\n        isClosable: true,\n        duration: 3000,\n        status: \"error\",\n      })\n    toast({\n      title: formatMessage({ id: \"app.notification.cancelReservationOk\" }),\n      description: \"\",\n      isClosable: true,\n      duration: 3000,\n      status: \"success\",\n    })\n    history.push(\"/\")\n  }\n\n  return external ? (\n    <Box>\n      <ExternalReservationView reservation={reservation} />\n      <Flex mt={3} justifyContent=\"center\">\n        <WrapperButton\n          id={RESERVATION_VIEW.confirmBtn}\n          onClick={onCancel}\n          colorScheme=\"purple\"\n        >\n          <DisplayText id=\"app.buttons.confirm\" defaultMessage=\"confirm\" />\n        </WrapperButton>\n      </Flex>\n    </Box>\n  ) : (\n    <Box>\n      <UserReservationView reservation={reservation} />\n      <Flex mt={3} justifyContent=\"center\">\n        <Stack direction=\"row\" align=\"center\" spacing={3}>\n          <ShouldRender\n            if={\n              reservation?.meeting.meetingDate &&\n              moment(reservation?.meeting.meetingDate) > moment()\n            }\n          >\n            <CancelButton onClick={() => setOpen(true)}>\n              <DisplayText id=\"app.buttons.cancel\" defaultMessage=\"cancel\" />\n            </CancelButton>\n          </ShouldRender>\n          <PDFDownloadLink\n            style={{ marginRight: \"20px\" }}\n            document={\n              <PDF\n                firstName={reservation?.citizen.firstName}\n                lastName={reservation?.citizen.lastName}\n                qrText={reservation?.qrText}\n                document={reservation?.citizen.document}\n                title={reservation?.meeting.title}\n                meetingDate={reservation?.meeting.meetingDate}\n                confirmationMessage={formatMessage({\n                  id: \"app.message.confirmation\",\n                })}\n              />\n            }\n            fileName={`reservaAforo_${reservation?.meeting.id}.pdf`}\n          >\n            {({ loading }) => (\n              <WrapperButton\n                id={RESERVATION_VIEW.btnDownLoadPdf}\n                colorScheme=\"purple\"\n                isLoading={loading}\n              >\n                {loading\n                  ? formatMessage({ id: \"app.buttons.loading\" })\n                  : formatMessage({ id: \"app.buttons.downLoad\" })}\n              </WrapperButton>\n            )}\n          </PDFDownloadLink>\n        </Stack>\n      </Flex>\n      <ModalWrapper\n        titulo=\"\"\n        contenido={\n          <>\n            <DisplayText\n              id=\"app.modalReservation.cancelMessage\"\n              defaultMessage=\"Are you sure to cancel the reservation?\"\n            />\n            <ModalFooter>\n              <CancelReservation\n                reservationId={reservationId}\n                userId={userId}\n                meetingDate={reservation?.meeting.meetingDate}\n                onChange={() => history.push(\"/\")}\n                labeled\n              />\n            </ModalFooter>\n          </>\n        }\n        onClose={onClose}\n        isOpen={isOpen}\n      />\n    </Box>\n  )\n}\n\nexport default ReservationView\n","import { Flex } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useHistory, useLocation, useParams } from \"react-router-dom\"\nimport Wrapper from \"../components/Wrapper\"\nimport ReservationView from \"../container/ReservationView\"\nimport queryString from \"query-string\"\n\nconst ReservationData = () => {\n  const history = useHistory()\n  const location = useLocation()\n  let { reservationId }: any = useParams()\n  const { external = false } = queryString.parse(location.search)\n  if (!reservationId) history.push(\"/\")\n  return (\n    <Wrapper>\n      <Flex alignItems=\"center\" flex={1} p={5} flexDir=\"column\">\n        <ReservationView reservationId={reservationId} external={external} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default ReservationData\n","import { Link, useStyleConfig } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"./formElements/DisplayMessage\"\nimport FormikInput from \"./formElements/FormikInput\"\nimport ShouldRender from \"./ShouldRender\"\nimport { useIntl } from \"react-intl\"\n\nconst ChangePwd = ({ onChangenewPwd, newPwd }: any) => {\n  const { formatMessage } = useIntl()\n\n  return (\n    <>\n      <Link\n        mt={4}\n        onClick={() => {\n          onChangenewPwd(!newPwd)\n        }}\n        href=\"#\"\n        sx={useStyleConfig(\"Link\", {})}\n      >\n        {newPwd ? (\n          <DisplayText id=\"app.label.hide\" defaultMessage=\"hide\" />\n        ) : (\n          <DisplayText\n            id=\"app.buttons.changePwd\"\n            defaultMessage=\"change password\"\n          />\n        )}\n      </Link>\n      <ShouldRender if={newPwd}>\n        <FormikInput\n          id=\"5\"\n          type=\"password\"\n          label={formatMessage({ id: \"form.pwd\" })}\n          name=\"password\"\n          disabled={false}\n          required={newPwd}\n        />\n        <FormikInput\n          id=\"6\"\n          type=\"password\"\n          label={formatMessage({ id: \"form.Newpwd\" })}\n          name=\"newPassword\"\n          disabled={false}\n          required={newPwd}\n        />\n        <FormikInput\n          id=\"7\"\n          type=\"password\"\n          label={formatMessage({ id: \"form.Repeatpwd\" })}\n          name=\"repeatPassword\"\n          disabled={false}\n          required={newPwd}\n        />\n      </ShouldRender>\n    </>\n  )\n}\n\nexport default ChangePwd\n","import { SettingsDataType } from \"../components/types\"\n\nconst isSettingsAdminDataValid = ({\n  firstName,\n  lastName,\n  phone,\n  email,\n  newPassword,\n  repeatPassword,\n  formatMessage,\n}: SettingsDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n\n  const onlyLetters = /^[a-zA-Z\\s]*$/\n  const isEmailValid = /^[-\\w.%+]{1,64}@(?:[A-Z0-9-]{1,63}\\.){1,125}[A-Z]{2,63}$/i\n  const isPasswordValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/\n  const IS_PWD = formatMessage({ id: \"form.pssCorrect\" })\n  const IS_PWDNOREPEAT = formatMessage({ id: \"app.login.pwdIncorret\" })\n\n  if (!firstName) {\n    errors.firstName = IS_REQUIRED\n  } else if (firstName.length < 4 || firstName.length > 15) {\n    errors.firstName = IS_INCORRECT\n  } else if (!onlyLetters.test(firstName)) {\n    errors.firstName = IS_INCORRECT\n  }\n\n  if (!lastName) {\n    errors.lastname = IS_REQUIRED\n  } else if (lastName.length < 3 || lastName.length > 15) {\n    errors.lastname = IS_INCORRECT\n  } else if (!onlyLetters.test(lastName)) {\n    errors.lastName = IS_INCORRECT\n  }\n\n  if (!phone) {\n    errors.phone = IS_REQUIRED\n  } else if (String(phone).length !== 7 && String(phone).length !== 10) {\n    errors.phone = IS_INCORRECT\n  }\n\n  if (!email) {\n    errors.email = IS_REQUIRED\n  } else if (!isEmailValid.test(email)) {\n    errors.email = IS_INCORRECT\n  }\n\n  if (newPassword) {\n    if (!isPasswordValid.test(newPassword || \"\")) {\n      errors.newPassword = IS_PWD\n    }\n    if (repeatPassword !== newPassword) {\n      errors.repeatPassword = IS_PWDNOREPEAT\n    }\n  }\n  console.log(errors)\n  return errors\n}\n\nexport default isSettingsAdminDataValid\n","import { Flex, Spinner } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport ChangePwd from \"../components/ChangesPwd\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport { useAdminQuery, useUpdateAdminMutation } from \"../generated/graphql\"\nimport isEmpty from \"../utils/isEmpty\"\nimport isSettingsAdminDataValid from \"../utils/isSettingsAdminDataValid\"\nimport Notify from \"../utils/notify\"\n\nconst SettingsData = ({ children }: any) => {\n  const { formatMessage } = useIntl()\n  const [, updateUser] = useUpdateAdminMutation()\n  const [newPwd, onChangenewPwd] = useState(false)\n\n  const [{ data, fetching }] = useAdminQuery()\n\n  const initialValues = isEmpty(data?.getAdminData)\n    ? {\n        firstName: \"\",\n        lastName: \"\",\n        phone: 0,\n        email: \"\",\n        password: \"\",\n        newPassword: \"\",\n        repeatPassword: \"\",\n      }\n    : {\n        ...data?.getAdminData,\n        password: \"\",\n        newPassword: \"\",\n        repeatPassword: \"\",\n      }\n\n  const validateInputs = (values: any) => {\n    const errors = isSettingsAdminDataValid({ ...values, formatMessage })\n    return errors\n  }\n\n  const onSubmit = async ({ __typename, repeatPassword, ...values }: any) => {\n    const update = await updateUser({ userData: values })\n    if (update.error) {\n      return Notify({\n        title: formatMessage({ id: \"app.notification.userDontUpdate\" }),\n        type: \"error\",\n      })\n    }\n    return Notify({\n      title: formatMessage({ id: \"app.notification.userUpdate\" }),\n      type: \"success\",\n    })\n  }\n\n  if (fetching) return <Spinner />\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      validate={validateInputs}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Flex flexDir=\"column\">\n            <FormikInput\n              id=\"1\"\n              label={formatMessage({ id: \"form.names\" })}\n              name=\"firstName\"\n              disabled={false}\n              required\n            />\n            <FormikInput\n              id=\"2\"\n              label={formatMessage({ id: \"form.lastNames\" })}\n              name=\"lastName\"\n              disabled={false}\n              required\n            />\n            <FormikInput\n              id=\"3\"\n              label={formatMessage({ id: \"form.phone\" })}\n              type=\"number\"\n              name=\"phone\"\n              disabled={false}\n              required\n            />\n            <FormikInput\n              id=\"4\"\n              label={formatMessage({ id: \"form.email\" })}\n              name=\"email\"\n              disabled={false}\n              required\n            />\n            <ShouldRender if={data?.getAdminData}>\n              <ChangePwd onChangenewPwd={onChangenewPwd} newPwd={newPwd} />\n            </ShouldRender>\n            <Flex mt={2} justifyContent=\"flex-end\">\n              {children}\n              <PrimaryButton ml={3} type=\"submit\" isLoading={isSubmitting}>\n                <DisplayText id=\"app.buttons.save\" defaultMessage=\"save\" />\n              </PrimaryButton>\n            </Flex>\n          </Flex>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default SettingsData\n","import { Heading } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport NeutralButton from \"../components/formElements/NeutralButton\"\nimport SettingsData from \"../container/SettingsData\"\nimport Layout from \"../layouts\"\nimport { CITIZEN_FORM } from \"../ui/formIds\"\n\nconst Settings = () => {\n  const history = useHistory()\n  return (\n    <Layout>\n      <Heading id={CITIZEN_FORM.headingTitle}>\n        <DisplayText id=\"app.settings.title\" defaultMessage=\"settings\" />\n      </Heading>\n      <SettingsData>\n        <NeutralButton\n          onClick={() => {\n            history.push(\"/dashboard\")\n          }}\n        >\n          <DisplayText id=\"app.buttons.back\" defaultMessage=\"cancel\" />\n        </NeutralButton>\n      </SettingsData>\n    </Layout>\n  )\n}\n\nexport default Settings\n","import { PersonalDataType } from \"../components/types\"\nimport { DOCUMENT_RGX, EMAIL_RGX, ONLY_LETTERS_RGX } from \"./fieldsRegex\"\n\nconst isPersonalDataValid = ({\n  document,\n  firstName,\n  lastName,\n  phone,\n  email,\n  birthDate,\n  formatMessage,\n}: PersonalDataType) => {\n  const errors: any = {}\n  const IS_REQUIRED = formatMessage({ id: \"form.required\" })\n  const IS_INCORRECT = formatMessage({ id: \"field.incorrect_value\" })\n  //required field\n  if (!document) {\n    errors.document = IS_REQUIRED\n  }\n  if (String(document).length < 7) {\n    errors.document = IS_INCORRECT\n  }\n  if (!firstName) {\n    errors.firstName = IS_REQUIRED\n  }\n  if (!lastName) {\n    errors.lastName = IS_REQUIRED\n  }\n  if (!phone) {\n    errors.phone = IS_REQUIRED\n  }\n\n  if (!birthDate) {\n    errors.birthDate = IS_REQUIRED\n  } else if (Number(birthDate.substr(0, 4)) >= 2017) {\n    errors.birthDate = IS_INCORRECT\n  }\n\n  //exceptions\n  if (String(phone).length !== 7 && String(phone).length !== 10) {\n    errors.phone = IS_INCORRECT\n  }\n\n  if (!EMAIL_RGX.test(email)) {\n    errors.email = IS_INCORRECT\n  }\n\n  if (document && !DOCUMENT_RGX.test(document)) {\n    errors.document = IS_INCORRECT\n  }\n\n  if (firstName && !ONLY_LETTERS_RGX.test(firstName)) {\n    errors.firstName = IS_INCORRECT\n  }\n  // if (lastName && !textRegex.test(lastName)) {\n  //   errors.lastName = GetDisplayText(\"field.incorrect_value\", \"formato incorrecto\")\n  // }\n\n  return errors\n}\n\nexport default isPersonalDataValid\n","export const blurText = (str: string) => {\n  const limit = 3\n  const total = str.length\n  return `${str.slice(0, limit)}${\"*\".repeat(total - limit)}`\n}\n","import { Box, Flex, Spinner, useToast } from \"@chakra-ui/react\"\nimport { Form, Formik } from \"formik\"\nimport React, { useState } from \"react\"\nimport { useIntl } from \"react-intl\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport FormikInput from \"../components/formElements/FormikInput\"\nimport PrimaryButton from \"../components/formElements/PrimaryButton\"\nimport ShouldRender from \"../components/ShouldRender\"\nimport { useGetUserMutation, useSaveUserMutation } from \"../generated/graphql\"\nimport { CITIZEN_FORM } from \"../ui/formIds\"\nimport { formatAgeDate } from \"../utils/formatDate\"\nimport { getAgeFromDate } from \"../utils/getAgeFromDate\"\nimport isPersonalDataValid from \"../utils/isPersonalDataValid\"\nimport { blurText } from \"../utils/truncate\"\nimport ReservationsList from \"./ReservationsList\"\n\nconst PersonalDataForm = () => {\n  const { formatMessage } = useIntl()\n  const [age, setAge] = useState(\"\")\n  const [userId, setUserId] = useState(\"\")\n  const [userExists, setExist] = useState(false)\n  const [reservations, setReservations] = useState([])\n  const [, searchUser] = useGetUserMutation()\n  const [loading, setLoading] = useState(false)\n  const [, saveUser] = useSaveUserMutation()\n  const history = useHistory()\n  let { meetingId }: any = useParams()\n  if (!meetingId) history.push(\"/\")\n  const toast = useToast()\n  localStorage.setItem(\"meetingId\", meetingId)\n\n  const booked = reservations.find(\n    ({ meetingId: id }: any): any => id === meetingId\n  )\n\n  const onBlurCitizenField = (cb: any) => async (ev: any) => {\n    setLoading(true)\n    const citizenId = String(ev.target.value)\n    const { data } = await searchUser({ citizenId })\n    if (data?.user?.user) {\n      setExist(true)\n      const {\n        document,\n        firstName,\n        lastName,\n        __typename,\n        birthDate,\n        id,\n        reservations: prevRes,\n        ...rest\n      } = data.user.user\n      localStorage.setItem(\"userId\", id)\n      const formatedDate = formatAgeDate(birthDate)\n      cb({\n        document: blurText(document),\n        firstName: blurText(firstName),\n        lastName: blurText(lastName),\n        ...rest,\n        birthDate: formatedDate,\n      })\n      const usrReservations: any = prevRes\n      if (usrReservations) setReservations(usrReservations)\n      setUserId(id)\n    }\n    setLoading(false)\n  }\n\n  return (\n    <Box minW=\"300px\">\n      <Formik\n        enableReinitialize\n        initialValues={{\n          document: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          phone: 0,\n          email: \"\",\n          birthDate: \"\",\n        }}\n        validate={(values) => {\n          const errors = isPersonalDataValid({ ...values, formatMessage })\n          if (values.birthDate) {\n            const age = getAgeFromDate(values.birthDate)\n            setAge(String(age))\n          }\n          return errors\n        }}\n        onSubmit={async ({ ...values }) => {\n          let response = await saveUser({ input: { ...values }, userId })\n          if (response.error)\n            return toast({\n              description: response.error.message,\n              title: \"ocurrio un error\",\n              status: \"error\",\n              duration: 3000,\n              isClosable: true,\n            })\n          return history.push(\n            `/questions/${userId || response.data?.saveUser.user?.id}`\n          )\n        }}\n      >\n        {({ isSubmitting, setValues }) => (\n          <Form style={{ width: \"100%\" }}>\n            <Box>\n              <Flex flexDir=\"column\" w=\"100%\">\n                <Flex aling=\"center\">\n                  <FormikInput\n                    onBlur={onBlurCitizenField(setValues)}\n                    label={formatMessage({ id: \"form.document\" })}\n                    name=\"document\"\n                    disabled={userExists || loading}\n                    id={CITIZEN_FORM.document}\n                    required\n                  />\n                  {loading && <Spinner ml=\"-35px\" />}\n                </Flex>\n                <FormikInput\n                  label={formatMessage({ id: \"form.names\" })}\n                  name=\"firstName\"\n                  required\n                  id={CITIZEN_FORM.firstName}\n                  disabled={userExists || loading}\n                />\n                <FormikInput\n                  label={formatMessage({ id: \"form.lastNames\" })}\n                  name=\"lastName\"\n                  required\n                  id={CITIZEN_FORM.lastName}\n                  disabled={userExists || loading}\n                />\n                <FormikInput\n                  label={formatMessage({ id: \"form.phone\" })}\n                  name=\"phone\"\n                  type=\"number\"\n                  required\n                  id={CITIZEN_FORM.phone}\n                  disabled={loading}\n                />\n                <FormikInput\n                  label={formatMessage({ id: \"form.email\" })}\n                  name=\"email\"\n                  required\n                  id={CITIZEN_FORM.email}\n                  disabled={loading}\n                />\n                <Flex justifyContent=\"space-around\">\n                  {!userExists && (\n                    <FormikInput\n                      label={formatMessage({ id: \"form.birthDate\" })}\n                      name=\"birthDate\"\n                      type=\"date\"\n                      max=\"2010-12-31\"\n                      min=\"1910-01-01\"\n                      placeholder=\"yyyy-mm-dd\"\n                      required\n                      disabled={loading}\n                      id={CITIZEN_FORM.birthDate}\n                      pattern=\"(?:19|20)\\[0-9\\]{2}-(?:(?:0\\[1-9\\]|1\\[0-2\\])/(?:0\\[1-9\\]|1\\[0-9\\]|2\\[0-9\\])|(?:(?!02)(?:0\\[1-9\\]|1\\[0-2\\])/(?:30))|(?:(?:0\\[13578\\]|1\\[02\\])-31))\"\n                    />\n                  )}\n                  <FormikInput\n                    label={formatMessage({ id: \"form.age\" })}\n                    name=\"age\"\n                    type=\"number\"\n                    disabled\n                    w=\"80%\"\n                    ml={3}\n                    value={age}\n                    id={CITIZEN_FORM.age}\n                  />\n                </Flex>\n                <Box alignSelf=\"flex-end\" mt={\"1.75rem\"}>\n                  <ShouldRender if={reservations && !booked}>\n                    <PrimaryButton\n                      type=\"submit\"\n                      //disabled={error}\n                      isLoading={isSubmitting}\n                      id={CITIZEN_FORM.submit}\n                    >\n                      <DisplayText\n                        id=\"app.buttons.continue\"\n                        defaultMessage=\"continue\"\n                      />\n                    </PrimaryButton>\n                  </ShouldRender>\n                  <ReservationsList\n                    reservations={reservations}\n                    userId={userId}\n                    onChange={onBlurCitizenField(setValues)}\n                  />\n                </Box>\n              </Flex>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n\nexport default PersonalDataForm\n","export const getAgeFromDate = (stringDate: string) => {\n  const date = new Date(stringDate)\n  const diff_ms = Date.now() - date.getTime()\n  const age_dt = new Date(diff_ms)\n  return Math.abs(age_dt.getUTCFullYear() - 1970)\n}\n","import { Flex, Heading } from \"@chakra-ui/react\"\nimport React from \"react\"\nimport DisplayText from \"../components/formElements/DisplayMessage\"\nimport PersonalDataForm from \"../container/PersonalDataForm\"\nimport Layout from \"../layouts\"\nimport { CITIZEN_FORM } from \"../ui/formIds\"\n\nconst UserData = () => {\n  return (\n    <Layout>\n      <Flex alignItems=\"center\" flex={1} p={5} flexDir=\"column\">\n        <Heading id={CITIZEN_FORM.headingTitle}>\n          <DisplayText\n            id=\"app.personalInformation.title\"\n            defaultMessage=\"Personal information\"\n          />\n        </Heading>\n        <PersonalDataForm />\n      </Flex>\n    </Layout>\n  )\n}\n\nexport default UserData\n","import { useHistory } from \"react-router-dom\"\nimport { Exchange } from \"urql\"\nimport { pipe, tap } from \"wonka\"\nimport Notify from \"../utils/notify\"\n\nexport const errorExchange: Exchange = ({ forward }) => (ops$) => {\n  const history = useHistory()\n  return pipe(\n    forward(ops$),\n    tap(({ error }) => {\n      if (error?.message.includes(\"not authenticated\")) {\n        history ? history.replace(\"/login\") : window.location.replace(\"/login\")\n      }\n      if (error && error.message) {\n        return Notify({\n          title: error.message,\n          type: \"error\",\n        })\n      }\n    })\n  )\n}\n","export const exchangeKeys = {\n  Admin: (data: any) => data.name as string,\n  PlaceResponse: () => null,\n  PaginatedMeetings: () => null,\n}\n","import { Cache, QueryInput } from \"@urql/exchange-graphcache\"\n\n// this is used to redefine the types for typescript for\n// the cacheExhange mutation\nexport function betterUpdateQuery<Result, Query>(\n  cache: Cache,\n  qi: QueryInput,\n  result: any,\n  fn: (r: Result, q: Query) => Query\n) {\n  return cache.updateQuery(qi, (data) => fn(result, data as any) as any)\n}\n","import { Cache } from \"@urql/exchange-graphcache\"\n\nexport const invalidateQuerys = (cache: Cache, fName: string) => {\n  const fieldInfos = cache\n    .inspectFields(\"Query\")\n    .filter((info) => info.fieldName === fName)\n  fieldInfos.forEach(({ fieldName, arguments: variables }: any) => {\n    cache.invalidate(\"Query\", fieldName, variables || undefined)\n  })\n}\n","import { cacheExchange } from \"@urql/exchange-graphcache\"\nimport { SubscriptionClient } from \"subscriptions-transport-ws\"\nimport {\n  createClient,\n  dedupExchange,\n  fetchExchange,\n  subscriptionExchange,\n} from \"urql\"\nimport { __IsProd__ } from \"../constants\"\nimport { cursorPagination } from \"./cursorPagination\"\nimport { errorExchange } from \"./errorExchange\"\nimport { exchangeKeys } from \"./exchangeKeys\"\nimport { mutationUpdates } from \"./mutationUpdates\"\nimport { subscriptionUpdates } from \"./subscriptionUpdates\"\n\nconst apiUrl =\n  __IsProd__ && process.env.REACT_APP_API\n    ? process.env.REACT_APP_API\n    : \"//localhost:4000/graphql\"\n\nconst app_uri = apiUrl.replace(\"https:\", \"\")\nconst subscriptionClient = new SubscriptionClient(\n  __IsProd__ ? `wss:${app_uri}` : `ws:${app_uri}`,\n  {\n    reconnect: true,\n  }\n)\n\nconst createUrqlClient = () => {\n  return createClient({\n    url:\n      __IsProd__ && process.env.REACT_APP_API\n        ? process.env.REACT_APP_API\n        : `http:${app_uri}`,\n    requestPolicy: \"cache-first\",\n    fetchOptions: {\n      credentials: \"include\",\n      headers: {\n        clientId: sessionStorage.getItem(\"clientId\") || \"\",\n      },\n    },\n    exchanges: [\n      dedupExchange,\n      cacheExchange({\n        keys: exchangeKeys,\n        resolvers: {\n          Query: {\n            meetings: cursorPagination(),\n          },\n        },\n        updates: {\n          Mutation: mutationUpdates(),\n          Subscription: subscriptionUpdates(),\n        },\n      }),\n      subscriptionExchange({\n        forwardSubscription(operation) {\n          return subscriptionClient.request(operation)\n        },\n      }),\n      errorExchange,\n      fetchExchange,\n    ],\n  })\n}\n\nexport default createUrqlClient\n","import { Resolver } from \"@urql/exchange-graphcache\"\nimport { stringifyVariables } from \"urql\"\n\nexport const cursorPagination = (): Resolver => {\n  return (_parent, fieldArgs, cache, info) => {\n    const { parentKey: entityKey, fieldName } = info\n\n    const allFields = cache.inspectFields(entityKey)\n    const fieldInfos = allFields.filter((info) => info.fieldName === fieldName)\n    const size = fieldInfos.length\n    if (size === 0) {\n      return undefined\n    }\n    // check if the data is in the cache and return it\n    const fieldKey = `${fieldName}(${stringifyVariables(fieldArgs)})`\n    const isItInCache = cache.resolve(entityKey, fieldKey) as string[]\n    info.partial = !isItInCache // make sure it calls the BE when there is not data\n    const results: string[] = []\n    let hasMore = true\n    fieldInfos.forEach((fi) => {\n      const key = cache.resolve(entityKey, fi.fieldKey) as string\n      const data = cache.resolve(key, \"meetings\") as string[]\n      const _hasMore = cache.resolve(key, \"hasMore\")\n      if (!_hasMore) {\n        hasMore = _hasMore as boolean\n      }\n      results.push(...data)\n    })\n    return { __typename: \"PaginatedMeetings\", hasMore, posts: results }\n  }\n}\n","import { Cache, Data, ResolveInfo, Variables } from \"@urql/exchange-graphcache\"\nimport {\n  AddPlaceMutation,\n  DeletePlaceMutation,\n  GetPlacesDocument,\n  GetPlacesQuery,\n  HeartbeatDocument,\n  HeartbeatQuery,\n  LoginMutation,\n  LogoutMutation,\n} from \"../generated/graphql\"\nimport { betterUpdateQuery } from \"./createBetterQuery\"\nimport { invalidateQuerys } from \"./invalidateQuerys\"\n\nexport function mutationUpdates() {\n  return {\n    logout: (\n      result: Data,\n      _args: Variables,\n      cache: Cache,\n      _info: ResolveInfo\n    ) => {\n      betterUpdateQuery<LogoutMutation, HeartbeatQuery>(\n        cache,\n        { query: HeartbeatDocument },\n        result,\n        () => ({ heartBeat: null })\n      )\n    },\n    login: (\n      results: Data,\n      _args: Variables,\n      cache: Cache,\n      _info: ResolveInfo\n    ) => {\n      betterUpdateQuery<LoginMutation, HeartbeatQuery>(\n        cache,\n        { query: HeartbeatDocument },\n        results,\n        (res, que) => {\n          if (res.login.errors) return que\n          return { heartBeat: res.login.admin }\n        }\n      )\n    },\n    saveMeeting: (\n      _result: Data,\n      _args: Variables,\n      cache: Cache,\n      _info: ResolveInfo\n    ) => {\n      invalidateQuerys(cache, \"meetings\")\n    },\n    deleteMeeting: (\n      _result: Data,\n      _args: Variables,\n      cache: Cache,\n      _info: ResolveInfo\n    ) => {\n      invalidateQuerys(cache, \"meetings\")\n    },\n    updateAdmin: (\n      _result: Data,\n      _args: Variables,\n      cache: Cache,\n      _info: ResolveInfo\n    ) => {\n      invalidateQuerys(cache, \"getAdminData\")\n      invalidateQuerys(cache, \"heartBeat\")\n    },\n    deletePlace: (\n      result: Data,\n      args: Variables,\n      cache: Cache,\n      _info: ResolveInfo\n    ) => {\n      betterUpdateQuery<DeletePlaceMutation, GetPlacesQuery>(\n        cache,\n        { query: GetPlacesDocument },\n        result,\n        (_res, que) => {\n          que.getUserPlaces.place = que.getUserPlaces.place?.filter(\n            (pl) => pl.id !== args.placeId\n          )\n          return que\n        }\n      )\n    },\n    addPlace: (\n      result: Data,\n      _args: Variables,\n      cache: Cache,\n      _info: ResolveInfo\n    ) => {\n      betterUpdateQuery<AddPlaceMutation, GetPlacesQuery>(\n        cache,\n        { query: GetPlacesDocument },\n        result,\n        (res, que) => {\n          const place = res.addPlace.place\n          if (!place) return que\n          que.getUserPlaces.place?.unshift(place[0] as any)\n          return que\n        }\n      )\n    },\n  }\n}\n","import { Cache, Data, Variables } from \"@urql/exchange-graphcache\"\nimport {\n  MeetingDeleteSubscription,\n  MeetingsDocument,\n  MeetingsQuery,\n  NewMeetingSubscription,\n} from \"../generated/graphql\"\nimport { betterUpdateQuery } from \"./createBetterQuery\"\n\nexport function subscriptionUpdates() {\n  return {\n    newMeeting: (result: Data, _args: Variables, cache: Cache) => {\n      const variables = {\n        limit: 15,\n        cursor: null as null | string,\n      }\n      betterUpdateQuery<NewMeetingSubscription, MeetingsQuery>(\n        cache,\n        { query: MeetingsDocument, variables },\n        result,\n        (res, que) => {\n          const meeting = res.newMeeting.data\n          if (!meeting) return que\n          if (meeting.isActive === \"true\")\n            que.meetings.meetings.unshift(meeting)\n          else\n            que.meetings.meetings = que.meetings.meetings.filter(\n              (met) => met.id !== meeting.id\n            )\n          return que\n        }\n      )\n    },\n    meetingDelete: (result: Data, _args: Variables, cache: Cache) => {\n      const variables = {\n        limit: 15,\n        cursor: null as null | string,\n      }\n      betterUpdateQuery<MeetingDeleteSubscription, MeetingsQuery>(\n        cache,\n        { query: MeetingsDocument, variables },\n        result,\n        (res, que) => {\n          const meetingId = res.meetingDelete.data\n          if (!meetingId) return que\n\n          que.meetings.meetings = que.meetings.meetings.filter(\n            (met) => met.id !== meetingId\n          )\n          return que\n        }\n      )\n    },\n  }\n}\n","import React from \"react\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useParams,\n} from \"react-router-dom\"\nimport { Provider } from \"urql\"\nimport Question from \"./container/Questions\"\nimport { useClient } from \"./hooks/useClient\"\nimport AdminPage from \"./pages/Admin\"\nimport { ClientListPage } from \"./pages/ClientListPage\"\nimport Confirm from \"./pages/Confirm\"\nimport Dashboard from \"./pages/Dashboard\"\nimport Landing from \"./pages/Landing\"\nimport Login from \"./pages/Login\"\nimport ReservationData from \"./pages/Reservation\"\nimport Settings from \"./pages/Settings\"\nimport UserData from \"./pages/UserData\"\nimport createUrqlClient from \"./urqlClient\"\n\nconst App = () => {\n  return (\n    <Provider value={createUrqlClient()}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/settings\">\n            <Settings />\n          </Route>\n          <Route exact path=\"/aforoAdminPage\">\n            <AdminPage />\n          </Route>\n          <Route exact path=\"/\">\n            <ClientListPage />\n          </Route>\n          <Route exact path=\"/:client\" component={AppRoutes} />\n          <Route exact path=\"/:client/meetings\">\n            <Landing />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  )\n}\n\nconst AppRoutes = () => {\n  const { client }: { client: string } = useParams<{ client: string }>()\n  useClient(client)\n  return (\n    <Router basename={client}>\n      <Switch>\n        <Route exact path=\"/datos/:meetingId\">\n          <UserData />\n        </Route>\n        <Route exact path=\"/questions/:userId\">\n          <Question />\n        </Route>\n        <Route exact path=\"/reservation/:reservationId\">\n          <ReservationData />\n        </Route>\n        <Route exact path=\"/confirm/:userId\">\n          <Confirm />\n        </Route>\n        <Route path=\"/\">\n          <Landing />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// theme.js\nimport { extendTheme } from \"@chakra-ui/react\"\n// Global style overrides\nimport styles from \"./styles\"\nimport { PrimaryButton, DefaultButton } from \"./components/Buttons\"\nimport { brand } from \"./components/general\"\nimport { IconReservation, IconEdit, IconDelete, IconPlus } from \"./components/Icons\"\nimport { Tabs, TabSection } from \"./components/Tabs\"\nimport { Card } from \"./components/Card\"\nimport { Link } from \"./components/Links\"\n\nconst overrides = {\n  styles,\n  fonts: {\n    heading: '\"Lato\", sans-serif',\n    body: '\"Lato\", system-ui, sans-serif',\n    mono: '\"Lato\", Menlo, monospace',\n  },\n  fontWeights: {\n    normal: 400,\n    medium: 600,\n    bold: 800,\n  },\n  // 1 rem = 16px\n  fontSizes: {\n    xs: \"0.75rem\",\n    sm: \"0.875rem\",\n    md: \"1rem\",\n    lg: \"1.125rem\",\n    xl: \"1.25rem\",\n    \"2xl\": \"1.5rem\",\n    \"3xl\": \"1.875rem\",\n    \"4xl\": \"2.25rem\",\n    \"5xl\": \"3rem\",\n    \"6xl\": \"4rem\",\n  },\n  colors: {\n    brand,\n  },\n  components: {\n    PrimaryButton,\n    DefaultButton,\n    IconReservation,\n    IconEdit,\n    IconDelete,\n    IconPlus,\n    Tabs,\n    TabSection,\n    Card,\n    Link\n  },\n  //borders,\n  // Other foundational style overrides go here\n}\nexport default extendTheme(overrides)\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand } from \"./components/general\"\nconst Globals = {\n  global: (props: any) => ({\n    body: {\n      color: mode(app_brand.font, app_brand.darkFont)(props),\n      bg: mode(app_brand.bg, app_brand.darkBg)(props),\n      h1: {\n        color: mode(app_brand.titles, app_brand.darkTitles)(props),\n        fontWeight: \"700\",\n        fontSize: \"large\",\n        marginRight: \"0px\",\n      },\n      h2: {\n        color: mode(app_brand.font, app_brand.darkFont)(props),\n      },\n    },\n  }),\n}\nexport default Globals\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand, btnProps } from \"./general\"\n\nexport const PrimaryButton = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actionsFont, app_brand.darkFont)(props),\n    bg: mode(app_brand.actions, app_brand.darkActions)(props),\n    ...btnProps,\n    fontWeight: 600,\n  }),\n}\n\nexport const DefaultButton = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actions, app_brand.darkActions)(props),\n    border: `1px solid ${mode(\n      app_brand.actions,\n      app_brand.darkActions\n    )(props)}`,\n    ...btnProps,\n  }),\n}\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand, iconBtnProps } from \"./general\"\n\nexport const IconEdit = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actionsFont, app_brand.darkFont)(props),\n    bg: mode(app_brand.actions, app_brand.darkActions)(props),\n    ...iconBtnProps,\n  }),\n}\n\nexport const IconDelete = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actions, app_brand.darkActions)(props),\n    border: `1px solid ${mode(\n      app_brand.actions,\n      app_brand.darkActions\n    )(props)}`,\n    ...iconBtnProps,\n  }),\n}\n\nexport const IconReservation = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actionsFont, app_brand.darkFont)(props),\n    bg: mode(app_brand.actions, app_brand.darkActions)(props),\n    ...iconBtnProps,\n  }),\n}\n\nexport const IconPlus = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.actions, app_brand.darkActions)(props),\n  }),\n}","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand, TabSectionStyles, TabStyles } from \"./general\"\n\nexport const Tabs = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.titles, \"\")(props),\n    bg: mode(app_brand.section, \"\")(props),\n    ...TabStyles,\n  }),\n}\n\nexport const TabSection = {\n  baseStyle: (props: Record<string, any>) => ({\n    color: mode(app_brand.secondIcon, app_brand.darkFont)(props),\n    bg: mode(app_brand.actionsFont, app_brand.darkActions)(props),\n    ...TabSectionStyles,\n  }),\n}\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand } from \"./general\"\n\nexport const Card = {\n  baseStyle: (props: Record<string, any>) => ({\n    bg: mode(\"white\", \"\")(props),\n    borderRadius: \"5%\",\n    padding: \"1rem\",\n    shadow: \"md\",\n    borderWidth: \"1px\",\n    margin: \"0.6rem\",\n    width: \"270px\",\n    height: \"220px\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n  }),\n}\n","import { mode } from \"@chakra-ui/theme-tools\"\nimport { app_brand } from \"./general\"\n\nexport const Link = {\n    baseStyle: (props: Record<string, any>) => ({\n        color: mode(app_brand.titles, app_brand.darkActions)(props),\n        fontWeight: \"600\",\n    }),\n  }\n  ","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport LangContext from \"./context/LangWrapper\"\nimport theme from \"./theme\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <LangContext>\n      <ChakraProvider theme={theme}>\n        <App />\n      </ChakraProvider>\n    </LangContext>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}